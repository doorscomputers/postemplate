Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Runtime.Serialization

Imports PDSA.Validation

''' <summary>
''' This class contains properties for each data value that makes up a dlvry_det.
''' This class is generated by the Haystack Code Generator for .NET.
''' Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
''' </summary>
<DataContract()> _
Partial Public Class dlvry_det
  Inherits PDSAEntityBase

#Region "Constructor"
  ''' <summary>
  ''' Constructor for the dlvry_det class
  ''' </summary>
  Public Sub New()
    MyBase.New()
    
    ClassName = "dlvry_det"
  End Sub
#End Region

  #Region "Private Variables"
  Private _drdetid As Integer = 0
  Private _drid As Integer = 0
  Private _stckid As Integer = 0
  Private _cost As Decimal = 0
  Private _qty As Integer = 0
  Private _freee As Integer = 0
  Private _disc As Integer = 0
  Private _discamnt As Decimal = 0
  Private _drdetamnt As Decimal = 0
  Private _drpck As Integer = 0
  Private _dravlbl As Integer = 0
  Private _preavlbl As Integer = 0
  Private _pcs As Decimal = 0
  Private _sInsertid As String = String.Empty
  Private _dtInsertdt As Date = DateTime.Now
  Private _sLastUpdateid As String = String.Empty
  Private _dtLastUpdatedt As Date = DateTime.Now
  Private _iConcurrencyid As Short = 0
  Private _lotno As String = String.Empty
  Private _expdate As Date = DateTime.Now
#End Region

#Region "Public Properties"
  ''' <summary>
  ''' Get/Set the drdetid value
  ''' </summary>
  <DataMember()> _
  Public Property drdetid() As Integer
    Get
      Return _drdetid
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_drdetid, Value, "drdetid") Then
        _drdetid = Value
        RaisePropertyChanged("drdetid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the drid value
  ''' </summary>
  <DataMember()> _
  Public Property drid() As Integer
    Get
      Return _drid
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_drid, Value, "drid") Then
        _drid = Value
        RaisePropertyChanged("drid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the stckid value
  ''' </summary>
  <DataMember()> _
  Public Property stckid() As Integer
    Get
      Return _stckid
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_stckid, Value, "stckid") Then
        _stckid = Value
        RaisePropertyChanged("stckid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the cost value
  ''' </summary>
  <DataMember()> _
  Public Property cost() As Decimal
    Get
      Return _cost
    End Get
    Set(ByVal Value As Decimal)
      If HasValueChanged(_cost, Value, "cost") Then
        _cost = Value
        RaisePropertyChanged("cost")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the qty value
  ''' </summary>
  <DataMember()> _
  Public Property qty() As Integer
    Get
      Return _qty
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_qty, Value, "qty") Then
        _qty = Value
        RaisePropertyChanged("qty")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the freee value
  ''' </summary>
  <DataMember()> _
  Public Property freee() As Integer
    Get
      Return _freee
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_freee, Value, "freee") Then
        _freee = Value
        RaisePropertyChanged("freee")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the disc value
  ''' </summary>
  <DataMember()> _
  Public Property disc() As Integer
    Get
      Return _disc
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_disc, Value, "disc") Then
        _disc = Value
        RaisePropertyChanged("disc")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the discamnt value
  ''' </summary>
  <DataMember()> _
  Public Property discamnt() As Decimal
    Get
      Return _discamnt
    End Get
    Set(ByVal Value As Decimal)
      If HasValueChanged(_discamnt, Value, "discamnt") Then
        _discamnt = Value
        RaisePropertyChanged("discamnt")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the drdetamnt value
  ''' </summary>
  <DataMember()> _
  Public Property drdetamnt() As Decimal
    Get
      Return _drdetamnt
    End Get
    Set(ByVal Value As Decimal)
      If HasValueChanged(_drdetamnt, Value, "drdetamnt") Then
        _drdetamnt = Value
        RaisePropertyChanged("drdetamnt")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the drpck value
  ''' </summary>
  <DataMember()> _
  Public Property drpck() As Integer
    Get
      Return _drpck
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_drpck, Value, "drpck") Then
        _drpck = Value
        RaisePropertyChanged("drpck")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the dravlbl value
  ''' </summary>
  <DataMember()> _
  Public Property dravlbl() As Integer
    Get
      Return _dravlbl
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_dravlbl, Value, "dravlbl") Then
        _dravlbl = Value
        RaisePropertyChanged("dravlbl")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the preavlbl value
  ''' </summary>
  <DataMember()> _
  Public Property preavlbl() As Integer
    Get
      Return _preavlbl
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_preavlbl, Value, "preavlbl") Then
        _preavlbl = Value
        RaisePropertyChanged("preavlbl")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the pcs value
  ''' </summary>
  <DataMember()> _
  Public Property pcs() As Decimal
    Get
      Return _pcs
    End Get
    Set(ByVal Value As Decimal)
      If HasValueChanged(_pcs, Value, "pcs") Then
        _pcs = Value
        RaisePropertyChanged("pcs")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the sInsertid value
  ''' </summary>
  <DataMember()> _
  Public Property sInsertid() As String
    Get
      Return _sInsertid
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_sInsertid, Value, "sInsert_id") Then
        _sInsertid = Value
        RaisePropertyChanged("sInsertid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the dtInsertdt value
  ''' </summary>
  <DataMember()> _
  Public Property dtInsertdt() As Date
    Get
      Return _dtInsertdt
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_dtInsertdt, Value, "dtInsert_dt") Then
        _dtInsertdt = Value
        RaisePropertyChanged("dtInsertdt")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the sLastUpdateid value
  ''' </summary>
  <DataMember()> _
  Public Property sLastUpdateid() As String
    Get
      Return _sLastUpdateid
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_sLastUpdateid, Value, "sLastUpdate_id") Then
        _sLastUpdateid = Value
        RaisePropertyChanged("sLastUpdateid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the dtLastUpdatedt value
  ''' </summary>
  <DataMember()> _
  Public Property dtLastUpdatedt() As Date
    Get
      Return _dtLastUpdatedt
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_dtLastUpdatedt, Value, "dtLastUpdate_dt") Then
        _dtLastUpdatedt = Value
        RaisePropertyChanged("dtLastUpdatedt")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the iConcurrencyid value
  ''' </summary>
  <DataMember()> _
  Public Property iConcurrencyid() As Short
    Get
      Return _iConcurrencyid
    End Get
    Set(ByVal Value As Short)
      If HasValueChanged(_iConcurrencyid, Value, "iConcurrency_id") Then
        _iConcurrencyid = Value
        RaisePropertyChanged("iConcurrencyid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the lotno value
  ''' </summary>
  <DataMember()> _
  Public Property lotno() As String
    Get
      Return _lotno
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_lotno, Value, "lotno") Then
        _lotno = Value
        RaisePropertyChanged("lotno")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the expdate value
  ''' </summary>
  <DataMember()> _
  Public Property expdate() As Date
    Get
      Return _expdate
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_expdate, Value, "expdate") Then
        _expdate = Value
        RaisePropertyChanged("expdate")
      End If
    End Set
  End Property
#End Region
End Class
