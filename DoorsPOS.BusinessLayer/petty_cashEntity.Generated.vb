Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Runtime.Serialization

Imports PDSA.Validation

''' <summary>
''' This class contains properties for each data value that makes up a petty_cash.
''' This class is generated by the Haystack Code Generator for .NET.
''' Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
''' </summary>
<DataContract()> _
Partial Public Class petty_cash
  Inherits PDSAEntityBase

#Region "Constructor"
  ''' <summary>
  ''' Constructor for the petty_cash class
  ''' </summary>
  Public Sub New()
    MyBase.New()
    
    ClassName = "petty_cash"
  End Sub
#End Region

  #Region "Private Variables"
  Private _pcid As Integer = 0
  Private _posdate As Date = DateTime.Now
  Private _pcamnt As Decimal = 0
  Private _pcrem As String = String.Empty
  Private _cashier As String = String.Empty
  Private _sInsertid As String = String.Empty
  Private _dtInsertdt As Date = DateTime.Now
  Private _sLastUpdateid As String = String.Empty
  Private _dtLastUpdatedt As Date = DateTime.Now
  Private _iConcurrencyid As Short = 0
#End Region

#Region "Public Properties"
  ''' <summary>
  ''' Get/Set the pcid value
  ''' </summary>
  <DataMember()> _
  Public Property pcid() As Integer
    Get
      Return _pcid
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_pcid, Value, "pcid") Then
        _pcid = Value
        RaisePropertyChanged("pcid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the posdate value
  ''' </summary>
  <DataMember()> _
  Public Property posdate() As Date
    Get
      Return _posdate
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_posdate, Value, "posdate") Then
        _posdate = Value
        RaisePropertyChanged("posdate")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the pcamnt value
  ''' </summary>
  <DataMember()> _
  Public Property pcamnt() As Decimal
    Get
      Return _pcamnt
    End Get
    Set(ByVal Value As Decimal)
      If HasValueChanged(_pcamnt, Value, "pcamnt") Then
        _pcamnt = Value
        RaisePropertyChanged("pcamnt")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the pcrem value
  ''' </summary>
  <DataMember()> _
  Public Property pcrem() As String
    Get
      Return _pcrem
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_pcrem, Value, "pcrem") Then
        _pcrem = Value
        RaisePropertyChanged("pcrem")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the cashier value
  ''' </summary>
  <DataMember()> _
  Public Property cashier() As String
    Get
      Return _cashier
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_cashier, Value, "cashier") Then
        _cashier = Value
        RaisePropertyChanged("cashier")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the sInsertid value
  ''' </summary>
  <DataMember()> _
  Public Property sInsertid() As String
    Get
      Return _sInsertid
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_sInsertid, Value, "sInsert_id") Then
        _sInsertid = Value
        RaisePropertyChanged("sInsertid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the dtInsertdt value
  ''' </summary>
  <DataMember()> _
  Public Property dtInsertdt() As Date
    Get
      Return _dtInsertdt
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_dtInsertdt, Value, "dtInsert_dt") Then
        _dtInsertdt = Value
        RaisePropertyChanged("dtInsertdt")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the sLastUpdateid value
  ''' </summary>
  <DataMember()> _
  Public Property sLastUpdateid() As String
    Get
      Return _sLastUpdateid
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_sLastUpdateid, Value, "sLastUpdate_id") Then
        _sLastUpdateid = Value
        RaisePropertyChanged("sLastUpdateid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the dtLastUpdatedt value
  ''' </summary>
  <DataMember()> _
  Public Property dtLastUpdatedt() As Date
    Get
      Return _dtLastUpdatedt
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_dtLastUpdatedt, Value, "dtLastUpdate_dt") Then
        _dtLastUpdatedt = Value
        RaisePropertyChanged("dtLastUpdatedt")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the iConcurrencyid value
  ''' </summary>
  <DataMember()> _
  Public Property iConcurrencyid() As Short
    Get
      Return _iConcurrencyid
    End Get
    Set(ByVal Value As Short)
      If HasValueChanged(_iConcurrencyid, Value, "iConcurrency_id") Then
        _iConcurrencyid = Value
        RaisePropertyChanged("iConcurrencyid")
      End If
    End Set
  End Property
#End Region
End Class
