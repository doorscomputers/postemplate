Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Runtime.Serialization

Imports PDSA.Validation

''' <summary>
''' This class contains properties for each data value that makes up a dlvry_pay.
''' This class is generated by the Haystack Code Generator for .NET.
''' Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
''' </summary>
<DataContract()> _
Partial Public Class dlvry_pay
  Inherits PDSAEntityBase

#Region "Constructor"
  ''' <summary>
  ''' Constructor for the dlvry_pay class
  ''' </summary>
  Public Sub New()
    MyBase.New()
    
    ClassName = "dlvry_pay"
  End Sub
#End Region

  #Region "Private Variables"
  Private _payid As Integer = 0
  Private _paydate As Date = DateTime.Now
  Private _prevbal As Decimal = 0
  Private _amntpaid As Decimal = 0
  Private _chqno As String = String.Empty
  Private _chqdate As Date = DateTime.Now
  Private _supcode As String = String.Empty
  Private _remarks As String = String.Empty
  Private _drinv As String = String.Empty
  Private _sInsertid As String = String.Empty
  Private _dtInsertdt As Date = DateTime.Now
  Private _sLastUpdateid As String = String.Empty
  Private _dtLastUpdatedt As Date = DateTime.Now
  Private _iConcurrencyid As Short = 0
  Private _drid As Integer = 0
#End Region

#Region "Public Properties"
  ''' <summary>
  ''' Get/Set the payid value
  ''' </summary>
  <DataMember()> _
  Public Property payid() As Integer
    Get
      Return _payid
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_payid, Value, "payid") Then
        _payid = Value
        RaisePropertyChanged("payid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the paydate value
  ''' </summary>
  <DataMember()> _
  Public Property paydate() As Date
    Get
      Return _paydate
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_paydate, Value, "paydate") Then
        _paydate = Value
        RaisePropertyChanged("paydate")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the prevbal value
  ''' </summary>
  <DataMember()> _
  Public Property prevbal() As Decimal
    Get
      Return _prevbal
    End Get
    Set(ByVal Value As Decimal)
      If HasValueChanged(_prevbal, Value, "prevbal") Then
        _prevbal = Value
        RaisePropertyChanged("prevbal")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the amntpaid value
  ''' </summary>
  <DataMember()> _
  Public Property amntpaid() As Decimal
    Get
      Return _amntpaid
    End Get
    Set(ByVal Value As Decimal)
      If HasValueChanged(_amntpaid, Value, "amntpaid") Then
        _amntpaid = Value
        RaisePropertyChanged("amntpaid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the chqno value
  ''' </summary>
  <DataMember()> _
  Public Property chqno() As String
    Get
      Return _chqno
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_chqno, Value, "chqno") Then
        _chqno = Value
        RaisePropertyChanged("chqno")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the chqdate value
  ''' </summary>
  <DataMember()> _
  Public Property chqdate() As Date
    Get
      Return _chqdate
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_chqdate, Value, "chqdate") Then
        _chqdate = Value
        RaisePropertyChanged("chqdate")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the supcode value
  ''' </summary>
  <DataMember()> _
  Public Property supcode() As String
    Get
      Return _supcode
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_supcode, Value, "supcode") Then
        _supcode = Value
        RaisePropertyChanged("supcode")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the remarks value
  ''' </summary>
  <DataMember()> _
  Public Property remarks() As String
    Get
      Return _remarks
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_remarks, Value, "remarks") Then
        _remarks = Value
        RaisePropertyChanged("remarks")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the drinv value
  ''' </summary>
  <DataMember()> _
  Public Property drinv() As String
    Get
      Return _drinv
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_drinv, Value, "drinv") Then
        _drinv = Value
        RaisePropertyChanged("drinv")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the sInsertid value
  ''' </summary>
  <DataMember()> _
  Public Property sInsertid() As String
    Get
      Return _sInsertid
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_sInsertid, Value, "sInsert_id") Then
        _sInsertid = Value
        RaisePropertyChanged("sInsertid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the dtInsertdt value
  ''' </summary>
  <DataMember()> _
  Public Property dtInsertdt() As Date
    Get
      Return _dtInsertdt
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_dtInsertdt, Value, "dtInsert_dt") Then
        _dtInsertdt = Value
        RaisePropertyChanged("dtInsertdt")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the sLastUpdateid value
  ''' </summary>
  <DataMember()> _
  Public Property sLastUpdateid() As String
    Get
      Return _sLastUpdateid
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_sLastUpdateid, Value, "sLastUpdate_id") Then
        _sLastUpdateid = Value
        RaisePropertyChanged("sLastUpdateid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the dtLastUpdatedt value
  ''' </summary>
  <DataMember()> _
  Public Property dtLastUpdatedt() As Date
    Get
      Return _dtLastUpdatedt
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_dtLastUpdatedt, Value, "dtLastUpdate_dt") Then
        _dtLastUpdatedt = Value
        RaisePropertyChanged("dtLastUpdatedt")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the iConcurrencyid value
  ''' </summary>
  <DataMember()> _
  Public Property iConcurrencyid() As Short
    Get
      Return _iConcurrencyid
    End Get
    Set(ByVal Value As Short)
      If HasValueChanged(_iConcurrencyid, Value, "iConcurrency_id") Then
        _iConcurrencyid = Value
        RaisePropertyChanged("iConcurrencyid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the drid value
  ''' </summary>
  <DataMember()> _
  Public Property drid() As Integer
    Get
      Return _drid
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_drid, Value, "drid") Then
        _drid = Value
        RaisePropertyChanged("drid")
      End If
    End Set
  End Property
#End Region
End Class
