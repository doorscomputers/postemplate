Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Runtime.Serialization

Imports PDSA.Validation

''' <summary>
''' This class contains properties for each data value that makes up a dlvryhdrtmp.
''' This class is generated by the Haystack Code Generator for .NET.
''' Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
''' </summary>
<DataContract()> _
Partial Public Class dlvryhdrtmp
  Inherits PDSAEntityBase

#Region "Constructor"
  ''' <summary>
  ''' Constructor for the dlvryhdrtmp class
  ''' </summary>
  Public Sub New()
    MyBase.New()
    
    ClassName = "dlvryhdrtmp"
  End Sub
#End Region

  #Region "Private Variables"
  Private _dridtmp As Integer = 0
  Private _drdate As Date = DateTime.Now
  Private _drinv As String = String.Empty
  Private _supcode As Integer = 0
  Private _terms As Short = 0
  Private _drdue As Date = DateTime.Now
  Private _dramnt As Decimal = 0
  Private _drdisc As Integer = 0
  Private _drdscamnt As Decimal = 0
  Private _drsubtot As Decimal = 0
  Private _drbal As Decimal = 0
  Private _paid As Boolean? = False
  Private _drpsted As Boolean? = False
  Private _ttype As String = String.Empty
  Private _sInsertid As String = String.Empty
  Private _dtInsertdt As Date = DateTime.Now
  Private _sLastUpdateid As String = String.Empty
  Private _dtLastUpdatedt As Date = DateTime.Now
  Private _iConcurrencyid As Short = 0
#End Region

#Region "Public Properties"
  ''' <summary>
  ''' Get/Set the dridtmp value
  ''' </summary>
  <DataMember()> _
  Public Property dridtmp() As Integer
    Get
      Return _dridtmp
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_dridtmp, Value, "dridtmp") Then
        _dridtmp = Value
        RaisePropertyChanged("dridtmp")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the drdate value
  ''' </summary>
  <DataMember()> _
  Public Property drdate() As Date
    Get
      Return _drdate
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_drdate, Value, "drdate") Then
        _drdate = Value
        RaisePropertyChanged("drdate")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the drinv value
  ''' </summary>
  <DataMember()> _
  Public Property drinv() As String
    Get
      Return _drinv
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_drinv, Value, "drinv") Then
        _drinv = Value
        RaisePropertyChanged("drinv")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the supcode value
  ''' </summary>
  <DataMember()> _
  Public Property supcode() As Integer
    Get
      Return _supcode
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_supcode, Value, "supcode") Then
        _supcode = Value
        RaisePropertyChanged("supcode")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the terms value
  ''' </summary>
  <DataMember()> _
  Public Property terms() As Short
    Get
      Return _terms
    End Get
    Set(ByVal Value As Short)
      If HasValueChanged(_terms, Value, "terms") Then
        _terms = Value
        RaisePropertyChanged("terms")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the drdue value
  ''' </summary>
  <DataMember()> _
  Public Property drdue() As Date
    Get
      Return _drdue
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_drdue, Value, "drdue") Then
        _drdue = Value
        RaisePropertyChanged("drdue")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the dramnt value
  ''' </summary>
  <DataMember()> _
  Public Property dramnt() As Decimal
    Get
      Return _dramnt
    End Get
    Set(ByVal Value As Decimal)
      If HasValueChanged(_dramnt, Value, "dramnt") Then
        _dramnt = Value
        RaisePropertyChanged("dramnt")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the drdisc value
  ''' </summary>
  <DataMember()> _
  Public Property drdisc() As Integer
    Get
      Return _drdisc
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_drdisc, Value, "drdisc") Then
        _drdisc = Value
        RaisePropertyChanged("drdisc")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the drdscamnt value
  ''' </summary>
  <DataMember()> _
  Public Property drdscamnt() As Decimal
    Get
      Return _drdscamnt
    End Get
    Set(ByVal Value As Decimal)
      If HasValueChanged(_drdscamnt, Value, "drdscamnt") Then
        _drdscamnt = Value
        RaisePropertyChanged("drdscamnt")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the drsubtot value
  ''' </summary>
  <DataMember()> _
  Public Property drsubtot() As Decimal
    Get
      Return _drsubtot
    End Get
    Set(ByVal Value As Decimal)
      If HasValueChanged(_drsubtot, Value, "drsubtot") Then
        _drsubtot = Value
        RaisePropertyChanged("drsubtot")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the drbal value
  ''' </summary>
  <DataMember()> _
  Public Property drbal() As Decimal
    Get
      Return _drbal
    End Get
    Set(ByVal Value As Decimal)
      If HasValueChanged(_drbal, Value, "drbal") Then
        _drbal = Value
        RaisePropertyChanged("drbal")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the paid value
  ''' </summary>
  <DataMember()> _
  Public Property paid() As Boolean?
    Get
      Return _paid
    End Get
    Set(ByVal Value As Boolean?)
      If HasValueChanged(_paid, Value, "paid") Then
        _paid = Value
        RaisePropertyChanged("paid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the drpsted value
  ''' </summary>
  <DataMember()> _
  Public Property drpsted() As Boolean?
    Get
      Return _drpsted
    End Get
    Set(ByVal Value As Boolean?)
      If HasValueChanged(_drpsted, Value, "drpsted") Then
        _drpsted = Value
        RaisePropertyChanged("drpsted")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the ttype value
  ''' </summary>
  <DataMember()> _
  Public Property ttype() As String
    Get
      Return _ttype
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_ttype, Value, "ttype") Then
        _ttype = Value
        RaisePropertyChanged("ttype")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the sInsertid value
  ''' </summary>
  <DataMember()> _
  Public Property sInsertid() As String
    Get
      Return _sInsertid
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_sInsertid, Value, "sInsert_id") Then
        _sInsertid = Value
        RaisePropertyChanged("sInsertid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the dtInsertdt value
  ''' </summary>
  <DataMember()> _
  Public Property dtInsertdt() As Date
    Get
      Return _dtInsertdt
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_dtInsertdt, Value, "dtInsert_dt") Then
        _dtInsertdt = Value
        RaisePropertyChanged("dtInsertdt")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the sLastUpdateid value
  ''' </summary>
  <DataMember()> _
  Public Property sLastUpdateid() As String
    Get
      Return _sLastUpdateid
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_sLastUpdateid, Value, "sLastUpdate_id") Then
        _sLastUpdateid = Value
        RaisePropertyChanged("sLastUpdateid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the dtLastUpdatedt value
  ''' </summary>
  <DataMember()> _
  Public Property dtLastUpdatedt() As Date
    Get
      Return _dtLastUpdatedt
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_dtLastUpdatedt, Value, "dtLastUpdate_dt") Then
        _dtLastUpdatedt = Value
        RaisePropertyChanged("dtLastUpdatedt")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the iConcurrencyid value
  ''' </summary>
  <DataMember()> _
  Public Property iConcurrencyid() As Short
    Get
      Return _iConcurrencyid
    End Get
    Set(ByVal Value As Short)
      If HasValueChanged(_iConcurrencyid, Value, "iConcurrency_id") Then
        _iConcurrencyid = Value
        RaisePropertyChanged("iConcurrencyid")
      End If
    End Set
  End Property
#End Region
End Class
