Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Runtime.Serialization

Imports PDSA.Validation

''' <summary>
''' This class contains properties for each data value that makes up a transfer_hdr.
''' This class is generated by the Haystack Code Generator for .NET.
''' Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
''' </summary>
<DataContract()> _
Partial Public Class transfer_hdr
  Inherits PDSAEntityBase

#Region "Constructor"
  ''' <summary>
  ''' Constructor for the transfer_hdr class
  ''' </summary>
  Public Sub New()
    MyBase.New()
    
    ClassName = "transfer_hdr"
  End Sub
#End Region

  #Region "Private Variables"
  Private _tid As Integer = 0
  Private _TransferNo As Integer = 0
  Private _tdate As Date = DateTime.Now
  Private _tamnt As Decimal = 0
  Private _locid As Integer = 0
  Private _sInsertid As String = String.Empty
  Private _dtInsertdt As Date = DateTime.Now
  Private _sLastUpdateid As String = String.Empty
  Private _dtLastUpdatedt As Date = DateTime.Now
  Private _iConcurrencyid As Short = 0
#End Region

#Region "Public Properties"
  ''' <summary>
  ''' Get/Set the tid value
  ''' </summary>
  <DataMember()> _
  Public Property tid() As Integer
    Get
      Return _tid
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_tid, Value, "tid") Then
        _tid = Value
        RaisePropertyChanged("tid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the TransferNo value
  ''' </summary>
  <DataMember()> _
  Public Property TransferNo() As Integer
    Get
      Return _TransferNo
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_TransferNo, Value, "TransferNo") Then
        _TransferNo = Value
        RaisePropertyChanged("TransferNo")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the tdate value
  ''' </summary>
  <DataMember()> _
  Public Property tdate() As Date
    Get
      Return _tdate
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_tdate, Value, "tdate") Then
        _tdate = Value
        RaisePropertyChanged("tdate")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the tamnt value
  ''' </summary>
  <DataMember()> _
  Public Property tamnt() As Decimal
    Get
      Return _tamnt
    End Get
    Set(ByVal Value As Decimal)
      If HasValueChanged(_tamnt, Value, "tamnt") Then
        _tamnt = Value
        RaisePropertyChanged("tamnt")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the locid value
  ''' </summary>
  <DataMember()> _
  Public Property locid() As Integer
    Get
      Return _locid
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_locid, Value, "locid") Then
        _locid = Value
        RaisePropertyChanged("locid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the sInsertid value
  ''' </summary>
  <DataMember()> _
  Public Property sInsertid() As String
    Get
      Return _sInsertid
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_sInsertid, Value, "sInsert_id") Then
        _sInsertid = Value
        RaisePropertyChanged("sInsertid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the dtInsertdt value
  ''' </summary>
  <DataMember()> _
  Public Property dtInsertdt() As Date
    Get
      Return _dtInsertdt
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_dtInsertdt, Value, "dtInsert_dt") Then
        _dtInsertdt = Value
        RaisePropertyChanged("dtInsertdt")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the sLastUpdateid value
  ''' </summary>
  <DataMember()> _
  Public Property sLastUpdateid() As String
    Get
      Return _sLastUpdateid
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_sLastUpdateid, Value, "sLastUpdate_id") Then
        _sLastUpdateid = Value
        RaisePropertyChanged("sLastUpdateid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the dtLastUpdatedt value
  ''' </summary>
  <DataMember()> _
  Public Property dtLastUpdatedt() As Date
    Get
      Return _dtLastUpdatedt
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_dtLastUpdatedt, Value, "dtLastUpdate_dt") Then
        _dtLastUpdatedt = Value
        RaisePropertyChanged("dtLastUpdatedt")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the iConcurrencyid value
  ''' </summary>
  <DataMember()> _
  Public Property iConcurrencyid() As Short
    Get
      Return _iConcurrencyid
    End Get
    Set(ByVal Value As Short)
      If HasValueChanged(_iConcurrencyid, Value, "iConcurrency_id") Then
        _iConcurrencyid = Value
        RaisePropertyChanged("iConcurrencyid")
      End If
    End Set
  End Property
#End Region
End Class
