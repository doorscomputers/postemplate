Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Runtime.Serialization

Imports PDSA.Validation

''' <summary>
''' This class contains properties for each data value that makes up a AdvPayment.
''' This class is generated by the Haystack Code Generator for .NET.
''' Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
''' </summary>
<DataContract()> _
Partial Public Class AdvPayment
  Inherits PDSAEntityBase

#Region "Constructor"
  ''' <summary>
  ''' Constructor for the AdvPayment class
  ''' </summary>
  Public Sub New()
    MyBase.New()
    
    ClassName = "AdvPayment"
  End Sub
#End Region

  #Region "Private Variables"
  Private _advid As Integer = 0
  Private _datepaid As Date = DateTime.Now
  Private _custid As Integer = 0
  Private _amountpaid As Decimal = 0
  Private _claimed As Boolean? = False
  Private _Remarks As String = String.Empty
  Private _sInsertid As String = String.Empty
  Private _dtInsertdt As Date = DateTime.Now
  Private _sLastUpdateid As String = String.Empty
  Private _dtLastUpdatedt As Date = DateTime.Now
  Private _iConcurrencyid As Short = 0
#End Region

#Region "Public Properties"
  ''' <summary>
  ''' Get/Set the advid value
  ''' </summary>
  <DataMember()> _
  Public Property advid() As Integer
    Get
      Return _advid
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_advid, Value, "advid") Then
        _advid = Value
        RaisePropertyChanged("advid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the datepaid value
  ''' </summary>
  <DataMember()> _
  Public Property datepaid() As Date
    Get
      Return _datepaid
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_datepaid, Value, "datepaid") Then
        _datepaid = Value
        RaisePropertyChanged("datepaid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the custid value
  ''' </summary>
  <DataMember()> _
  Public Property custid() As Integer
    Get
      Return _custid
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_custid, Value, "custid") Then
        _custid = Value
        RaisePropertyChanged("custid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the amountpaid value
  ''' </summary>
  <DataMember()> _
  Public Property amountpaid() As Decimal
    Get
      Return _amountpaid
    End Get
    Set(ByVal Value As Decimal)
      If HasValueChanged(_amountpaid, Value, "amountpaid") Then
        _amountpaid = Value
        RaisePropertyChanged("amountpaid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the claimed value
  ''' </summary>
  <DataMember()> _
  Public Property claimed() As Boolean?
    Get
      Return _claimed
    End Get
    Set(ByVal Value As Boolean?)
      If HasValueChanged(_claimed, Value, "claimed") Then
        _claimed = Value
        RaisePropertyChanged("claimed")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the Remarks value
  ''' </summary>
  <DataMember()> _
  Public Property Remarks() As String
    Get
      Return _Remarks
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_Remarks, Value, "Remarks") Then
        _Remarks = Value
        RaisePropertyChanged("Remarks")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the sInsertid value
  ''' </summary>
  <DataMember()> _
  Public Property sInsertid() As String
    Get
      Return _sInsertid
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_sInsertid, Value, "sInsert_id") Then
        _sInsertid = Value
        RaisePropertyChanged("sInsertid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the dtInsertdt value
  ''' </summary>
  <DataMember()> _
  Public Property dtInsertdt() As Date
    Get
      Return _dtInsertdt
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_dtInsertdt, Value, "dtInsert_dt") Then
        _dtInsertdt = Value
        RaisePropertyChanged("dtInsertdt")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the sLastUpdateid value
  ''' </summary>
  <DataMember()> _
  Public Property sLastUpdateid() As String
    Get
      Return _sLastUpdateid
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_sLastUpdateid, Value, "sLastUpdate_id") Then
        _sLastUpdateid = Value
        RaisePropertyChanged("sLastUpdateid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the dtLastUpdatedt value
  ''' </summary>
  <DataMember()> _
  Public Property dtLastUpdatedt() As Date
    Get
      Return _dtLastUpdatedt
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_dtLastUpdatedt, Value, "dtLastUpdate_dt") Then
        _dtLastUpdatedt = Value
        RaisePropertyChanged("dtLastUpdatedt")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the iConcurrencyid value
  ''' </summary>
  <DataMember()> _
  Public Property iConcurrencyid() As Short
    Get
      Return _iConcurrencyid
    End Get
    Set(ByVal Value As Short)
      If HasValueChanged(_iConcurrencyid, Value, "iConcurrency_id") Then
        _iConcurrencyid = Value
        RaisePropertyChanged("iConcurrencyid")
      End If
    End Set
  End Property
#End Region
End Class
