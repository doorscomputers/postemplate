Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Runtime.Serialization

Imports PDSA.Validation

''' <summary>
''' This class contains properties for each data value that makes up a posstocks.
''' This class is generated by the Haystack Code Generator for .NET.
''' Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
''' </summary>
<DataContract()> _
Partial Public Class posstocks
  Inherits PDSAEntityBase

#Region "Constructor"
  ''' <summary>
  ''' Constructor for the posstocks class
  ''' </summary>
  Public Sub New()
    MyBase.New()
    
    ClassName = "posstocks"
  End Sub
#End Region

  #Region "Private Variables"
  Private _stckid As Integer = 0
  Private _itemdesc As String = String.Empty
  Private _available As Double = 0
  Private _retail As Decimal = 0
  Private _retail2 As Decimal = 0
  Private _sInsertid As String = String.Empty
  Private _packaging As Double = 0
  Private _barcode As String = String.Empty
#End Region

#Region "Public Properties"
  ''' <summary>
  ''' Get/Set the stckid value
  ''' </summary>
  <DataMember()> _
  Public Property stckid() As Integer
    Get
      Return _stckid
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_stckid, Value, "stckid") Then
        _stckid = Value
        RaisePropertyChanged("stckid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the itemdesc value
  ''' </summary>
  <DataMember()> _
  Public Property itemdesc() As String
    Get
      Return _itemdesc
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_itemdesc, Value, "item_desc") Then
        _itemdesc = Value
        RaisePropertyChanged("itemdesc")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the available value
  ''' </summary>
  <DataMember()> _
  Public Property available() As Double
    Get
      Return _available
    End Get
    Set(ByVal Value As Double)
      If HasValueChanged(_available, Value, "available") Then
        _available = Value
        RaisePropertyChanged("available")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the retail value
  ''' </summary>
  <DataMember()> _
  Public Property retail() As Decimal
    Get
      Return _retail
    End Get
    Set(ByVal Value As Decimal)
      If HasValueChanged(_retail, Value, "retail") Then
        _retail = Value
        RaisePropertyChanged("retail")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the retail2 value
  ''' </summary>
  <DataMember()> _
  Public Property retail2() As Decimal
    Get
      Return _retail2
    End Get
    Set(ByVal Value As Decimal)
      If HasValueChanged(_retail2, Value, "retail2") Then
        _retail2 = Value
        RaisePropertyChanged("retail2")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the sInsertid value
  ''' </summary>
  <DataMember()> _
  Public Property sInsertid() As String
    Get
      Return _sInsertid
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_sInsertid, Value, "sInsertid") Then
        _sInsertid = Value
        RaisePropertyChanged("sInsertid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the packaging value
  ''' </summary>
  <DataMember()> _
  Public Property packaging() As Double
    Get
      Return _packaging
    End Get
    Set(ByVal Value As Double)
      If HasValueChanged(_packaging, Value, "packaging") Then
        _packaging = Value
        RaisePropertyChanged("packaging")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the barcode value
  ''' </summary>
  <DataMember()> _
  Public Property barcode() As String
    Get
      Return _barcode
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_barcode, Value, "barcode") Then
        _barcode = Value
        RaisePropertyChanged("barcode")
      End If
    End Set
  End Property
#End Region
End Class
