Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Runtime.Serialization

Imports PDSA.Validation

''' <summary>
''' This class contains properties for each data value that makes up a members.
''' This class is generated by the Haystack Code Generator for .NET.
''' Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
''' </summary>
<DataContract()> _
Partial Public Class members
  Inherits PDSAEntityBase

#Region "Constructor"
  ''' <summary>
  ''' Constructor for the members class
  ''' </summary>
  Public Sub New()
    MyBase.New()
    
    ClassName = "members"
  End Sub
#End Region

  #Region "Private Variables"
  Private _CustID As Integer = 0
  Private _lastname As String = String.Empty
  Private _firstname As String = String.Empty
  Private _middlename As String = String.Empty
  Private _address1 As String = String.Empty
  Private _address2 As String = String.Empty
  Private _address3 As String = String.Empty
  Private _contactno As String = String.Empty
  Private _idnum As String = String.Empty
  Private _pointdiv As Integer = 0
  Private _poynts As Decimal = 0
  Private _pa As Decimal = 0
  Private _Balance As Decimal = 0
  Private _sInsertid As String = String.Empty
  Private _dtInsertdt As Date = DateTime.Now
  Private _sLastUpdateid As String = String.Empty
  Private _dtLastUpdatedt As Date = DateTime.Now
  Private _iConcurrencyid As Short = 0
#End Region

#Region "Public Properties"
  ''' <summary>
  ''' Get/Set the CustID value
  ''' </summary>
  <DataMember()> _
  Public Property CustID() As Integer
    Get
      Return _CustID
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_CustID, Value, "CustID") Then
        _CustID = Value
        RaisePropertyChanged("CustID")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the lastname value
  ''' </summary>
  <DataMember()> _
  Public Property lastname() As String
    Get
      Return _lastname
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_lastname, Value, "lastname") Then
        _lastname = Value
        RaisePropertyChanged("lastname")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the firstname value
  ''' </summary>
  <DataMember()> _
  Public Property firstname() As String
    Get
      Return _firstname
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_firstname, Value, "firstname") Then
        _firstname = Value
        RaisePropertyChanged("firstname")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the middlename value
  ''' </summary>
  <DataMember()> _
  Public Property middlename() As String
    Get
      Return _middlename
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_middlename, Value, "middlename") Then
        _middlename = Value
        RaisePropertyChanged("middlename")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the address1 value
  ''' </summary>
  <DataMember()> _
  Public Property address1() As String
    Get
      Return _address1
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_address1, Value, "address1") Then
        _address1 = Value
        RaisePropertyChanged("address1")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the address2 value
  ''' </summary>
  <DataMember()> _
  Public Property address2() As String
    Get
      Return _address2
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_address2, Value, "address2") Then
        _address2 = Value
        RaisePropertyChanged("address2")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the address3 value
  ''' </summary>
  <DataMember()> _
  Public Property address3() As String
    Get
      Return _address3
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_address3, Value, "address3") Then
        _address3 = Value
        RaisePropertyChanged("address3")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the contactno value
  ''' </summary>
  <DataMember()> _
  Public Property contactno() As String
    Get
      Return _contactno
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_contactno, Value, "contact_no") Then
        _contactno = Value
        RaisePropertyChanged("contactno")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the idnum value
  ''' </summary>
  <DataMember()> _
  Public Property idnum() As String
    Get
      Return _idnum
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_idnum, Value, "id_num") Then
        _idnum = Value
        RaisePropertyChanged("idnum")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the pointdiv value
  ''' </summary>
  <DataMember()> _
  Public Property pointdiv() As Integer
    Get
      Return _pointdiv
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_pointdiv, Value, "point_div") Then
        _pointdiv = Value
        RaisePropertyChanged("pointdiv")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the poynts value
  ''' </summary>
  <DataMember()> _
  Public Property poynts() As Decimal
    Get
      Return _poynts
    End Get
    Set(ByVal Value As Decimal)
      If HasValueChanged(_poynts, Value, "poynts") Then
        _poynts = Value
        RaisePropertyChanged("poynts")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the pa value
  ''' </summary>
  <DataMember()> _
  Public Property pa() As Decimal
    Get
      Return _pa
    End Get
    Set(ByVal Value As Decimal)
      If HasValueChanged(_pa, Value, "pa") Then
        _pa = Value
        RaisePropertyChanged("pa")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the Balance value
  ''' </summary>
  <DataMember()> _
  Public Property Balance() As Decimal
    Get
      Return _Balance
    End Get
    Set(ByVal Value As Decimal)
      If HasValueChanged(_Balance, Value, "Balance") Then
        _Balance = Value
        RaisePropertyChanged("Balance")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the sInsertid value
  ''' </summary>
  <DataMember()> _
  Public Property sInsertid() As String
    Get
      Return _sInsertid
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_sInsertid, Value, "sInsert_id") Then
        _sInsertid = Value
        RaisePropertyChanged("sInsertid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the dtInsertdt value
  ''' </summary>
  <DataMember()> _
  Public Property dtInsertdt() As Date
    Get
      Return _dtInsertdt
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_dtInsertdt, Value, "dtInsert_dt") Then
        _dtInsertdt = Value
        RaisePropertyChanged("dtInsertdt")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the sLastUpdateid value
  ''' </summary>
  <DataMember()> _
  Public Property sLastUpdateid() As String
    Get
      Return _sLastUpdateid
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_sLastUpdateid, Value, "sLastUpdate_id") Then
        _sLastUpdateid = Value
        RaisePropertyChanged("sLastUpdateid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the dtLastUpdatedt value
  ''' </summary>
  <DataMember()> _
  Public Property dtLastUpdatedt() As Date
    Get
      Return _dtLastUpdatedt
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_dtLastUpdatedt, Value, "dtLastUpdate_dt") Then
        _dtLastUpdatedt = Value
        RaisePropertyChanged("dtLastUpdatedt")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the iConcurrencyid value
  ''' </summary>
  <DataMember()> _
  Public Property iConcurrencyid() As Short
    Get
      Return _iConcurrencyid
    End Get
    Set(ByVal Value As Short)
      If HasValueChanged(_iConcurrencyid, Value, "iConcurrency_id") Then
        _iConcurrencyid = Value
        RaisePropertyChanged("iConcurrencyid")
      End If
    End Set
  End Property
#End Region
End Class
