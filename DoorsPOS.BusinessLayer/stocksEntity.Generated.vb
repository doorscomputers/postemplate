Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Runtime.Serialization

Imports PDSA.Validation

''' <summary>
''' This class contains properties for each data value that makes up a stocks.
''' This class is generated by the Haystack Code Generator for .NET.
''' Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
''' </summary>
<DataContract()> _
Partial Public Class stocks
    Inherits PDSAEntityBase

#Region "Constructor"
    ''' <summary>
    ''' Constructor for the stocks class
    ''' </summary>
    Public Sub New()
        MyBase.New()

        ClassName = "stocks"
    End Sub
#End Region

#Region "Private Variables"
    Private _stckid As Integer = 0
    Private _barcode As String = String.Empty
    Private _itemdesc As String = String.Empty
    Private _available As Double = 0
    Private _pckgqty As Double = 0
    Private _packaging As Double = 0
    Private _supcode As Integer = 0
    Private _categoryid As Integer = 0
    Private _beginvstock As Decimal = 0
    Private _dept As Integer = 0
    Private _pckgcost As Decimal = 0
    Private _cost As Decimal = 0
    Private _retail As Decimal = 0
    Private _wsale As Decimal = 0
    Private _markup As Double = 0
    Private _markup2 As Double = 0
    Private _retail2 As Decimal = 0
    Private _minimum As Double = 0
    Private _lastprice As Decimal = 0
    Private _lastdlvry As Date = DateTime.Now
    Private _maximum As Double = 0
    Private _sravlbl As Double = 0
    Private _srpckqty As Double = 0
    Private _srdlvry As Double = 0
    Private _sizeid As Integer = 0
    Private _sInsertid As String = String.Empty
    Private _dtInsertdt As Date = DateTime.Now
    Private _sLastUpdateid As String = String.Empty
    Private _dtLastUpdatedt As Date = DateTime.Now
    Private _iConcurrencyid As Short = 0
    Private _lastcost As Decimal = 0
    Private _lastwholesale As Decimal = 0
    Private _incentive As Decimal = 0
    Private _active As Boolean? = False
    Private _vat As Integer = 1
    Private _markup3 As Double = 0
    Private _markup4 As Double = 0
    Private _markup5 As Double = 0
    Private _retail3 As Decimal = 0
    Private _retail4 As Decimal = 0
    Private _retail5 As Decimal = 0
#End Region

#Region "Public Properties"
    ''' <summary>
    ''' Get/Set the stckid value
    ''' </summary>
    <DataMember()> _
    Public Property stckid() As Integer
        Get
            Return _stckid
        End Get
        Set(ByVal Value As Integer)
            If HasValueChanged(_stckid, Value, "stckid") Then
                _stckid = Value
                RaisePropertyChanged("stckid")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the barcode value
    ''' </summary>
    <DataMember()> _
    Public Property barcode() As String
        Get
            Return _barcode
        End Get
        Set(ByVal Value As String)
            If HasValueChanged(_barcode, Value, "barcode") Then
                _barcode = Value
                RaisePropertyChanged("barcode")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the itemdesc value
    ''' </summary>
    <DataMember()> _
    Public Property itemdesc() As String
        Get
            Return _itemdesc
        End Get
        Set(ByVal Value As String)
            If HasValueChanged(_itemdesc, Value, "item_desc") Then
                _itemdesc = Value
                RaisePropertyChanged("itemdesc")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the available value
    ''' </summary>
    <DataMember()> _
    Public Property available() As Double
        Get
            Return _available
        End Get
        Set(ByVal Value As Double)
            If HasValueChanged(_available, Value, "available") Then
                _available = Value
                RaisePropertyChanged("available")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the pckgqty value
    ''' </summary>
    <DataMember()> _
    Public Property pckgqty() As Double
        Get
            Return _pckgqty
        End Get
        Set(ByVal Value As Double)
            If HasValueChanged(_pckgqty, Value, "pckgqty") Then
                _pckgqty = Value
                RaisePropertyChanged("pckgqty")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the packaging value
    ''' </summary>
    <DataMember()> _
    Public Property packaging() As Double
        Get
            Return _packaging
        End Get
        Set(ByVal Value As Double)
            If HasValueChanged(_packaging, Value, "packaging") Then
                _packaging = Value
                RaisePropertyChanged("packaging")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the supcode value
    ''' </summary>
    <DataMember()> _
    Public Property supcode() As Integer
        Get
            Return _supcode
        End Get
        Set(ByVal Value As Integer)
            If HasValueChanged(_supcode, Value, "supcode") Then
                _supcode = Value
                RaisePropertyChanged("supcode")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the categoryid value
    ''' </summary>
    <DataMember()> _
    Public Property categoryid() As Integer
        Get
            Return _categoryid
        End Get
        Set(ByVal Value As Integer)
            If HasValueChanged(_categoryid, Value, "categoryid") Then
                _categoryid = Value
                RaisePropertyChanged("categoryid")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the beginvstock value
    ''' </summary>
    <DataMember()> _
    Public Property beginvstock() As Decimal
        Get
            Return _beginvstock
        End Get
        Set(ByVal Value As Decimal)
            If HasValueChanged(_beginvstock, Value, "beginvstock") Then
                _beginvstock = Value
                RaisePropertyChanged("beginvstock")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the dept value
    ''' </summary>
    <DataMember()> _
    Public Property dept() As Integer
        Get
            Return _dept
        End Get
        Set(ByVal Value As Integer)
            If HasValueChanged(_dept, Value, "dept") Then
                _dept = Value
                RaisePropertyChanged("dept")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the pckgcost value
    ''' </summary>
    <DataMember()> _
    Public Property pckgcost() As Decimal
        Get
            Return _pckgcost
        End Get
        Set(ByVal Value As Decimal)
            If HasValueChanged(_pckgcost, Value, "pckg_cost") Then
                _pckgcost = Value
                RaisePropertyChanged("pckgcost")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the cost value
    ''' </summary>
    <DataMember()> _
    Public Property cost() As Decimal
        Get
            Return _cost
        End Get
        Set(ByVal Value As Decimal)
            If HasValueChanged(_cost, Value, "cost") Then
                _cost = Value
                RaisePropertyChanged("cost")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the retail value
    ''' </summary>
    <DataMember()> _
    Public Property retail() As Decimal
        Get
            Return _retail
        End Get
        Set(ByVal Value As Decimal)
            If HasValueChanged(_retail, Value, "retail") Then
                _retail = Value
                RaisePropertyChanged("retail")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the wsale value
    ''' </summary>
    <DataMember()> _
    Public Property wsale() As Decimal
        Get
            Return _wsale
        End Get
        Set(ByVal Value As Decimal)
            If HasValueChanged(_wsale, Value, "wsale") Then
                _wsale = Value
                RaisePropertyChanged("wsale")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the markup value
    ''' </summary>
    <DataMember()> _
    Public Property markup() As Double
        Get
            Return _markup
        End Get
        Set(ByVal Value As Double)
            If HasValueChanged(_markup, Value, "markup") Then
                _markup = Value
                RaisePropertyChanged("markup")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the markup2 value
    ''' </summary>
    <DataMember()> _
    Public Property markup2() As Double
        Get
            Return _markup2
        End Get
        Set(ByVal Value As Double)
            If HasValueChanged(_markup2, Value, "markup2") Then
                _markup2 = Value
                RaisePropertyChanged("markup2")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the retail2 value
    ''' </summary>
    <DataMember()> _
    Public Property retail2() As Decimal
        Get
            Return _retail2
        End Get
        Set(ByVal Value As Decimal)
            If HasValueChanged(_retail2, Value, "retail2") Then
                _retail2 = Value
                RaisePropertyChanged("retail2")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the minimum value
    ''' </summary>
    <DataMember()> _
    Public Property minimum() As Double
        Get
            Return _minimum
        End Get
        Set(ByVal Value As Double)
            If HasValueChanged(_minimum, Value, "minimum") Then
                _minimum = Value
                RaisePropertyChanged("minimum")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the lastprice value
    ''' </summary>
    <DataMember()> _
    Public Property lastprice() As Decimal
        Get
            Return _lastprice
        End Get
        Set(ByVal Value As Decimal)
            If HasValueChanged(_lastprice, Value, "lastprice") Then
                _lastprice = Value
                RaisePropertyChanged("lastprice")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the lastdlvry value
    ''' </summary>
    <DataMember()> _
    Public Property lastdlvry() As Date
        Get
            Return _lastdlvry
        End Get
        Set(ByVal Value As Date)
            If HasValueChanged(_lastdlvry, Value, "lastdlvry") Then
                _lastdlvry = Value
                RaisePropertyChanged("lastdlvry")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the maximum value
    ''' </summary>
    <DataMember()> _
    Public Property maximum() As Double
        Get
            Return _maximum
        End Get
        Set(ByVal Value As Double)
            If HasValueChanged(_maximum, Value, "maximum") Then
                _maximum = Value
                RaisePropertyChanged("maximum")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the sravlbl value
    ''' </summary>
    <DataMember()> _
    Public Property sravlbl() As Double
        Get
            Return _sravlbl
        End Get
        Set(ByVal Value As Double)
            If HasValueChanged(_sravlbl, Value, "sravlbl") Then
                _sravlbl = Value
                RaisePropertyChanged("sravlbl")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the srpckqty value
    ''' </summary>
    <DataMember()> _
    Public Property srpckqty() As Double
        Get
            Return _srpckqty
        End Get
        Set(ByVal Value As Double)
            If HasValueChanged(_srpckqty, Value, "srpckqty") Then
                _srpckqty = Value
                RaisePropertyChanged("srpckqty")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the srdlvry value
    ''' </summary>
    <DataMember()> _
    Public Property srdlvry() As Double
        Get
            Return _srdlvry
        End Get
        Set(ByVal Value As Double)
            If HasValueChanged(_srdlvry, Value, "sr_dlvry") Then
                _srdlvry = Value
                RaisePropertyChanged("srdlvry")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the sizeid value
    ''' </summary>
    <DataMember()> _
    Public Property sizeid() As Integer
        Get
            Return _sizeid
        End Get
        Set(ByVal Value As Integer)
            If HasValueChanged(_sizeid, Value, "sizeid") Then
                _sizeid = Value
                RaisePropertyChanged("sizeid")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the sInsertid value
    ''' </summary>
    <DataMember()> _
    Public Property sInsertid() As String
        Get
            Return _sInsertid
        End Get
        Set(ByVal Value As String)
            If HasValueChanged(_sInsertid, Value, "sInsert_id") Then
                _sInsertid = Value
                RaisePropertyChanged("sInsertid")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the dtInsertdt value
    ''' </summary>
    <DataMember()> _
    Public Property dtInsertdt() As Date
        Get
            Return _dtInsertdt
        End Get
        Set(ByVal Value As Date)
            If HasValueChanged(_dtInsertdt, Value, "dtInsert_dt") Then
                _dtInsertdt = Value
                RaisePropertyChanged("dtInsertdt")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the sLastUpdateid value
    ''' </summary>
    <DataMember()> _
    Public Property sLastUpdateid() As String
        Get
            Return _sLastUpdateid
        End Get
        Set(ByVal Value As String)
            If HasValueChanged(_sLastUpdateid, Value, "sLastUpdate_id") Then
                _sLastUpdateid = Value
                RaisePropertyChanged("sLastUpdateid")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the dtLastUpdatedt value
    ''' </summary>
    <DataMember()> _
    Public Property dtLastUpdatedt() As Date
        Get
            Return _dtLastUpdatedt
        End Get
        Set(ByVal Value As Date)
            If HasValueChanged(_dtLastUpdatedt, Value, "dtLastUpdate_dt") Then
                _dtLastUpdatedt = Value
                RaisePropertyChanged("dtLastUpdatedt")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the iConcurrencyid value
    ''' </summary>
    <DataMember()> _
    Public Property iConcurrencyid() As Short
        Get
            Return _iConcurrencyid
        End Get
        Set(ByVal Value As Short)
            If HasValueChanged(_iConcurrencyid, Value, "iConcurrency_id") Then
                _iConcurrencyid = Value
                RaisePropertyChanged("iConcurrencyid")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the lastcost value
    ''' </summary>
    <DataMember()> _
    Public Property lastcost() As Decimal
        Get
            Return _lastcost
        End Get
        Set(ByVal Value As Decimal)
            If HasValueChanged(_lastcost, Value, "lastcost") Then
                _lastcost = Value
                RaisePropertyChanged("lastcost")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the lastwholesale value
    ''' </summary>
    <DataMember()> _
    Public Property lastwholesale() As Decimal
        Get
            Return _lastwholesale
        End Get
        Set(ByVal Value As Decimal)
            If HasValueChanged(_lastwholesale, Value, "lastwholesale") Then
                _lastwholesale = Value
                RaisePropertyChanged("lastwholesale")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the incentive value
    ''' </summary>
    <DataMember()> _
    Public Property incentive() As Decimal
        Get
            Return _incentive
        End Get
        Set(ByVal Value As Decimal)
            If HasValueChanged(_incentive, Value, "incentive") Then
                _incentive = Value
                RaisePropertyChanged("incentive")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the active value
    ''' </summary>
    <DataMember()> _
    Public Property active() As Boolean?
        Get
            Return _active
        End Get
        Set(ByVal Value As Boolean?)
            If HasValueChanged(_active, Value, "active") Then
                _active = Value
                RaisePropertyChanged("active")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the vat value
    ''' </summary>
    <DataMember()> _
    Public Property vat() As Integer
        Get
            Return _vat
        End Get
        Set(ByVal Value As Integer)
            If HasValueChanged(_vat, Value, "vat") Then
                _vat = Value
                RaisePropertyChanged("vat")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the markup3 value
    ''' </summary>
    <DataMember()> _
    Public Property markup3() As Double
        Get
            Return _markup3
        End Get
        Set(ByVal Value As Double)
            If HasValueChanged(_markup3, Value, "markup3") Then
                _markup3 = Value
                RaisePropertyChanged("markup3")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the markup4 value
    ''' </summary>
    <DataMember()> _
    Public Property markup4() As Double
        Get
            Return _markup4
        End Get
        Set(ByVal Value As Double)
            If HasValueChanged(_markup4, Value, "markup4") Then
                _markup4 = Value
                RaisePropertyChanged("markup4")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the markup5 value
    ''' </summary>
    <DataMember()> _
    Public Property markup5() As Double
        Get
            Return _markup5
        End Get
        Set(ByVal Value As Double)
            If HasValueChanged(_markup5, Value, "markup5") Then
                _markup5 = Value
                RaisePropertyChanged("markup5")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the retail3 value
    ''' </summary>
    <DataMember()> _
    Public Property retail3() As Decimal
        Get
            Return _retail3
        End Get
        Set(ByVal Value As Decimal)
            If HasValueChanged(_retail3, Value, "retail3") Then
                _retail3 = Value
                RaisePropertyChanged("retail3")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the retail4 value
    ''' </summary>
    <DataMember()> _
    Public Property retail4() As Decimal
        Get
            Return _retail4
        End Get
        Set(ByVal Value As Decimal)
            If HasValueChanged(_retail4, Value, "retail4") Then
                _retail4 = Value
                RaisePropertyChanged("retail4")
            End If
        End Set
    End Property
    ''' <summary>
    ''' Get/Set the retail5 value
    ''' </summary>
    <DataMember()> _
    Public Property retail5() As Decimal
        Get
            Return _retail5
        End Get
        Set(ByVal Value As Decimal)
            If HasValueChanged(_retail5, Value, "retail5") Then
                _retail5 = Value
                RaisePropertyChanged("retail5")
            End If
        End Set
    End Property
#End Region
End Class
