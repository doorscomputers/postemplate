Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Runtime.Serialization

Imports PDSA.Validation

''' <summary>
''' This class contains properties for each data value that makes up a banktrans.
''' This class is generated by the Haystack Code Generator for .NET.
''' Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
''' </summary>
<DataContract()> _
Partial Public Class banktrans
  Inherits PDSAEntityBase

#Region "Constructor"
  ''' <summary>
  ''' Constructor for the banktrans class
  ''' </summary>
  Public Sub New()
    MyBase.New()
    
    ClassName = "banktrans"
  End Sub
#End Region

  #Region "Private Variables"
  Private _banktransid As Integer = 0
  Private _bankid As Integer = 0
  Private _transdate As Date = DateTime.Now
  Private _oldbal As Decimal = 0
  Private _newbal As Decimal = 0
  Private _transrefno As Integer = 0
  Private _transtype As String = String.Empty
  Private _remarks As String = String.Empty
#End Region

#Region "Public Properties"
  ''' <summary>
  ''' Get/Set the banktransid value
  ''' </summary>
  <DataMember()> _
  Public Property banktransid() As Integer
    Get
      Return _banktransid
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_banktransid, Value, "banktransid") Then
        _banktransid = Value
        RaisePropertyChanged("banktransid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the bankid value
  ''' </summary>
  <DataMember()> _
  Public Property bankid() As Integer
    Get
      Return _bankid
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_bankid, Value, "bankid") Then
        _bankid = Value
        RaisePropertyChanged("bankid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the transdate value
  ''' </summary>
  <DataMember()> _
  Public Property transdate() As Date
    Get
      Return _transdate
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_transdate, Value, "transdate") Then
        _transdate = Value
        RaisePropertyChanged("transdate")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the oldbal value
  ''' </summary>
  <DataMember()> _
  Public Property oldbal() As Decimal
    Get
      Return _oldbal
    End Get
    Set(ByVal Value As Decimal)
      If HasValueChanged(_oldbal, Value, "oldbal") Then
        _oldbal = Value
        RaisePropertyChanged("oldbal")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the newbal value
  ''' </summary>
  <DataMember()> _
  Public Property newbal() As Decimal
    Get
      Return _newbal
    End Get
    Set(ByVal Value As Decimal)
      If HasValueChanged(_newbal, Value, "newbal") Then
        _newbal = Value
        RaisePropertyChanged("newbal")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the transrefno value
  ''' </summary>
  <DataMember()> _
  Public Property transrefno() As Integer
    Get
      Return _transrefno
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_transrefno, Value, "transrefno") Then
        _transrefno = Value
        RaisePropertyChanged("transrefno")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the transtype value
  ''' </summary>
  <DataMember()> _
  Public Property transtype() As String
    Get
      Return _transtype
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_transtype, Value, "transtype") Then
        _transtype = Value
        RaisePropertyChanged("transtype")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the remarks value
  ''' </summary>
  <DataMember()> _
  Public Property remarks() As String
    Get
      Return _remarks
    End Get
    Set(ByVal Value As String)
      If HasValueChanged(_remarks, Value, "remarks") Then
        _remarks = Value
        RaisePropertyChanged("remarks")
      End If
    End Set
  End Property
#End Region
End Class
