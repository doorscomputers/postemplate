Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Runtime.Serialization

Imports PDSA.Validation

''' <summary>
''' This class contains properties for each data value that makes up a EmployeeTrans.
''' This class is generated by the Haystack Code Generator for .NET.
''' Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
''' </summary>
<DataContract()> _
Partial Public Class EmployeeTrans
  Inherits PDSAEntityBase

#Region "Constructor"
  ''' <summary>
  ''' Constructor for the EmployeeTrans class
  ''' </summary>
  Public Sub New()
    MyBase.New()
    
    ClassName = "EmployeeTrans"
  End Sub
#End Region

  #Region "Private Variables"
  Private _linoutid As Integer = 0
  Private _empin As Date = DateTime.Now
  Private _empbreak As Date = DateTime.Now
  Private _empbreakin As Date = DateTime.Now
  Private _empout As Date = DateTime.Now
  Private _fkwtid As Integer = 0
  Private _stats As Boolean? = False
  Private _trandate As Date = DateTime.Now
  Private _bempin As Boolean? = False
  Private _bempbreak As Boolean? = False
  Private _bempbreakin As Boolean? = False
  Private _bbreakout As Boolean? = False
#End Region

#Region "Public Properties"
  ''' <summary>
  ''' Get/Set the linoutid value
  ''' </summary>
  <DataMember()> _
  Public Property linoutid() As Integer
    Get
      Return _linoutid
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_linoutid, Value, "linoutid") Then
        _linoutid = Value
        RaisePropertyChanged("linoutid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the empin value
  ''' </summary>
  <DataMember()> _
  Public Property empin() As Date
    Get
      Return _empin
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_empin, Value, "empin") Then
        _empin = Value
        RaisePropertyChanged("empin")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the empbreak value
  ''' </summary>
  <DataMember()> _
  Public Property empbreak() As Date
    Get
      Return _empbreak
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_empbreak, Value, "empbreak") Then
        _empbreak = Value
        RaisePropertyChanged("empbreak")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the empbreakin value
  ''' </summary>
  <DataMember()> _
  Public Property empbreakin() As Date
    Get
      Return _empbreakin
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_empbreakin, Value, "empbreakin") Then
        _empbreakin = Value
        RaisePropertyChanged("empbreakin")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the empout value
  ''' </summary>
  <DataMember()> _
  Public Property empout() As Date
    Get
      Return _empout
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_empout, Value, "empout") Then
        _empout = Value
        RaisePropertyChanged("empout")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the fkwtid value
  ''' </summary>
  <DataMember()> _
  Public Property fkwtid() As Integer
    Get
      Return _fkwtid
    End Get
    Set(ByVal Value As Integer)
      If HasValueChanged(_fkwtid, Value, "fkwtid") Then
        _fkwtid = Value
        RaisePropertyChanged("fkwtid")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the stats value
  ''' </summary>
  <DataMember()> _
  Public Property stats() As Boolean?
    Get
      Return _stats
    End Get
    Set(ByVal Value As Boolean?)
      If HasValueChanged(_stats, Value, "stats") Then
        _stats = Value
        RaisePropertyChanged("stats")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the trandate value
  ''' </summary>
  <DataMember()> _
  Public Property trandate() As Date
    Get
      Return _trandate
    End Get
    Set(ByVal Value As Date)
      If HasValueChanged(_trandate, Value, "trandate") Then
        _trandate = Value
        RaisePropertyChanged("trandate")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the bempin value
  ''' </summary>
  <DataMember()> _
  Public Property bempin() As Boolean?
    Get
      Return _bempin
    End Get
    Set(ByVal Value As Boolean?)
      If HasValueChanged(_bempin, Value, "bempin") Then
        _bempin = Value
        RaisePropertyChanged("bempin")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the bempbreak value
  ''' </summary>
  <DataMember()> _
  Public Property bempbreak() As Boolean?
    Get
      Return _bempbreak
    End Get
    Set(ByVal Value As Boolean?)
      If HasValueChanged(_bempbreak, Value, "bempbreak") Then
        _bempbreak = Value
        RaisePropertyChanged("bempbreak")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the bempbreakin value
  ''' </summary>
  <DataMember()> _
  Public Property bempbreakin() As Boolean?
    Get
      Return _bempbreakin
    End Get
    Set(ByVal Value As Boolean?)
      If HasValueChanged(_bempbreakin, Value, "bempbreakin") Then
        _bempbreakin = Value
        RaisePropertyChanged("bempbreakin")
      End If
    End Set
  End Property
  ''' <summary>
  ''' Get/Set the bbreakout value
  ''' </summary>
  <DataMember()> _
  Public Property bbreakout() As Boolean?
    Get
      Return _bbreakout
    End Get
    Set(ByVal Value As Boolean?)
      If HasValueChanged(_bbreakout, Value, "bbreakout") Then
        _bbreakout = Value
        RaisePropertyChanged("bbreakout")
      End If
    End Set
  End Property
#End Region
End Class
