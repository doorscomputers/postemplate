<?xml version="1.0"?>
<doc>
<assembly>
<name>
DoorsPOS.DataLayer
</name>
</assembly>
<members>
<member name="T:DoorsPOS.DataLayer.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:DoorsPOS.DataLayer.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:DoorsPOS.DataLayer.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="T:DoorsPOS.DataLayer.additnlcashData">
 <summary>
 Used to Add/Edit/Delete/Select data from the additnlcash table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashData.#ctor">
 <summary>
 Constructor for the additnlcashData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashData.#ctor(DoorsPOS.BusinessLayer.additnlcash)">
 <summary>
 Constructor for the additnlcashData class
 </summary>
 <param name="entity">An instance of a additnlcash</param>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.additnlcash)">
 <summary>
 Constructor for the additnlcashData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a additnlcash</param>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.additnlcash,DoorsPOS.BusinessLayer.additnlcashValidator)">
 <summary>
 Constructor for the additnlcashData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a additnlcash</param>
 <param name="validator">An instance of a additnlcashValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.additnlcashData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.additnlcashData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.additnlcashData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.additnlcashData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.additnlcashData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.additnlcashData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.additnlcashData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.additnlcashData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.additnlcashData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.additnlcashData.WhereFilters.acremarks">
 <summary>
 'acremarks' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.additnlcashData.WhereFilters.Likeacremarks">
 <summary>
 'Likeacremarks' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.additnlcashData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.additnlcashData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.additnlcashData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.additnlcashData.OrderByFilters.acremarks">
 <summary>
 'acremarks' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.additnlcashData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.additnlcashData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.additnlcashData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.additnlcashData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.additnlcashData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.additnlcashData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.additnlcashData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.additnlcashData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.additnlcashData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.additnlcashData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.additnlcashData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.additnlcashData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.additnlcashData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.additnlcashData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.additnlcashData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.additnlcashData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.additnlcashData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.additnlcashData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.additnlcashData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.additnlcashData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.additnlcashData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>additnlcash</returns>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="acid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="acid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="acid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.additnlcashManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the additnlcash table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashManager.#ctor">
 <summary>
 Constructor for the additnlcashManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the additnlcashManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.additnlcashManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.additnlcashManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.additnlcashManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashManager.BuildCollection">
 <summary>
 Returns a collection of additnlcash classes based
 </summary>
 <returns>additnlcashCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashManager.GetadditnlcashsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashManager.GetadditnlcashsByacremarks">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.additnlcashManager.GetadditnlcashsByLikeacremarks">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.AdvPaymentData">
 <summary>
 Used to Add/Edit/Delete/Select data from the AdvPayment table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentData.#ctor">
 <summary>
 Constructor for the AdvPaymentData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentData.#ctor(DoorsPOS.BusinessLayer.AdvPayment)">
 <summary>
 Constructor for the AdvPaymentData class
 </summary>
 <param name="entity">An instance of a AdvPayment</param>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.AdvPayment)">
 <summary>
 Constructor for the AdvPaymentData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a AdvPayment</param>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.AdvPayment,DoorsPOS.BusinessLayer.AdvPaymentValidator)">
 <summary>
 Constructor for the AdvPaymentData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a AdvPayment</param>
 <param name="validator">An instance of a AdvPaymentValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.AdvPaymentData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.AdvPaymentData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.AdvPaymentData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.AdvPaymentData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.AdvPaymentData.SelectFilters.AmntPaid">
 <summary>
 'AmntPaid' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.AdvPaymentData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.AdvPaymentData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.AdvPaymentData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.AdvPaymentData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.AdvPaymentData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.AdvPaymentData.WhereFilters.Remarks">
 <summary>
 'Remarks' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.AdvPaymentData.WhereFilters.LikeRemarks">
 <summary>
 'LikeRemarks' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.AdvPaymentData.WhereFilters.custclaimed">
 <summary>
 'custclaimed' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.AdvPaymentData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.AdvPaymentData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.AdvPaymentData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.AdvPaymentData.OrderByFilters.Remarks">
 <summary>
 'Remarks' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.AdvPaymentData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.AdvPaymentData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.AdvPaymentData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.AdvPaymentData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.AdvPaymentData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.AdvPaymentData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.AdvPaymentData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.AdvPaymentData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.AdvPaymentData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.AdvPaymentData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.AdvPaymentData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.AdvPaymentData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.AdvPaymentData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.AdvPaymentData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.AdvPaymentData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.AdvPaymentData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.AdvPaymentData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.AdvPaymentData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.AdvPaymentData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.AdvPaymentData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.AdvPaymentData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>AdvPayment</returns>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="advid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="advid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="advid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.AdvPaymentManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the AdvPayment table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentManager.#ctor">
 <summary>
 Constructor for the AdvPaymentManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the AdvPaymentManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.AdvPaymentManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.AdvPaymentManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.AdvPaymentManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentManager.BuildCollection">
 <summary>
 Returns a collection of AdvPayment classes based
 </summary>
 <returns>AdvPaymentCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentManager.GetAdvPaymentsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentManager.GetAdvPaymentsByRemarks">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentManager.GetAdvPaymentsByLikeRemarks">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.AdvPaymentManager.GetAdvPaymentsBycustclaimed">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.bankData">
 <summary>
 Used to Add/Edit/Delete/Select data from the bank table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.bankData.#ctor">
 <summary>
 Constructor for the bankData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.bankData.#ctor(DoorsPOS.BusinessLayer.bank)">
 <summary>
 Constructor for the bankData class
 </summary>
 <param name="entity">An instance of a bank</param>
</member>
<member name="M:DoorsPOS.DataLayer.bankData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.bank)">
 <summary>
 Constructor for the bankData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a bank</param>
</member>
<member name="M:DoorsPOS.DataLayer.bankData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.bank,DoorsPOS.BusinessLayer.bankValidator)">
 <summary>
 Constructor for the bankData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a bank</param>
 <param name="validator">An instance of a bankValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.bankData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.bankData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.bankData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.bankData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.bankData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.bankData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.bankData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.bankData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.bankData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.bankData.WhereFilters.bank">
 <summary>
 'bank' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.bankData.WhereFilters.Likebank">
 <summary>
 'Likebank' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.bankData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.bankData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.bankData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.bankData.OrderByFilters.bank">
 <summary>
 'bank' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.bankData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.bankData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.bankData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.bankData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.bankData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.bankData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.bankData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.bankData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.bankData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.bankData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.bankData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.bankData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.bankData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.bankData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.bankData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.bankData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.bankData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.bankData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.bankData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.bankData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.bankData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.bankData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.bankData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.bankData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.bankData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.bankData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>bank</returns>
</member>
<member name="M:DoorsPOS.DataLayer.bankData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.bankData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.bankData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.bankData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="bankid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.bankData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.bankData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.bankData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="bankid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.bankData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.bankData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.bankData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.bankData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.bankData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="bankid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.bankData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.bankManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the bank table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.bankManager.#ctor">
 <summary>
 Constructor for the bankManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.bankManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the bankManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.bankManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.bankManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.bankManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.bankManager.BuildCollection">
 <summary>
 Returns a collection of bank classes based
 </summary>
 <returns>bankCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.bankManager.GetbanksByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.bankManager.GetbanksBybank">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.bankManager.GetbanksByLikebank">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.boData">
 <summary>
 Used to Add/Edit/Delete/Select data from the bo table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.boData.#ctor">
 <summary>
 Constructor for the boData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.boData.#ctor(DoorsPOS.BusinessLayer.bo)">
 <summary>
 Constructor for the boData class
 </summary>
 <param name="entity">An instance of a bo</param>
</member>
<member name="M:DoorsPOS.DataLayer.boData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.bo)">
 <summary>
 Constructor for the boData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a bo</param>
</member>
<member name="M:DoorsPOS.DataLayer.boData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.bo,DoorsPOS.BusinessLayer.boValidator)">
 <summary>
 Constructor for the boData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a bo</param>
 <param name="validator">An instance of a boValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.boData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.boData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.boData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.boData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.boData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.boData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.boData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.boData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.boData.WhereFilters.LikesInsert_id">
 <summary>
 'LikesInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.boData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.boData.WhereFilters.sInsert_id">
 <summary>
 'sInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.boData.WhereFilters.supcode">
 <summary>
 'supcode' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.boData.WhereFilters.stckid">
 <summary>
 'stckid' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.boData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.boData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.boData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.boData.OrderByFilters.sInsert_id">
 <summary>
 'sInsert_id' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.boData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.boData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.boData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.boData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.boData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.boData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.boData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.boData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.boData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.boData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.boData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.boData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.boData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.boData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.boData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.boData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.boData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.boData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.boData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.boData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.boData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.boData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.boData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.boData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.boData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.boData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>bo</returns>
</member>
<member name="M:DoorsPOS.DataLayer.boData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.boData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.boData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.boData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="boid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.boData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.boData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.boData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="boid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.boData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.boData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.boData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.boData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.boData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="boid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.boData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.boManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the bo table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.boManager.#ctor">
 <summary>
 Constructor for the boManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.boManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the boManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.boManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.boManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.boManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.boManager.BuildCollection">
 <summary>
 Returns a collection of bo classes based
 </summary>
 <returns>boCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.boManager.GetbosByLikesInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.boManager.GetbosByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.boManager.GetbosBysInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.boManager.GetbosBysupcode">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.boManager.GetbosBystckid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.categoriesData">
 <summary>
 Used to Add/Edit/Delete/Select data from the categories table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesData.#ctor">
 <summary>
 Constructor for the categoriesData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesData.#ctor(DoorsPOS.BusinessLayer.categories)">
 <summary>
 Constructor for the categoriesData class
 </summary>
 <param name="entity">An instance of a categories</param>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.categories)">
 <summary>
 Constructor for the categoriesData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a categories</param>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.categories,DoorsPOS.BusinessLayer.categoriesValidator)">
 <summary>
 Constructor for the categoriesData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a categories</param>
 <param name="validator">An instance of a categoriesValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.categoriesData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.categoriesData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.categoriesData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.categoriesData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.categoriesData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.categoriesData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.categoriesData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.categoriesData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.categoriesData.WhereFilters.catgory">
 <summary>
 'catgory' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.categoriesData.WhereFilters.Likecatgory">
 <summary>
 'Likecatgory' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.categoriesData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.categoriesData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.categoriesData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.categoriesData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.categoriesData.OrderByFilters.catgory">
 <summary>
 'catgory' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.categoriesData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.categoriesData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.categoriesData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.categoriesData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.categoriesData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.categoriesData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.categoriesData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.categoriesData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.categoriesData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.categoriesData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.categoriesData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.categoriesData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.categoriesData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.categoriesData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.categoriesData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.categoriesData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.categoriesData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.categoriesData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.categoriesData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.categoriesData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.categoriesData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>categories</returns>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="categoryid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="categoryid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="categoryid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.categoriesManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the categories table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesManager.#ctor">
 <summary>
 Constructor for the categoriesManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the categoriesManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.categoriesManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.categoriesManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.categoriesManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesManager.BuildCollection">
 <summary>
 Returns a collection of categories classes based
 </summary>
 <returns>categoriesCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesManager.GetcategoriesBycatgory">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesManager.GetcategoriesByLikecatgory">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.categoriesManager.GetcategoriesByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.ChkIssuedData">
 <summary>
 Used to Add/Edit/Delete/Select data from the ChkIssued table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedData.#ctor">
 <summary>
 Constructor for the ChkIssuedData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedData.#ctor(DoorsPOS.BusinessLayer.ChkIssued)">
 <summary>
 Constructor for the ChkIssuedData class
 </summary>
 <param name="entity">An instance of a ChkIssued</param>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.ChkIssued)">
 <summary>
 Constructor for the ChkIssuedData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a ChkIssued</param>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.ChkIssued,DoorsPOS.BusinessLayer.ChkIssuedValidator)">
 <summary>
 Constructor for the ChkIssuedData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a ChkIssued</param>
 <param name="validator">An instance of a ChkIssuedValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.ChkIssuedData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkIssuedData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkIssuedData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkIssuedData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkIssuedData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.ChkIssuedData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkIssuedData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkIssuedData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkIssuedData.WhereFilters.LikePayee">
 <summary>
 'LikePayee' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkIssuedData.WhereFilters.Payee">
 <summary>
 'Payee' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkIssuedData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.ChkIssuedData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkIssuedData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkIssuedData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkIssuedData.OrderByFilters.Payee">
 <summary>
 'Payee' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.ChkIssuedData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkIssuedData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkIssuedData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.ChkIssuedData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkIssuedData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkIssuedData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.ChkIssuedData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkIssuedData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkIssuedData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkIssuedData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.ChkIssuedData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkIssuedData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkIssuedData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ChkIssuedData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ChkIssuedData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ChkIssuedData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ChkIssuedData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ChkIssuedData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ChkIssuedData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ChkIssuedData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ChkIssuedData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>ChkIssued</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="chkisueid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="chkisueid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="chkisueid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.ChkIssuedManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the ChkIssued table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedManager.#ctor">
 <summary>
 Constructor for the ChkIssuedManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the ChkIssuedManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.ChkIssuedManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ChkIssuedManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ChkIssuedManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedManager.BuildCollection">
 <summary>
 Returns a collection of ChkIssued classes based
 </summary>
 <returns>ChkIssuedCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedManager.GetChkIssuedsByLikePayee">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedManager.GetChkIssuedsByPayee">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkIssuedManager.GetChkIssuedsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.chkpayData">
 <summary>
 Used to Add/Edit/Delete/Select data from the chkpay table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayData.#ctor">
 <summary>
 Constructor for the chkpayData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayData.#ctor(DoorsPOS.BusinessLayer.chkpay)">
 <summary>
 Constructor for the chkpayData class
 </summary>
 <param name="entity">An instance of a chkpay</param>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.chkpay)">
 <summary>
 Constructor for the chkpayData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a chkpay</param>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.chkpay,DoorsPOS.BusinessLayer.chkpayValidator)">
 <summary>
 Constructor for the chkpayData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a chkpay</param>
 <param name="validator">An instance of a chkpayValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.chkpayData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.chkpayData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.chkpayData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.chkpayData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.chkpayData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.chkpayData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.chkpayData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.chkpayData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.chkpayData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.chkpayData.WhereFilters.payee">
 <summary>
 'payee' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.chkpayData.WhereFilters.Likepayee">
 <summary>
 'Likepayee' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.chkpayData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.chkpayData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.chkpayData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.chkpayData.OrderByFilters.payee">
 <summary>
 'payee' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.chkpayData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.chkpayData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.chkpayData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.chkpayData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.chkpayData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.chkpayData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.chkpayData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.chkpayData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.chkpayData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.chkpayData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.chkpayData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.chkpayData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.chkpayData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.chkpayData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.chkpayData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.chkpayData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.chkpayData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.chkpayData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.chkpayData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.chkpayData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.chkpayData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>chkpay</returns>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="chekid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="chekid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="chekid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.chkpayManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the chkpay table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayManager.#ctor">
 <summary>
 Constructor for the chkpayManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the chkpayManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.chkpayManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.chkpayManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.chkpayManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayManager.BuildCollection">
 <summary>
 Returns a collection of chkpay classes based
 </summary>
 <returns>chkpayCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayManager.GetchkpaysByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayManager.GetchkpaysBypayee">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.chkpayManager.GetchkpaysByLikepayee">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.ChkRegisterData">
 <summary>
 Used to Add/Edit/Delete/Select data from the ChkRegister table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterData.#ctor">
 <summary>
 Constructor for the ChkRegisterData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterData.#ctor(DoorsPOS.BusinessLayer.ChkRegister)">
 <summary>
 Constructor for the ChkRegisterData class
 </summary>
 <param name="entity">An instance of a ChkRegister</param>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.ChkRegister)">
 <summary>
 Constructor for the ChkRegisterData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a ChkRegister</param>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.ChkRegister,DoorsPOS.BusinessLayer.ChkRegisterValidator)">
 <summary>
 Constructor for the ChkRegisterData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a ChkRegister</param>
 <param name="validator">An instance of a ChkRegisterValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.ChkRegisterData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkRegisterData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkRegisterData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkRegisterData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkRegisterData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.ChkRegisterData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkRegisterData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkRegisterData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkRegisterData.WhereFilters.Issued">
 <summary>
 'Issued' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkRegisterData.WhereFilters.LikesInsert_id">
 <summary>
 'LikesInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkRegisterData.WhereFilters.NotIssued">
 <summary>
 'NotIssued' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkRegisterData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkRegisterData.WhereFilters.sInsert_id">
 <summary>
 'sInsert_id' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.ChkRegisterData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkRegisterData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkRegisterData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkRegisterData.OrderByFilters.sInsert_id">
 <summary>
 'sInsert_id' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.ChkRegisterData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkRegisterData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkRegisterData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.ChkRegisterData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkRegisterData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkRegisterData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.ChkRegisterData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkRegisterData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkRegisterData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkRegisterData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.ChkRegisterData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkRegisterData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ChkRegisterData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ChkRegisterData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ChkRegisterData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ChkRegisterData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ChkRegisterData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ChkRegisterData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ChkRegisterData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ChkRegisterData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ChkRegisterData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>ChkRegister</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="RegId">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="RegId">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="RegId">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.ChkRegisterManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the ChkRegister table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterManager.#ctor">
 <summary>
 Constructor for the ChkRegisterManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the ChkRegisterManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.ChkRegisterManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ChkRegisterManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ChkRegisterManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterManager.BuildCollection">
 <summary>
 Returns a collection of ChkRegister classes based
 </summary>
 <returns>ChkRegisterCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterManager.GetChkRegistersByIssued">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterManager.GetChkRegistersByLikesInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterManager.GetChkRegistersByNotIssued">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterManager.GetChkRegistersByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ChkRegisterManager.GetChkRegistersBysInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.convertstckData">
 <summary>
 Used to Add/Edit/Delete/Select data from the convertstck table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckData.#ctor">
 <summary>
 Constructor for the convertstckData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckData.#ctor(DoorsPOS.BusinessLayer.convertstck)">
 <summary>
 Constructor for the convertstckData class
 </summary>
 <param name="entity">An instance of a convertstck</param>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.convertstck)">
 <summary>
 Constructor for the convertstckData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a convertstck</param>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.convertstck,DoorsPOS.BusinessLayer.convertstckValidator)">
 <summary>
 Constructor for the convertstckData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a convertstck</param>
 <param name="validator">An instance of a convertstckValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.convertstckData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.convertstckData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.convertstckData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.convertstckData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.convertstckData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.convertstckData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.convertstckData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.convertstckData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.convertstckData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.convertstckData.WhereFilters.InsertedBy">
 <summary>
 'InsertedBy' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.convertstckData.WhereFilters.LikeInsertedBy">
 <summary>
 'LikeInsertedBy' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.convertstckData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.convertstckData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.convertstckData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.convertstckData.OrderByFilters.InsertedBy">
 <summary>
 'InsertedBy' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.convertstckData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.convertstckData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.convertstckData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.convertstckData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.convertstckData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.convertstckData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.convertstckData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.convertstckData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.convertstckData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.convertstckData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.convertstckData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.convertstckData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.convertstckData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.convertstckData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.convertstckData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.convertstckData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.convertstckData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.convertstckData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.convertstckData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.convertstckData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.convertstckData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>convertstck</returns>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="convertid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="convertid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="convertid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.convertstckManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the convertstck table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckManager.#ctor">
 <summary>
 Constructor for the convertstckManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the convertstckManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.convertstckManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.convertstckManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.convertstckManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckManager.BuildCollection">
 <summary>
 Returns a collection of convertstck classes based
 </summary>
 <returns>convertstckCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckManager.GetconvertstcksByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckManager.GetconvertstcksByInsertedBy">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.convertstckManager.GetconvertstcksByLikeInsertedBy">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.deptData">
 <summary>
 Used to Add/Edit/Delete/Select data from the dept table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.deptData.#ctor">
 <summary>
 Constructor for the deptData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.deptData.#ctor(DoorsPOS.BusinessLayer.dept)">
 <summary>
 Constructor for the deptData class
 </summary>
 <param name="entity">An instance of a dept</param>
</member>
<member name="M:DoorsPOS.DataLayer.deptData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.dept)">
 <summary>
 Constructor for the deptData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a dept</param>
</member>
<member name="M:DoorsPOS.DataLayer.deptData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.dept,DoorsPOS.BusinessLayer.deptValidator)">
 <summary>
 Constructor for the deptData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a dept</param>
 <param name="validator">An instance of a deptValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.deptData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.deptData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.deptData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.deptData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.deptData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.deptData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.deptData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.deptData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.deptData.WhereFilters.DEPT">
 <summary>
 'DEPT' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.deptData.WhereFilters.DeptDesc">
 <summary>
 'DeptDesc' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.deptData.WhereFilters.LikeDEPT">
 <summary>
 'LikeDEPT' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.deptData.WhereFilters.LikeDeptDesc">
 <summary>
 'LikeDeptDesc' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.deptData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.deptData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.deptData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.deptData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.deptData.OrderByFilters.DEPT">
 <summary>
 'DEPT' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.deptData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.deptData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.deptData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.deptData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.deptData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.deptData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.deptData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.deptData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.deptData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.deptData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.deptData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.deptData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.deptData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.deptData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.deptData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.deptData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.deptData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.deptData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.deptData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.deptData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.deptData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.deptData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.deptData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.deptData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.deptData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.deptData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>dept</returns>
</member>
<member name="M:DoorsPOS.DataLayer.deptData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.deptData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.deptData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.deptData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="deptid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.deptData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.deptData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.deptData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="deptid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.deptData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.deptData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.deptData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.deptData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.deptData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="deptid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.deptData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.deptManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the dept table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.deptManager.#ctor">
 <summary>
 Constructor for the deptManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.deptManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the deptManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.deptManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.deptManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.deptManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.deptManager.BuildCollection">
 <summary>
 Returns a collection of dept classes based
 </summary>
 <returns>deptCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.deptManager.GetdeptsByDEPT">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.deptManager.GetdeptsByDeptDesc">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.deptManager.GetdeptsByLikeDEPT">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.deptManager.GetdeptsByLikeDeptDesc">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.deptManager.GetdeptsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvrydettmpData">
 <summary>
 Used to Add/Edit/Delete/Select data from the dlvrydettmp table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpData.#ctor">
 <summary>
 Constructor for the dlvrydettmpData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpData.#ctor(DoorsPOS.BusinessLayer.dlvrydettmp)">
 <summary>
 Constructor for the dlvrydettmpData class
 </summary>
 <param name="entity">An instance of a dlvrydettmp</param>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.dlvrydettmp)">
 <summary>
 Constructor for the dlvrydettmpData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a dlvrydettmp</param>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.dlvrydettmp,DoorsPOS.BusinessLayer.dlvrydettmpValidator)">
 <summary>
 Constructor for the dlvrydettmpData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a dlvrydettmp</param>
 <param name="validator">An instance of a dlvrydettmpValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.dlvrydettmpData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvrydettmpData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvrydettmpData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvrydettmpData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvrydettmpData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvrydettmpData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvrydettmpData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvrydettmpData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvrydettmpData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvrydettmpData.WhereFilters.dridtmp">
 <summary>
 'dridtmp' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvrydettmpData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvrydettmpData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvrydettmpData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvrydettmpData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvrydettmpData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvrydettmpData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvrydettmpData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvrydettmpData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvrydettmpData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvrydettmpData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvrydettmpData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvrydettmpData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvrydettmpData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvrydettmpData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvrydettmpData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvrydettmpData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvrydettmpData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvrydettmpData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvrydettmpData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvrydettmpData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvrydettmpData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvrydettmpData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvrydettmpData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvrydettmpData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>dlvrydettmp</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpData.DeleteByPK(System.Int32,System.Int32,System.Decimal,System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Int32,System.Int32,System.Int32,System.Decimal,System.String,System.DateTime,System.String,System.DateTime,System.Int16,System.String,System.DateTime)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="dridtmp">The value of the primary key of the row to delete</param>
 <param name="stckid">The value of the primary key of the row to delete</param>
 <param name="cost">The value of the primary key of the row to delete</param>
 <param name="qty">The value of the primary key of the row to delete</param>
 <param name="freee">The value of the primary key of the row to delete</param>
 <param name="disc">The value of the primary key of the row to delete</param>
 <param name="discamnt">The value of the primary key of the row to delete</param>
 <param name="drdetamnt">The value of the primary key of the row to delete</param>
 <param name="drpck">The value of the primary key of the row to delete</param>
 <param name="dravlbl">The value of the primary key of the row to delete</param>
 <param name="preavlbl">The value of the primary key of the row to delete</param>
 <param name="pcs">The value of the primary key of the row to delete</param>
 <param name="sInsertid">The value of the primary key of the row to delete</param>
 <param name="dtInsertdt">The value of the primary key of the row to delete</param>
 <param name="sLastUpdateid">The value of the primary key of the row to delete</param>
 <param name="dtLastUpdatedt">The value of the primary key of the row to delete</param>
 <param name="iConcurrencyid">The value of the primary key of the row to delete</param>
 <param name="lotno">The value of the primary key of the row to delete</param>
 <param name="expdate">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpData.LoadByPK(System.Int32,System.Int32,System.Decimal,System.Int32,System.Int32,System.Int32,System.Decimal,System.Decimal,System.Int32,System.Int32,System.Int32,System.Decimal,System.String,System.DateTime,System.String,System.DateTime,System.Int16,System.String,System.DateTime)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="dridtmp">The value of the primary key of the row to load</param>
 <param name="stckid">The value of the primary key of the row to load</param>
 <param name="cost">The value of the primary key of the row to load</param>
 <param name="qty">The value of the primary key of the row to load</param>
 <param name="freee">The value of the primary key of the row to load</param>
 <param name="disc">The value of the primary key of the row to load</param>
 <param name="discamnt">The value of the primary key of the row to load</param>
 <param name="drdetamnt">The value of the primary key of the row to load</param>
 <param name="drpck">The value of the primary key of the row to load</param>
 <param name="dravlbl">The value of the primary key of the row to load</param>
 <param name="preavlbl">The value of the primary key of the row to load</param>
 <param name="pcs">The value of the primary key of the row to load</param>
 <param name="sInsertid">The value of the primary key of the row to load</param>
 <param name="dtInsertdt">The value of the primary key of the row to load</param>
 <param name="sLastUpdateid">The value of the primary key of the row to load</param>
 <param name="dtLastUpdatedt">The value of the primary key of the row to load</param>
 <param name="iConcurrencyid">The value of the primary key of the row to load</param>
 <param name="lotno">The value of the primary key of the row to load</param>
 <param name="expdate">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvrydettmpManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the dlvrydettmp table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpManager.#ctor">
 <summary>
 Constructor for the dlvrydettmpManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the dlvrydettmpManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.dlvrydettmpManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvrydettmpManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvrydettmpManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpManager.BuildCollection">
 <summary>
 Returns a collection of dlvrydettmp classes based
 </summary>
 <returns>dlvrydettmpCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpManager.GetdlvrydettmpsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvrydettmpManager.GetdlvrydettmpsBydridtmp">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvryhdrtmpData">
 <summary>
 Used to Add/Edit/Delete/Select data from the dlvryhdrtmp table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpData.#ctor">
 <summary>
 Constructor for the dlvryhdrtmpData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpData.#ctor(DoorsPOS.BusinessLayer.dlvryhdrtmp)">
 <summary>
 Constructor for the dlvryhdrtmpData class
 </summary>
 <param name="entity">An instance of a dlvryhdrtmp</param>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.dlvryhdrtmp)">
 <summary>
 Constructor for the dlvryhdrtmpData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a dlvryhdrtmp</param>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.dlvryhdrtmp,DoorsPOS.BusinessLayer.dlvryhdrtmpValidator)">
 <summary>
 Constructor for the dlvryhdrtmpData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a dlvryhdrtmp</param>
 <param name="validator">An instance of a dlvryhdrtmpValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.dlvryhdrtmpData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvryhdrtmpData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvryhdrtmpData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvryhdrtmpData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvryhdrtmpData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvryhdrtmpData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvryhdrtmpData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvryhdrtmpData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvryhdrtmpData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvryhdrtmpData.WhereFilters.drinv">
 <summary>
 'drinv' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvryhdrtmpData.WhereFilters.Likedrinv">
 <summary>
 'Likedrinv' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvryhdrtmpData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvryhdrtmpData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvryhdrtmpData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvryhdrtmpData.OrderByFilters.drinv">
 <summary>
 'drinv' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvryhdrtmpData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvryhdrtmpData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvryhdrtmpData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvryhdrtmpData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvryhdrtmpData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvryhdrtmpData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvryhdrtmpData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvryhdrtmpData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvryhdrtmpData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvryhdrtmpData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvryhdrtmpData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvryhdrtmpData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvryhdrtmpData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvryhdrtmpData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvryhdrtmpData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvryhdrtmpData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvryhdrtmpData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvryhdrtmpData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvryhdrtmpData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvryhdrtmpData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvryhdrtmpData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>dlvryhdrtmp</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="dridtmp">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="dridtmp">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="dridtmp">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvryhdrtmpManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the dlvryhdrtmp table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpManager.#ctor">
 <summary>
 Constructor for the dlvryhdrtmpManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the dlvryhdrtmpManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.dlvryhdrtmpManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvryhdrtmpManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvryhdrtmpManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpManager.BuildCollection">
 <summary>
 Returns a collection of dlvryhdrtmp classes based
 </summary>
 <returns>dlvryhdrtmpCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpManager.GetdlvryhdrtmpsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpManager.GetdlvryhdrtmpsBydrinv">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvryhdrtmpManager.GetdlvryhdrtmpsByLikedrinv">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_detData">
 <summary>
 Used to Add/Edit/Delete/Select data from the dlvry_det table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detData.#ctor">
 <summary>
 Constructor for the dlvry_detData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detData.#ctor(DoorsPOS.BusinessLayer.dlvry_det)">
 <summary>
 Constructor for the dlvry_detData class
 </summary>
 <param name="entity">An instance of a dlvry_det</param>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.dlvry_det)">
 <summary>
 Constructor for the dlvry_detData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a dlvry_det</param>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.dlvry_det,DoorsPOS.BusinessLayer.dlvry_detValidator)">
 <summary>
 Constructor for the dlvry_detData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a dlvry_det</param>
 <param name="validator">An instance of a dlvry_detValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_detData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_detData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_detData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_detData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_detData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_detData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_detData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_detData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_detData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_detData.WhereFilters.sInsert_id">
 <summary>
 'sInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_detData.WhereFilters.LikesInsert_id">
 <summary>
 'LikesInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_detData.WhereFilters.stckid">
 <summary>
 'stckid' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_detData.WhereFilters.drid">
 <summary>
 'drid' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_detData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_detData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_detData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_detData.OrderByFilters.sInsert_id">
 <summary>
 'sInsert_id' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_detData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_detData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_detData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_detData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_detData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_detData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_detData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_detData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_detData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_detData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_detData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_detData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_detData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_detData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_detData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_detData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_detData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_detData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_detData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_detData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_detData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>dlvry_det</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="drdetid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="drdetid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="drdetid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_detManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the dlvry_det table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detManager.#ctor">
 <summary>
 Constructor for the dlvry_detManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the dlvry_detManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_detManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_detManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_detManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detManager.BuildCollection">
 <summary>
 Returns a collection of dlvry_det classes based
 </summary>
 <returns>dlvry_detCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detManager.Getdlvry_detsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detManager.Getdlvry_detsBysInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detManager.Getdlvry_detsByLikesInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detManager.Getdlvry_detsBystckid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_detManager.Getdlvry_detsBydrid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_hdrData">
 <summary>
 Used to Add/Edit/Delete/Select data from the dlvry_hdr table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrData.#ctor">
 <summary>
 Constructor for the dlvry_hdrData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrData.#ctor(DoorsPOS.BusinessLayer.dlvry_hdr)">
 <summary>
 Constructor for the dlvry_hdrData class
 </summary>
 <param name="entity">An instance of a dlvry_hdr</param>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.dlvry_hdr)">
 <summary>
 Constructor for the dlvry_hdrData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a dlvry_hdr</param>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.dlvry_hdr,DoorsPOS.BusinessLayer.dlvry_hdrValidator)">
 <summary>
 Constructor for the dlvry_hdrData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a dlvry_hdr</param>
 <param name="validator">An instance of a dlvry_hdrValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_hdrData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.SelectFilters.ForPayment">
 <summary>
 'ForPayment' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_hdrData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.WhereFilters.drinv">
 <summary>
 'drinv' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.WhereFilters.Likedrinv">
 <summary>
 'Likedrinv' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.WhereFilters.supcode">
 <summary>
 'supcode' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.WhereFilters.SupplierUnpd">
 <summary>
 'SupplierUnpd' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.WhereFilters.unpaid">
 <summary>
 'unpaid' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_hdrData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.OrderByFilters.drinv">
 <summary>
 'drinv' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_hdrData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_hdrData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_hdrData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_hdrData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_hdrData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_hdrData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_hdrData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_hdrData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_hdrData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_hdrData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_hdrData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_hdrData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_hdrData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>dlvry_hdr</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="drid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="drid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="drid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_hdrManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the dlvry_hdr table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrManager.#ctor">
 <summary>
 Constructor for the dlvry_hdrManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the dlvry_hdrManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_hdrManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_hdrManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_hdrManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrManager.BuildCollection">
 <summary>
 Returns a collection of dlvry_hdr classes based
 </summary>
 <returns>dlvry_hdrCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrManager.Getdlvry_hdrsBydrinv">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrManager.Getdlvry_hdrsByLikedrinv">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrManager.Getdlvry_hdrsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrManager.Getdlvry_hdrsBysupcode">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrManager.Getdlvry_hdrsBySupplierUnpd">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_hdrManager.Getdlvry_hdrsByunpaid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_payData">
 <summary>
 Used to Add/Edit/Delete/Select data from the dlvry_pay table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payData.#ctor">
 <summary>
 Constructor for the dlvry_payData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payData.#ctor(DoorsPOS.BusinessLayer.dlvry_pay)">
 <summary>
 Constructor for the dlvry_payData class
 </summary>
 <param name="entity">An instance of a dlvry_pay</param>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.dlvry_pay)">
 <summary>
 Constructor for the dlvry_payData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a dlvry_pay</param>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.dlvry_pay,DoorsPOS.BusinessLayer.dlvry_payValidator)">
 <summary>
 Constructor for the dlvry_payData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a dlvry_pay</param>
 <param name="validator">An instance of a dlvry_payValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_payData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_payData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_payData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_payData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_payData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_payData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_payData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_payData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_payData.WhereFilters.chqno">
 <summary>
 'chqno' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_payData.WhereFilters.Likechqno">
 <summary>
 'Likechqno' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_payData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_payData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_payData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_payData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_payData.OrderByFilters.chqno">
 <summary>
 'chqno' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_payData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_payData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_payData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_payData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_payData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_payData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_payData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_payData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_payData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_payData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_payData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_payData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.dlvry_payData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_payData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_payData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_payData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_payData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_payData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_payData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_payData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_payData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>dlvry_pay</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="payid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="payid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="payid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.dlvry_payManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the dlvry_pay table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payManager.#ctor">
 <summary>
 Constructor for the dlvry_payManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the dlvry_payManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_payManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_payManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.dlvry_payManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payManager.BuildCollection">
 <summary>
 Returns a collection of dlvry_pay classes based
 </summary>
 <returns>dlvry_payCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payManager.Getdlvry_paysBychqno">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payManager.Getdlvry_paysByLikechqno">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.dlvry_payManager.Getdlvry_paysByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.EmployeeTransData">
 <summary>
 Used to Add/Edit/Delete/Select data from the EmployeeTrans table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransData.#ctor">
 <summary>
 Constructor for the EmployeeTransData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransData.#ctor(DoorsPOS.BusinessLayer.EmployeeTrans)">
 <summary>
 Constructor for the EmployeeTransData class
 </summary>
 <param name="entity">An instance of a EmployeeTrans</param>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.EmployeeTrans)">
 <summary>
 Constructor for the EmployeeTransData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a EmployeeTrans</param>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.EmployeeTrans,DoorsPOS.BusinessLayer.EmployeeTransValidator)">
 <summary>
 Constructor for the EmployeeTransData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a EmployeeTrans</param>
 <param name="validator">An instance of a EmployeeTransValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.EmployeeTransData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.EmployeeTransData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.EmployeeTransData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.EmployeeTransData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.EmployeeTransData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.EmployeeTransData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.EmployeeTransData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.EmployeeTransData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.EmployeeTransData.WhereFilters.fkdate">
 <summary>
 'fkdate' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.EmployeeTransData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.EmployeeTransData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.EmployeeTransData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.EmployeeTransData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.EmployeeTransData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.EmployeeTransData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.EmployeeTransData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.EmployeeTransData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.EmployeeTransData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.EmployeeTransData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.EmployeeTransData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.EmployeeTransData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.EmployeeTransData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.EmployeeTransData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.EmployeeTransData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.EmployeeTransData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.EmployeeTransData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.EmployeeTransData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.EmployeeTransData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.EmployeeTransData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.EmployeeTransData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.EmployeeTransData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.EmployeeTransData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.EmployeeTransData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.EmployeeTransData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>EmployeeTrans</returns>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="linoutid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="linoutid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="linoutid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.EmployeeTransManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the EmployeeTrans table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransManager.#ctor">
 <summary>
 Constructor for the EmployeeTransManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the EmployeeTransManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.EmployeeTransManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.EmployeeTransManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.EmployeeTransManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransManager.BuildCollection">
 <summary>
 Returns a collection of EmployeeTrans classes based
 </summary>
 <returns>EmployeeTransCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransManager.GetEmployeeTransByfkdate">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.EmployeeTransManager.GetEmployeeTransByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.InvntoryData">
 <summary>
 Used to Add/Edit/Delete/Select data from the Invntory table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryData.#ctor">
 <summary>
 Constructor for the InvntoryData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryData.#ctor(DoorsPOS.BusinessLayer.Invntory)">
 <summary>
 Constructor for the InvntoryData class
 </summary>
 <param name="entity">An instance of a Invntory</param>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.Invntory)">
 <summary>
 Constructor for the InvntoryData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a Invntory</param>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.Invntory,DoorsPOS.BusinessLayer.InvntoryValidator)">
 <summary>
 Constructor for the InvntoryData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a Invntory</param>
 <param name="validator">An instance of a InvntoryValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.InvntoryData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.InvntoryData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.InvntoryData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.InvntoryData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.InvntoryData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.InvntoryData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.InvntoryData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.InvntoryData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.InvntoryData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.InvntoryData.WhereFilters.sInsert_id">
 <summary>
 'sInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.InvntoryData.WhereFilters.LikesInsert_id">
 <summary>
 'LikesInsert_id' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.InvntoryData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.InvntoryData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.InvntoryData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.InvntoryData.OrderByFilters.sInsert_id">
 <summary>
 'sInsert_id' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.InvntoryData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.InvntoryData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.InvntoryData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.InvntoryData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.InvntoryData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.InvntoryData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.InvntoryData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.InvntoryData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.InvntoryData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.InvntoryData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.InvntoryData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.InvntoryData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.InvntoryData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.InvntoryData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.InvntoryData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.InvntoryData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.InvntoryData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.InvntoryData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.InvntoryData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.InvntoryData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.InvntoryData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>Invntory</returns>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="miid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="miid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="miid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.InvntoryManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the Invntory table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryManager.#ctor">
 <summary>
 Constructor for the InvntoryManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the InvntoryManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.InvntoryManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.InvntoryManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.InvntoryManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryManager.BuildCollection">
 <summary>
 Returns a collection of Invntory classes based
 </summary>
 <returns>InvntoryCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryManager.GetInvntorysByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryManager.GetInvntorysBysInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.InvntoryManager.GetInvntorysByLikesInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.locationData">
 <summary>
 Used to Add/Edit/Delete/Select data from the location table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.locationData.#ctor">
 <summary>
 Constructor for the locationData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.locationData.#ctor(DoorsPOS.BusinessLayer.location)">
 <summary>
 Constructor for the locationData class
 </summary>
 <param name="entity">An instance of a location</param>
</member>
<member name="M:DoorsPOS.DataLayer.locationData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.location)">
 <summary>
 Constructor for the locationData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a location</param>
</member>
<member name="M:DoorsPOS.DataLayer.locationData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.location,DoorsPOS.BusinessLayer.locationValidator)">
 <summary>
 Constructor for the locationData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a location</param>
 <param name="validator">An instance of a locationValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.locationData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.locationData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.locationData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.locationData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.locationData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.locationData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.locationData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.locationData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.locationData.WhereFilters.Likelocation">
 <summary>
 'Likelocation' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.locationData.WhereFilters.location">
 <summary>
 'location' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.locationData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.locationData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.locationData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.locationData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.locationData.OrderByFilters.location">
 <summary>
 'location' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.locationData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.locationData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.locationData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.locationData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.locationData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.locationData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.locationData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.locationData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.locationData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.locationData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.locationData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.locationData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.locationData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.locationData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.locationData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.locationData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.locationData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.locationData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.locationData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.locationData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.locationData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.locationData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.locationData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.locationData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.locationData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.locationData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>location</returns>
</member>
<member name="M:DoorsPOS.DataLayer.locationData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.locationData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.locationData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.locationData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="locid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.locationData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.locationData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.locationData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="locid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.locationData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.locationData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.locationData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.locationData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.locationData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="locid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.locationData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.locationManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the location table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.locationManager.#ctor">
 <summary>
 Constructor for the locationManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.locationManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the locationManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.locationManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.locationManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.locationManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.locationManager.BuildCollection">
 <summary>
 Returns a collection of location classes based
 </summary>
 <returns>locationCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.locationManager.GetlocationsByLikelocation">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.locationManager.GetlocationsBylocation">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.locationManager.GetlocationsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.membersData">
 <summary>
 Used to Add/Edit/Delete/Select data from the members table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.membersData.#ctor">
 <summary>
 Constructor for the membersData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.membersData.#ctor(DoorsPOS.BusinessLayer.members)">
 <summary>
 Constructor for the membersData class
 </summary>
 <param name="entity">An instance of a members</param>
</member>
<member name="M:DoorsPOS.DataLayer.membersData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.members)">
 <summary>
 Constructor for the membersData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a members</param>
</member>
<member name="M:DoorsPOS.DataLayer.membersData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.members,DoorsPOS.BusinessLayer.membersValidator)">
 <summary>
 Constructor for the membersData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a members</param>
 <param name="validator">An instance of a membersValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.membersData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.membersData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.membersData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.membersData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.membersData.SelectFilters.WithBalance">
 <summary>
 'WithBalance' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.membersData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.membersData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.membersData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.membersData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.membersData.WhereFilters.lastname">
 <summary>
 'lastname' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.membersData.WhereFilters.Likelastname">
 <summary>
 'Likelastname' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.membersData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.membersData.WhereFilters.WithBalance">
 <summary>
 'WithBalance' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.membersData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.membersData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.membersData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.membersData.OrderByFilters.lastname">
 <summary>
 'lastname' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.membersData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.membersData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.membersData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.membersData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.membersData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.membersData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.membersData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.membersData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.membersData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.membersData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.membersData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.membersData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.membersData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.membersData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.membersData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.membersData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.membersData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.membersData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.membersData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.membersData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.membersData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.membersData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.membersData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.membersData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.membersData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.membersData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>members</returns>
</member>
<member name="M:DoorsPOS.DataLayer.membersData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.membersData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.membersData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.membersData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="CustID">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.membersData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.membersData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.membersData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="CustID">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.membersData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.membersData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.membersData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.membersData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.membersData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="CustID">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.membersData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.membersManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the members table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.membersManager.#ctor">
 <summary>
 Constructor for the membersManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.membersManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the membersManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.membersManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.membersManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.membersManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.membersManager.BuildCollection">
 <summary>
 Returns a collection of members classes based
 </summary>
 <returns>membersCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.membersManager.GetmembersBylastname">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.membersManager.GetmembersByLikelastname">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.membersManager.GetmembersByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.membersManager.GetmembersByWithBalance">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.paymentData">
 <summary>
 Used to Add/Edit/Delete/Select data from the payment table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymentData.#ctor">
 <summary>
 Constructor for the paymentData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymentData.#ctor(DoorsPOS.BusinessLayer.payment)">
 <summary>
 Constructor for the paymentData class
 </summary>
 <param name="entity">An instance of a payment</param>
</member>
<member name="M:DoorsPOS.DataLayer.paymentData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.payment)">
 <summary>
 Constructor for the paymentData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a payment</param>
</member>
<member name="M:DoorsPOS.DataLayer.paymentData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.payment,DoorsPOS.BusinessLayer.paymentValidator)">
 <summary>
 Constructor for the paymentData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a payment</param>
 <param name="validator">An instance of a paymentValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.paymentData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymentData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymentData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymentData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymentData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.paymentData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymentData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymentData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymentData.WhereFilters.CustID">
 <summary>
 'CustID' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymentData.WhereFilters.FP">
 <summary>
 'FP' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymentData.WhereFilters.LikeFP">
 <summary>
 'LikeFP' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymentData.WhereFilters.PayID">
 <summary>
 'PayID' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymentData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.paymentData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymentData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymentData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymentData.OrderByFilters.FP">
 <summary>
 'FP' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.paymentData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymentData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymentData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.paymentData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymentData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymentData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.paymentData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymentData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymentData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymentData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.paymentData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymentData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymentData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymentData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymentData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymentData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymentData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymentData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymentData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymentData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymentData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymentData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymentData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymentData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymentData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymentData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>payment</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymentData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymentData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymentData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymentData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="PayID">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymentData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymentData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymentData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="PayID">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymentData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymentData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymentData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymentData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymentData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="PayID">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.paymentData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.paymentManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the payment table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymentManager.#ctor">
 <summary>
 Constructor for the paymentManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymentManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the paymentManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.paymentManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymentManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymentManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymentManager.BuildCollection">
 <summary>
 Returns a collection of payment classes based
 </summary>
 <returns>paymentCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymentManager.GetpaymentsByCustID">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymentManager.GetpaymentsByFP">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymentManager.GetpaymentsByLikeFP">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymentManager.GetpaymentsByPayID">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymentManager.GetpaymentsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.PaymentTypeData">
 <summary>
 Used to Add/Edit/Delete/Select data from the PaymentType table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeData.#ctor">
 <summary>
 Constructor for the PaymentTypeData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeData.#ctor(DoorsPOS.BusinessLayer.PaymentType)">
 <summary>
 Constructor for the PaymentTypeData class
 </summary>
 <param name="entity">An instance of a PaymentType</param>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.PaymentType)">
 <summary>
 Constructor for the PaymentTypeData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a PaymentType</param>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.PaymentType,DoorsPOS.BusinessLayer.PaymentTypeValidator)">
 <summary>
 Constructor for the PaymentTypeData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a PaymentType</param>
 <param name="validator">An instance of a PaymentTypeValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.PaymentTypeData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.PaymentTypeData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.PaymentTypeData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.PaymentTypeData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.PaymentTypeData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.PaymentTypeData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.PaymentTypeData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.PaymentTypeData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.PaymentTypeData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.PaymentTypeData.WhereFilters.PaymentType">
 <summary>
 'PaymentType' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.PaymentTypeData.WhereFilters.LikePaymentType">
 <summary>
 'LikePaymentType' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.PaymentTypeData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.PaymentTypeData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.PaymentTypeData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.PaymentTypeData.OrderByFilters.PaymentType">
 <summary>
 'PaymentType' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.PaymentTypeData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.PaymentTypeData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.PaymentTypeData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.PaymentTypeData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.PaymentTypeData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.PaymentTypeData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.PaymentTypeData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.PaymentTypeData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.PaymentTypeData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.PaymentTypeData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.PaymentTypeData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.PaymentTypeData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.PaymentTypeData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.PaymentTypeData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.PaymentTypeData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.PaymentTypeData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.PaymentTypeData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.PaymentTypeData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.PaymentTypeData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.PaymentTypeData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.PaymentTypeData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>PaymentType</returns>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="paytypeid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="paytypeid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="paytypeid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.PaymentTypeManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the PaymentType table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeManager.#ctor">
 <summary>
 Constructor for the PaymentTypeManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the PaymentTypeManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.PaymentTypeManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.PaymentTypeManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.PaymentTypeManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeManager.BuildCollection">
 <summary>
 Returns a collection of PaymentType classes based
 </summary>
 <returns>PaymentTypeCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeManager.GetPaymentTypesByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeManager.GetPaymentTypesByPaymentType">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.PaymentTypeManager.GetPaymentTypesByLikePaymentType">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.paymntdetlData">
 <summary>
 Used to Add/Edit/Delete/Select data from the paymntdetl table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlData.#ctor">
 <summary>
 Constructor for the paymntdetlData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlData.#ctor(DoorsPOS.BusinessLayer.paymntdetl)">
 <summary>
 Constructor for the paymntdetlData class
 </summary>
 <param name="entity">An instance of a paymntdetl</param>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.paymntdetl)">
 <summary>
 Constructor for the paymntdetlData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a paymntdetl</param>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.paymntdetl,DoorsPOS.BusinessLayer.paymntdetlValidator)">
 <summary>
 Constructor for the paymntdetlData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a paymntdetl</param>
 <param name="validator">An instance of a paymntdetlValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.paymntdetlData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymntdetlData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymntdetlData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymntdetlData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymntdetlData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.paymntdetlData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymntdetlData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymntdetlData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymntdetlData.WhereFilters.drinv">
 <summary>
 'drinv' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymntdetlData.WhereFilters.Likedrinv">
 <summary>
 'Likedrinv' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymntdetlData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.paymntdetlData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymntdetlData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymntdetlData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymntdetlData.OrderByFilters.drinv">
 <summary>
 'drinv' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.paymntdetlData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymntdetlData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymntdetlData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.paymntdetlData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymntdetlData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymntdetlData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.paymntdetlData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymntdetlData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymntdetlData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymntdetlData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.paymntdetlData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymntdetlData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymntdetlData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymntdetlData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymntdetlData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymntdetlData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymntdetlData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymntdetlData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymntdetlData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymntdetlData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymntdetlData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>paymntdetl</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="pmntdetid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="pmntdetid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="pmntdetid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.paymntdetlManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the paymntdetl table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlManager.#ctor">
 <summary>
 Constructor for the paymntdetlManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the paymntdetlManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.paymntdetlManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymntdetlManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymntdetlManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlManager.BuildCollection">
 <summary>
 Returns a collection of paymntdetl classes based
 </summary>
 <returns>paymntdetlCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlManager.GetpaymntdetlsBydrinv">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlManager.GetpaymntdetlsByLikedrinv">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymntdetlManager.GetpaymntdetlsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.paymnthdrData">
 <summary>
 Used to Add/Edit/Delete/Select data from the paymnthdr table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrData.#ctor">
 <summary>
 Constructor for the paymnthdrData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrData.#ctor(DoorsPOS.BusinessLayer.paymnthdr)">
 <summary>
 Constructor for the paymnthdrData class
 </summary>
 <param name="entity">An instance of a paymnthdr</param>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.paymnthdr)">
 <summary>
 Constructor for the paymnthdrData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a paymnthdr</param>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.paymnthdr,DoorsPOS.BusinessLayer.paymnthdrValidator)">
 <summary>
 Constructor for the paymnthdrData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a paymnthdr</param>
 <param name="validator">An instance of a paymnthdrValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.paymnthdrData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymnthdrData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymnthdrData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymnthdrData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymnthdrData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.paymnthdrData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymnthdrData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymnthdrData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymnthdrData.WhereFilters.chqno">
 <summary>
 'chqno' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymnthdrData.WhereFilters.Likechqno">
 <summary>
 'Likechqno' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymnthdrData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.paymnthdrData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymnthdrData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymnthdrData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymnthdrData.OrderByFilters.chqno">
 <summary>
 'chqno' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.paymnthdrData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymnthdrData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymnthdrData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.paymnthdrData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymnthdrData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymnthdrData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.paymnthdrData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymnthdrData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymnthdrData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymnthdrData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.paymnthdrData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymnthdrData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.paymnthdrData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymnthdrData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymnthdrData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymnthdrData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymnthdrData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymnthdrData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymnthdrData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymnthdrData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymnthdrData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>paymnthdr</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="payid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="payid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="payid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.paymnthdrManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the paymnthdr table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrManager.#ctor">
 <summary>
 Constructor for the paymnthdrManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the paymnthdrManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.paymnthdrManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymnthdrManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.paymnthdrManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrManager.BuildCollection">
 <summary>
 Returns a collection of paymnthdr classes based
 </summary>
 <returns>paymnthdrCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrManager.GetpaymnthdrsBychqno">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrManager.GetpaymnthdrsByLikechqno">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.paymnthdrManager.GetpaymnthdrsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.petty_cashData">
 <summary>
 Used to Add/Edit/Delete/Select data from the petty_cash table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashData.#ctor">
 <summary>
 Constructor for the petty_cashData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashData.#ctor(DoorsPOS.BusinessLayer.petty_cash)">
 <summary>
 Constructor for the petty_cashData class
 </summary>
 <param name="entity">An instance of a petty_cash</param>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.petty_cash)">
 <summary>
 Constructor for the petty_cashData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a petty_cash</param>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.petty_cash,DoorsPOS.BusinessLayer.petty_cashValidator)">
 <summary>
 Constructor for the petty_cashData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a petty_cash</param>
 <param name="validator">An instance of a petty_cashValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.petty_cashData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.petty_cashData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.petty_cashData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.petty_cashData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.petty_cashData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.petty_cashData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.petty_cashData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.petty_cashData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.petty_cashData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.petty_cashData.WhereFilters.pcrem">
 <summary>
 'pcrem' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.petty_cashData.WhereFilters.Likepcrem">
 <summary>
 'Likepcrem' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.petty_cashData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.petty_cashData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.petty_cashData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.petty_cashData.OrderByFilters.pcrem">
 <summary>
 'pcrem' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.petty_cashData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.petty_cashData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.petty_cashData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.petty_cashData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.petty_cashData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.petty_cashData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.petty_cashData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.petty_cashData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.petty_cashData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.petty_cashData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.petty_cashData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.petty_cashData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.petty_cashData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.petty_cashData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.petty_cashData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.petty_cashData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.petty_cashData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.petty_cashData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.petty_cashData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.petty_cashData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.petty_cashData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>petty_cash</returns>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="pcid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="pcid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="pcid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.petty_cashManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the petty_cash table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashManager.#ctor">
 <summary>
 Constructor for the petty_cashManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the petty_cashManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.petty_cashManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.petty_cashManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.petty_cashManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashManager.BuildCollection">
 <summary>
 Returns a collection of petty_cash classes based
 </summary>
 <returns>petty_cashCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashManager.Getpetty_cashsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashManager.Getpetty_cashsBypcrem">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.petty_cashManager.Getpetty_cashsByLikepcrem">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.podettmpData">
 <summary>
 Used to Add/Edit/Delete/Select data from the podettmp table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpData.#ctor">
 <summary>
 Constructor for the podettmpData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpData.#ctor(DoorsPOS.BusinessLayer.podettmp)">
 <summary>
 Constructor for the podettmpData class
 </summary>
 <param name="entity">An instance of a podettmp</param>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.podettmp)">
 <summary>
 Constructor for the podettmpData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a podettmp</param>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.podettmp,DoorsPOS.BusinessLayer.podettmpValidator)">
 <summary>
 Constructor for the podettmpData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a podettmp</param>
 <param name="validator">An instance of a podettmpValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.podettmpData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.podettmpData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.podettmpData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.podettmpData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.podettmpData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.podettmpData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.podettmpData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.podettmpData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.podettmpData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.podettmpData.WhereFilters.sInsert_id">
 <summary>
 'sInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.podettmpData.WhereFilters.LikesInsert_id">
 <summary>
 'LikesInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.podettmpData.WhereFilters.poidtmp">
 <summary>
 'poidtmp' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.podettmpData.WhereFilters.stckid">
 <summary>
 'stckid' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.podettmpData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.podettmpData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.podettmpData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.podettmpData.OrderByFilters.sInsert_id">
 <summary>
 'sInsert_id' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.podettmpData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.podettmpData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.podettmpData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.podettmpData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.podettmpData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.podettmpData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.podettmpData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.podettmpData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.podettmpData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.podettmpData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.podettmpData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.podettmpData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.podettmpData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.podettmpData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.podettmpData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.podettmpData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.podettmpData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.podettmpData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.podettmpData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.podettmpData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.podettmpData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>podettmp</returns>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="podetid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="podetid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="podetid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.podettmpManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the podettmp table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpManager.#ctor">
 <summary>
 Constructor for the podettmpManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the podettmpManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.podettmpManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.podettmpManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.podettmpManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpManager.BuildCollection">
 <summary>
 Returns a collection of podettmp classes based
 </summary>
 <returns>podettmpCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpManager.GetpodettmpsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpManager.GetpodettmpsBysInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpManager.GetpodettmpsByLikesInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpManager.GetpodettmpsBypoidtmp">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.podettmpManager.GetpodettmpsBystckid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pohdrtmpData">
 <summary>
 Used to Add/Edit/Delete/Select data from the pohdrtmp table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpData.#ctor">
 <summary>
 Constructor for the pohdrtmpData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpData.#ctor(DoorsPOS.BusinessLayer.pohdrtmp)">
 <summary>
 Constructor for the pohdrtmpData class
 </summary>
 <param name="entity">An instance of a pohdrtmp</param>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.pohdrtmp)">
 <summary>
 Constructor for the pohdrtmpData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a pohdrtmp</param>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.pohdrtmp,DoorsPOS.BusinessLayer.pohdrtmpValidator)">
 <summary>
 Constructor for the pohdrtmpData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a pohdrtmp</param>
 <param name="validator">An instance of a pohdrtmpValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.pohdrtmpData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pohdrtmpData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pohdrtmpData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pohdrtmpData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pohdrtmpData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pohdrtmpData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pohdrtmpData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pohdrtmpData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pohdrtmpData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pohdrtmpData.WhereFilters.poinv">
 <summary>
 'poinv' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pohdrtmpData.WhereFilters.Likepoinv">
 <summary>
 'Likepoinv' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pohdrtmpData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pohdrtmpData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pohdrtmpData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pohdrtmpData.OrderByFilters.poinv">
 <summary>
 'poinv' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pohdrtmpData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pohdrtmpData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pohdrtmpData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pohdrtmpData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pohdrtmpData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pohdrtmpData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pohdrtmpData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pohdrtmpData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pohdrtmpData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pohdrtmpData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pohdrtmpData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pohdrtmpData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pohdrtmpData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pohdrtmpData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pohdrtmpData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pohdrtmpData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pohdrtmpData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pohdrtmpData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pohdrtmpData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pohdrtmpData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pohdrtmpData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>pohdrtmp</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="poidtmp">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="poidtmp">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="poidtmp">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pohdrtmpManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the pohdrtmp table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpManager.#ctor">
 <summary>
 Constructor for the pohdrtmpManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the pohdrtmpManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.pohdrtmpManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pohdrtmpManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pohdrtmpManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpManager.BuildCollection">
 <summary>
 Returns a collection of pohdrtmp classes based
 </summary>
 <returns>pohdrtmpCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpManager.GetpohdrtmpsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpManager.GetpohdrtmpsBypoinv">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pohdrtmpManager.GetpohdrtmpsByLikepoinv">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.posstocksData">
 <summary>
 Used to Add/Edit/Delete/Select data from the posstocks table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksData.#ctor">
 <summary>
 Constructor for the posstocksData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksData.#ctor(DoorsPOS.BusinessLayer.posstocks)">
 <summary>
 Constructor for the posstocksData class
 </summary>
 <param name="entity">An instance of a posstocks</param>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.posstocks)">
 <summary>
 Constructor for the posstocksData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a posstocks</param>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.posstocks,DoorsPOS.BusinessLayer.posstocksValidator)">
 <summary>
 Constructor for the posstocksData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a posstocks</param>
 <param name="validator">An instance of a posstocksValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.posstocksData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posstocksData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posstocksData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posstocksData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posstocksData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.posstocksData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posstocksData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posstocksData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posstocksData.WhereFilters.cashier">
 <summary>
 'cashier' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posstocksData.WhereFilters.item_desc">
 <summary>
 'item_desc' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posstocksData.WhereFilters.Likeitem_desc">
 <summary>
 'Likeitem_desc' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posstocksData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.posstocksData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posstocksData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posstocksData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posstocksData.OrderByFilters.item_desc">
 <summary>
 'item_desc' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.posstocksData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posstocksData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posstocksData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.posstocksData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posstocksData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posstocksData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.posstocksData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posstocksData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posstocksData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posstocksData.DeleteFilters.DeleteByUserID">
 <summary>
 'DeleteByUserID' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posstocksData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.posstocksData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posstocksData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posstocksData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.posstocksData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.posstocksData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.posstocksData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.posstocksData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.posstocksData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.posstocksData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.posstocksData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.posstocksData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>posstocks</returns>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksData.DeleteByPK(System.Int32,System.String,System.Double,System.Decimal,System.Decimal,System.String,System.Double,System.String)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="stckid">The value of the primary key of the row to delete</param>
 <param name="itemdesc">The value of the primary key of the row to delete</param>
 <param name="available">The value of the primary key of the row to delete</param>
 <param name="retail">The value of the primary key of the row to delete</param>
 <param name="retail2">The value of the primary key of the row to delete</param>
 <param name="sInsertid">The value of the primary key of the row to delete</param>
 <param name="packaging">The value of the primary key of the row to delete</param>
 <param name="barcode">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksData.LoadByPK(System.Int32,System.String,System.Double,System.Decimal,System.Decimal,System.String,System.Double,System.String)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="stckid">The value of the primary key of the row to load</param>
 <param name="itemdesc">The value of the primary key of the row to load</param>
 <param name="available">The value of the primary key of the row to load</param>
 <param name="retail">The value of the primary key of the row to load</param>
 <param name="retail2">The value of the primary key of the row to load</param>
 <param name="sInsertid">The value of the primary key of the row to load</param>
 <param name="packaging">The value of the primary key of the row to load</param>
 <param name="barcode">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.posstocksManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the posstocks table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksManager.#ctor">
 <summary>
 Constructor for the posstocksManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the posstocksManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.posstocksManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.posstocksManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.posstocksManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksManager.BuildCollection">
 <summary>
 Returns a collection of posstocks classes based
 </summary>
 <returns>posstocksCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksManager.GetposstocksBycashier">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksManager.GetposstocksByitem_desc">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksManager.GetposstocksByLikeitem_desc">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posstocksManager.GetposstocksByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.posVoidData">
 <summary>
 Used to Add/Edit/Delete/Select data from the posVoid table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidData.#ctor">
 <summary>
 Constructor for the posVoidData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidData.#ctor(DoorsPOS.BusinessLayer.posVoid)">
 <summary>
 Constructor for the posVoidData class
 </summary>
 <param name="entity">An instance of a posVoid</param>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.posVoid)">
 <summary>
 Constructor for the posVoidData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a posVoid</param>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.posVoid,DoorsPOS.BusinessLayer.posVoidValidator)">
 <summary>
 Constructor for the posVoidData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a posVoid</param>
 <param name="validator">An instance of a posVoidValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.posVoidData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posVoidData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posVoidData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posVoidData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posVoidData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.posVoidData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posVoidData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posVoidData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posVoidData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posVoidData.WhereFilters.barcode">
 <summary>
 'barcode' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posVoidData.WhereFilters.Likebarcode">
 <summary>
 'Likebarcode' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.posVoidData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posVoidData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posVoidData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posVoidData.OrderByFilters.barcode">
 <summary>
 'barcode' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.posVoidData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posVoidData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posVoidData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.posVoidData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posVoidData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posVoidData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.posVoidData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posVoidData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posVoidData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posVoidData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.posVoidData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posVoidData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.posVoidData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.posVoidData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.posVoidData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.posVoidData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.posVoidData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.posVoidData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.posVoidData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.posVoidData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.posVoidData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>posVoid</returns>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="voidid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="voidid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="voidid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.posVoidManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the posVoid table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidManager.#ctor">
 <summary>
 Constructor for the posVoidManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the posVoidManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.posVoidManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.posVoidManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.posVoidManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidManager.BuildCollection">
 <summary>
 Returns a collection of posVoid classes based
 </summary>
 <returns>posVoidCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidManager.GetposVoidsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidManager.GetposVoidsBybarcode">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.posVoidManager.GetposVoidsByLikebarcode">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_detData">
 <summary>
 Used to Add/Edit/Delete/Select data from the pos_det table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detData.#ctor">
 <summary>
 Constructor for the pos_detData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detData.#ctor(DoorsPOS.BusinessLayer.pos_det)">
 <summary>
 Constructor for the pos_detData class
 </summary>
 <param name="entity">An instance of a pos_det</param>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.pos_det)">
 <summary>
 Constructor for the pos_detData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a pos_det</param>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.pos_det,DoorsPOS.BusinessLayer.pos_detValidator)">
 <summary>
 Constructor for the pos_detData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a pos_det</param>
 <param name="validator">An instance of a pos_detValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.pos_detData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.SelectFilters.refunds">
 <summary>
 'refunds' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_detData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.WhereFilters.barcode">
 <summary>
 'barcode' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.WhereFilters.Likebarcode">
 <summary>
 'Likebarcode' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.WhereFilters.postmp_hdrid">
 <summary>
 'postmp_hdrid' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.WhereFilters.stckid">
 <summary>
 'stckid' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.WhereFilters.forRefunds">
 <summary>
 'forRefunds' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_detData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.OrderByFilters.barcode">
 <summary>
 'barcode' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_detData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_detData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_detData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_detData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_detData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_detData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_detData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_detData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_detData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_detData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_detData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_detData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_detData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>pos_det</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="detid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="detid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="detid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_detManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the pos_det table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detManager.#ctor">
 <summary>
 Constructor for the pos_detManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the pos_detManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.pos_detManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_detManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_detManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detManager.BuildCollection">
 <summary>
 Returns a collection of pos_det classes based
 </summary>
 <returns>pos_detCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detManager.Getpos_detsBybarcode">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detManager.Getpos_detsByLikebarcode">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detManager.Getpos_detsBypostmp_hdrid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detManager.Getpos_detsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detManager.Getpos_detsBystckid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_detManager.Getpos_detsByforRefunds">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_dettmpData">
 <summary>
 Used to Add/Edit/Delete/Select data from the pos_dettmp table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpData.#ctor">
 <summary>
 Constructor for the pos_dettmpData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpData.#ctor(DoorsPOS.BusinessLayer.pos_dettmp)">
 <summary>
 Constructor for the pos_dettmpData class
 </summary>
 <param name="entity">An instance of a pos_dettmp</param>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.pos_dettmp)">
 <summary>
 Constructor for the pos_dettmpData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a pos_dettmp</param>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.pos_dettmp,DoorsPOS.BusinessLayer.pos_dettmpValidator)">
 <summary>
 Constructor for the pos_dettmpData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a pos_dettmp</param>
 <param name="validator">An instance of a pos_dettmpValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.pos_dettmpData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_dettmpData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_dettmpData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_dettmpData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_dettmpData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_dettmpData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_dettmpData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_dettmpData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_dettmpData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_dettmpData.WhereFilters.barcode">
 <summary>
 'barcode' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_dettmpData.WhereFilters.Likebarcode">
 <summary>
 'Likebarcode' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_dettmpData.WhereFilters.postmp_hdrid">
 <summary>
 'postmp_hdrid' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_dettmpData.WhereFilters.stckid">
 <summary>
 'stckid' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_dettmpData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_dettmpData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_dettmpData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_dettmpData.OrderByFilters.barcode">
 <summary>
 'barcode' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_dettmpData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_dettmpData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_dettmpData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_dettmpData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_dettmpData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_dettmpData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_dettmpData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_dettmpData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_dettmpData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_dettmpData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_dettmpData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_dettmpData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_dettmpData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_dettmpData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_dettmpData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_dettmpData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_dettmpData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_dettmpData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_dettmpData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_dettmpData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_dettmpData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>pos_dettmp</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="dettmpid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="dettmpid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="dettmpid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_dettmpManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the pos_dettmp table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpManager.#ctor">
 <summary>
 Constructor for the pos_dettmpManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the pos_dettmpManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.pos_dettmpManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_dettmpManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_dettmpManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpManager.BuildCollection">
 <summary>
 Returns a collection of pos_dettmp classes based
 </summary>
 <returns>pos_dettmpCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpManager.Getpos_dettmpsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpManager.Getpos_dettmpsBybarcode">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpManager.Getpos_dettmpsByLikebarcode">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpManager.Getpos_dettmpsBypostmp_hdrid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_dettmpManager.Getpos_dettmpsBystckid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_hdrData">
 <summary>
 Used to Add/Edit/Delete/Select data from the pos_hdr table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrData.#ctor">
 <summary>
 Constructor for the pos_hdrData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrData.#ctor(DoorsPOS.BusinessLayer.pos_hdr)">
 <summary>
 Constructor for the pos_hdrData class
 </summary>
 <param name="entity">An instance of a pos_hdr</param>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.pos_hdr)">
 <summary>
 Constructor for the pos_hdrData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a pos_hdr</param>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.pos_hdr,DoorsPOS.BusinessLayer.pos_hdrValidator)">
 <summary>
 Constructor for the pos_hdrData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a pos_hdr</param>
 <param name="validator">An instance of a pos_hdrValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.pos_hdrData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_hdrData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrData.WhereFilters.custid">
 <summary>
 'custid' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrData.WhereFilters.InvoiceNo">
 <summary>
 'InvoiceNo' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrData.WhereFilters.LikesInsert_id">
 <summary>
 'LikesInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrData.WhereFilters.sInsert_id">
 <summary>
 'sInsert_id' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_hdrData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrData.OrderByFilters.sInsert_id">
 <summary>
 'sInsert_id' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_hdrData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_hdrData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_hdrData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_hdrData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_hdrData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_hdrData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_hdrData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_hdrData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_hdrData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_hdrData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_hdrData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_hdrData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>pos_hdr</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="postmphdrid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="postmphdrid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_hdrManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the pos_hdr table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrManager.#ctor">
 <summary>
 Constructor for the pos_hdrManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the pos_hdrManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.pos_hdrManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_hdrManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_hdrManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrManager.BuildCollection">
 <summary>
 Returns a collection of pos_hdr classes based
 </summary>
 <returns>pos_hdrCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrManager.Getpos_hdrsBycustid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrManager.Getpos_hdrsByInvoiceNo">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrManager.Getpos_hdrsByLikesInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrManager.Getpos_hdrsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrManager.Getpos_hdrsBysInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_hdrtmpData">
 <summary>
 Used to Add/Edit/Delete/Select data from the pos_hdrtmp table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpData.#ctor">
 <summary>
 Constructor for the pos_hdrtmpData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpData.#ctor(DoorsPOS.BusinessLayer.pos_hdrtmp)">
 <summary>
 Constructor for the pos_hdrtmpData class
 </summary>
 <param name="entity">An instance of a pos_hdrtmp</param>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.pos_hdrtmp)">
 <summary>
 Constructor for the pos_hdrtmpData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a pos_hdrtmp</param>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.pos_hdrtmp,DoorsPOS.BusinessLayer.pos_hdrtmpValidator)">
 <summary>
 Constructor for the pos_hdrtmpData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a pos_hdrtmp</param>
 <param name="validator">An instance of a pos_hdrtmpValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.pos_hdrtmpData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.SelectFilters.SumSales">
 <summary>
 'SumSales' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.SelectFilters.SumSDC">
 <summary>
 'SumSDC' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_hdrtmpData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.WhereFilters.CashMode">
 <summary>
 'CashMode' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.WhereFilters.CreditMode">
 <summary>
 'CreditMode' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.WhereFilters.custid">
 <summary>
 'custid' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.WhereFilters.LikesInsert_id">
 <summary>
 'LikesInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.WhereFilters.postmp_hdrid">
 <summary>
 'postmp_hdrid' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.WhereFilters.sInsert_id">
 <summary>
 'sInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.WhereFilters.tblstatus">
 <summary>
 'tblstatus' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_hdrtmpData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.OrderByFilters.sInsert_id">
 <summary>
 'sInsert_id' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_hdrtmpData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_hdrtmpData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_hdrtmpData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.DeleteFilters.tebol">
 <summary>
 'tebol' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_hdrtmpData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.pos_hdrtmpData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_hdrtmpData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_hdrtmpData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_hdrtmpData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_hdrtmpData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_hdrtmpData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_hdrtmpData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_hdrtmpData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_hdrtmpData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>pos_hdrtmp</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="postmphdrid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="postmphdrid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="postmphdrid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.pos_hdrtmpManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the pos_hdrtmp table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpManager.#ctor">
 <summary>
 Constructor for the pos_hdrtmpManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the pos_hdrtmpManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.pos_hdrtmpManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_hdrtmpManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.pos_hdrtmpManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpManager.BuildCollection">
 <summary>
 Returns a collection of pos_hdrtmp classes based
 </summary>
 <returns>pos_hdrtmpCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpManager.Getpos_hdrtmpsByCashMode">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpManager.Getpos_hdrtmpsByCreditMode">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpManager.Getpos_hdrtmpsBycustid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpManager.Getpos_hdrtmpsByLikesInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpManager.Getpos_hdrtmpsBypostmp_hdrid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpManager.Getpos_hdrtmpsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpManager.Getpos_hdrtmpsBysInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.pos_hdrtmpManager.Getpos_hdrtmpsBytblstatus">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.procpdsaTableIds_GetMaxIDData">
 <summary>
 This class calls the stored procedure procpdsaTableIds_GetMaxIDData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.procpdsaTableIds_GetMaxIDData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.procpdsaTableIds_GetMaxIDData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.procpdsaTableIds_GetMaxIDData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.procpdsaTableIds_GetMaxIDData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.procpdsaTableIds_GetMaxIDData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.procpdsaTableIds_GetMaxIDData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.procpdsaTableIds_GetMaxIDData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the procpdsaTableIds_GetMaxID class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.procpdsaTableIds_GetMaxIDData.ParameterNames.sFieldName">
 <summary>
 Returns '@sFieldName'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.procpdsaTableIds_GetMaxIDData.ParameterNames.sTableName">
 <summary>
 Returns '@sTableName'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.procpdsaTableIds_GetMaxIDData.ParameterNames.MaxVal">
 <summary>
 Returns '@MaxVal'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.procpdsaTableIds_GetMaxIDData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.procpdsaTableIds_GetMaxIDManager">
 <summary>
 This class is used to call the stored procedure procpdsaTableIds_GetMaxID
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.procpdsaTableIds_GetMaxIDManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.procpdsaTableIds_GetMaxIDManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.procpdsaTableIds_GetMaxIDManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.ReadingSumData">
 <summary>
 Used to Add/Edit/Delete/Select data from the ReadingSum table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumData.#ctor">
 <summary>
 Constructor for the ReadingSumData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumData.#ctor(DoorsPOS.BusinessLayer.ReadingSum)">
 <summary>
 Constructor for the ReadingSumData class
 </summary>
 <param name="entity">An instance of a ReadingSum</param>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.ReadingSum)">
 <summary>
 Constructor for the ReadingSumData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a ReadingSum</param>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.ReadingSum,DoorsPOS.BusinessLayer.ReadingSumValidator)">
 <summary>
 Constructor for the ReadingSumData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a ReadingSum</param>
 <param name="validator">An instance of a ReadingSumValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.ReadingSumData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ReadingSumData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ReadingSumData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ReadingSumData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ReadingSumData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.ReadingSumData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ReadingSumData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ReadingSumData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ReadingSumData.WhereFilters.LikeLocation">
 <summary>
 'LikeLocation' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ReadingSumData.WhereFilters.Location">
 <summary>
 'Location' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ReadingSumData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.ReadingSumData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ReadingSumData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ReadingSumData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ReadingSumData.OrderByFilters.Location">
 <summary>
 'Location' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.ReadingSumData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ReadingSumData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ReadingSumData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.ReadingSumData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ReadingSumData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ReadingSumData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.ReadingSumData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ReadingSumData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ReadingSumData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ReadingSumData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.ReadingSumData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ReadingSumData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.ReadingSumData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ReadingSumData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ReadingSumData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ReadingSumData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ReadingSumData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ReadingSumData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ReadingSumData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ReadingSumData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ReadingSumData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>ReadingSum</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="ReadingId">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="ReadingId">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="ReadingId">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.ReadingSumManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the ReadingSum table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumManager.#ctor">
 <summary>
 Constructor for the ReadingSumManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the ReadingSumManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.ReadingSumManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ReadingSumManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.ReadingSumManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumManager.BuildCollection">
 <summary>
 Returns a collection of ReadingSum classes based
 </summary>
 <returns>ReadingSumCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumManager.GetReadingSumsByLikeLocation">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumManager.GetReadingSumsByLocation">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.ReadingSumManager.GetReadingSumsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.receive_detData">
 <summary>
 Used to Add/Edit/Delete/Select data from the receive_det table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detData.#ctor">
 <summary>
 Constructor for the receive_detData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detData.#ctor(DoorsPOS.BusinessLayer.receive_det)">
 <summary>
 Constructor for the receive_detData class
 </summary>
 <param name="entity">An instance of a receive_det</param>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.receive_det)">
 <summary>
 Constructor for the receive_detData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a receive_det</param>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.receive_det,DoorsPOS.BusinessLayer.receive_detValidator)">
 <summary>
 Constructor for the receive_detData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a receive_det</param>
 <param name="validator">An instance of a receive_detValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.receive_detData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_detData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_detData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_detData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_detData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.receive_detData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_detData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_detData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_detData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_detData.WhereFilters.sInsert_id">
 <summary>
 'sInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_detData.WhereFilters.LikesInsert_id">
 <summary>
 'LikesInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_detData.WhereFilters.stckid">
 <summary>
 'stckid' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_detData.WhereFilters.rid">
 <summary>
 'rid' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.receive_detData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_detData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_detData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_detData.OrderByFilters.sInsert_id">
 <summary>
 'sInsert_id' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.receive_detData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_detData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_detData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.receive_detData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_detData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_detData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.receive_detData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_detData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_detData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_detData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.receive_detData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_detData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_detData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.receive_detData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.receive_detData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.receive_detData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.receive_detData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.receive_detData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.receive_detData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.receive_detData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.receive_detData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>receive_det</returns>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="rdetid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="rdetid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="rdetid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.receive_detManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the receive_det table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detManager.#ctor">
 <summary>
 Constructor for the receive_detManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the receive_detManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.receive_detManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.receive_detManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.receive_detManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detManager.BuildCollection">
 <summary>
 Returns a collection of receive_det classes based
 </summary>
 <returns>receive_detCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detManager.Getreceive_detsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detManager.Getreceive_detsBysInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detManager.Getreceive_detsByLikesInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detManager.Getreceive_detsBystckid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_detManager.Getreceive_detsByrid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.receive_hdrData">
 <summary>
 Used to Add/Edit/Delete/Select data from the receive_hdr table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrData.#ctor">
 <summary>
 Constructor for the receive_hdrData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrData.#ctor(DoorsPOS.BusinessLayer.receive_hdr)">
 <summary>
 Constructor for the receive_hdrData class
 </summary>
 <param name="entity">An instance of a receive_hdr</param>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.receive_hdr)">
 <summary>
 Constructor for the receive_hdrData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a receive_hdr</param>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.receive_hdr,DoorsPOS.BusinessLayer.receive_hdrValidator)">
 <summary>
 Constructor for the receive_hdrData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a receive_hdr</param>
 <param name="validator">An instance of a receive_hdrValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.receive_hdrData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_hdrData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_hdrData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_hdrData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_hdrData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.receive_hdrData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_hdrData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_hdrData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_hdrData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_hdrData.WhereFilters.sInsert_id">
 <summary>
 'sInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_hdrData.WhereFilters.LikesInsert_id">
 <summary>
 'LikesInsert_id' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.receive_hdrData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_hdrData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_hdrData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_hdrData.OrderByFilters.sInsert_id">
 <summary>
 'sInsert_id' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.receive_hdrData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_hdrData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_hdrData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.receive_hdrData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_hdrData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_hdrData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.receive_hdrData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_hdrData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_hdrData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_hdrData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.receive_hdrData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_hdrData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.receive_hdrData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.receive_hdrData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.receive_hdrData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.receive_hdrData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.receive_hdrData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.receive_hdrData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.receive_hdrData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.receive_hdrData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.receive_hdrData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>receive_hdr</returns>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="rid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="rid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="rid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.receive_hdrManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the receive_hdr table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrManager.#ctor">
 <summary>
 Constructor for the receive_hdrManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the receive_hdrManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.receive_hdrManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.receive_hdrManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.receive_hdrManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrManager.BuildCollection">
 <summary>
 Returns a collection of receive_hdr classes based
 </summary>
 <returns>receive_hdrCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrManager.Getreceive_hdrsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrManager.Getreceive_hdrsBysInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.receive_hdrManager.Getreceive_hdrsByLikesInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.replacementdetData">
 <summary>
 Used to Add/Edit/Delete/Select data from the replacementdet table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetData.#ctor">
 <summary>
 Constructor for the replacementdetData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetData.#ctor(DoorsPOS.BusinessLayer.replacementdet)">
 <summary>
 Constructor for the replacementdetData class
 </summary>
 <param name="entity">An instance of a replacementdet</param>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.replacementdet)">
 <summary>
 Constructor for the replacementdetData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a replacementdet</param>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.replacementdet,DoorsPOS.BusinessLayer.replacementdetValidator)">
 <summary>
 Constructor for the replacementdetData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a replacementdet</param>
 <param name="validator">An instance of a replacementdetValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.replacementdetData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementdetData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementdetData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementdetData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementdetData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.replacementdetData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementdetData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementdetData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementdetData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementdetData.WhereFilters.sInsert_id">
 <summary>
 'sInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementdetData.WhereFilters.LikesInsert_id">
 <summary>
 'LikesInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementdetData.WhereFilters.repid">
 <summary>
 'repid' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementdetData.WhereFilters.stckid">
 <summary>
 'stckid' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.replacementdetData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementdetData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementdetData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementdetData.OrderByFilters.sInsert_id">
 <summary>
 'sInsert_id' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.replacementdetData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementdetData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementdetData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.replacementdetData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementdetData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementdetData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.replacementdetData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementdetData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementdetData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementdetData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.replacementdetData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementdetData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementdetData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.replacementdetData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.replacementdetData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.replacementdetData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.replacementdetData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.replacementdetData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.replacementdetData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.replacementdetData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.replacementdetData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>replacementdet</returns>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="repdetid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="repdetid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="repdetid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.replacementdetManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the replacementdet table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetManager.#ctor">
 <summary>
 Constructor for the replacementdetManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the replacementdetManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.replacementdetManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.replacementdetManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.replacementdetManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetManager.BuildCollection">
 <summary>
 Returns a collection of replacementdet classes based
 </summary>
 <returns>replacementdetCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetManager.GetreplacementdetsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetManager.GetreplacementdetsBysInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetManager.GetreplacementdetsByLikesInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetManager.GetreplacementdetsByrepid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementdetManager.GetreplacementdetsBystckid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.replacementhdrData">
 <summary>
 Used to Add/Edit/Delete/Select data from the replacementhdr table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrData.#ctor">
 <summary>
 Constructor for the replacementhdrData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrData.#ctor(DoorsPOS.BusinessLayer.replacementhdr)">
 <summary>
 Constructor for the replacementhdrData class
 </summary>
 <param name="entity">An instance of a replacementhdr</param>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.replacementhdr)">
 <summary>
 Constructor for the replacementhdrData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a replacementhdr</param>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.replacementhdr,DoorsPOS.BusinessLayer.replacementhdrValidator)">
 <summary>
 Constructor for the replacementhdrData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a replacementhdr</param>
 <param name="validator">An instance of a replacementhdrValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.replacementhdrData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementhdrData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementhdrData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementhdrData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementhdrData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.replacementhdrData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementhdrData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementhdrData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementhdrData.WhereFilters.LikesInsert_id">
 <summary>
 'LikesInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementhdrData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementhdrData.WhereFilters.sInsert_id">
 <summary>
 'sInsert_id' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.replacementhdrData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementhdrData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementhdrData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementhdrData.OrderByFilters.sInsert_id">
 <summary>
 'sInsert_id' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.replacementhdrData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementhdrData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementhdrData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.replacementhdrData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementhdrData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementhdrData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.replacementhdrData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementhdrData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementhdrData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementhdrData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.replacementhdrData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementhdrData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.replacementhdrData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.replacementhdrData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.replacementhdrData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.replacementhdrData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.replacementhdrData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.replacementhdrData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.replacementhdrData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.replacementhdrData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.replacementhdrData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>replacementhdr</returns>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="repid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="repid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="repid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.replacementhdrManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the replacementhdr table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrManager.#ctor">
 <summary>
 Constructor for the replacementhdrManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the replacementhdrManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.replacementhdrManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.replacementhdrManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.replacementhdrManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrManager.BuildCollection">
 <summary>
 Returns a collection of replacementhdr classes based
 </summary>
 <returns>replacementhdrCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrManager.GetreplacementhdrsByLikesInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrManager.GetreplacementhdrsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.replacementhdrManager.GetreplacementhdrsBysInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.returnsData">
 <summary>
 Used to Add/Edit/Delete/Select data from the returns table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.returnsData.#ctor">
 <summary>
 Constructor for the returnsData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.returnsData.#ctor(DoorsPOS.BusinessLayer.returns)">
 <summary>
 Constructor for the returnsData class
 </summary>
 <param name="entity">An instance of a returns</param>
</member>
<member name="M:DoorsPOS.DataLayer.returnsData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.returns)">
 <summary>
 Constructor for the returnsData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a returns</param>
</member>
<member name="M:DoorsPOS.DataLayer.returnsData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.returns,DoorsPOS.BusinessLayer.returnsValidator)">
 <summary>
 Constructor for the returnsData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a returns</param>
 <param name="validator">An instance of a returnsValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.returnsData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.returnsData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.returnsData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.returnsData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.returnsData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.returnsData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.returnsData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.returnsData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.returnsData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.returnsData.WhereFilters.sInsert_id">
 <summary>
 'sInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.returnsData.WhereFilters.LikesInsert_id">
 <summary>
 'LikesInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.returnsData.WhereFilters.custid">
 <summary>
 'custid' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.returnsData.WhereFilters.stckid">
 <summary>
 'stckid' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.returnsData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.returnsData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.returnsData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.returnsData.OrderByFilters.sInsert_id">
 <summary>
 'sInsert_id' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.returnsData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.returnsData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.returnsData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.returnsData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.returnsData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.returnsData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.returnsData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.returnsData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.returnsData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.returnsData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.returnsData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.returnsData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.returnsData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.returnsData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.returnsData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.returnsData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.returnsData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.returnsData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.returnsData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.returnsData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.returnsData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.returnsData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.returnsData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.returnsData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.returnsData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.returnsData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>returns</returns>
</member>
<member name="M:DoorsPOS.DataLayer.returnsData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.returnsData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.returnsData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.returnsData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="retid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.returnsData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.returnsData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.returnsData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="retid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.returnsData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.returnsData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.returnsData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.returnsData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.returnsData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="retid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.returnsData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.returnsManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the returns table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.returnsManager.#ctor">
 <summary>
 Constructor for the returnsManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.returnsManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the returnsManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.returnsManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.returnsManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.returnsManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.returnsManager.BuildCollection">
 <summary>
 Returns a collection of returns classes based
 </summary>
 <returns>returnsCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.returnsManager.GetreturnsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.returnsManager.GetreturnsBysInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.returnsManager.GetreturnsByLikesInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.returnsManager.GetreturnsBycustid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.returnsManager.GetreturnsBystckid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spBackOrderData">
 <summary>
 This class calls the stored procedure spBackOrderData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spBackOrderData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spBackOrderData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spBackOrderData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spBackOrderData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spBackOrderData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spBackOrderData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spBackOrderData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spBackOrder class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spBackOrderData.ParameterNames.StckIid">
 <summary>
 Returns '@StckIid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spBackOrderData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spBackOrderManager">
 <summary>
 This class is used to call the stored procedure spBackOrder
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spBackOrderManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spBackOrderManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spBackOrderManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spBalanceupdateData">
 <summary>
 This class calls the stored procedure spBalanceupdateData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spBalanceupdateData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spBalanceupdateData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spBalanceupdateData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spBalanceupdateData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spBalanceupdateData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spBalanceupdateData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spBalanceupdateData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spBalanceupdate class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spBalanceupdateData.ParameterNames.postmphdrid">
 <summary>
 Returns '@postmp_hdrid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spBalanceupdateData.ParameterNames.custid">
 <summary>
 Returns '@custid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spBalanceupdateData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spBalanceupdateManager">
 <summary>
 This class is used to call the stored procedure spBalanceupdate
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spBalanceupdateManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spBalanceupdateManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spBalanceupdateManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spBanksData">
 <summary>
 This class calls the stored procedure spBanksData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spBanksData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spBanksData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spBanksData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spBanksData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spBanksData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spBanksData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>spBanks</returns>
</member>
<member name="T:DoorsPOS.DataLayer.spBanksData.ColumnNames">
 <summary>
 Contains static string properties that represent the name of each property in the spBanks class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spBanksManager">
 <summary>
 This class is used to call the stored procedure spBanks
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spBanksManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the DataObject class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spBanksManager.DataObject">
 <summary>
 Get/Set the data class that contains the logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spBanksManager.BuildCollection">
 <summary>
 Returns a collection of spBanks classes based
 </summary>
 <returns>spBanksCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.spBanksManager.CloneEntity">
 <summary>
 Clones the current spBanks
 </summary>
 <returns>A cloned spBanks object</returns>
</member>
<member name="M:DoorsPOS.DataLayer.spBanksManager.CloneEntity(DoorsPOS.BusinessLayer.spBanks)">
 <summary>
 Clones the passed in spBanks
 </summary>
 <returns>A cloned spBanks object</returns>
</member>
<member name="T:DoorsPOS.DataLayer.spConvertFirstData">
 <summary>
 This class calls the stored procedure spConvertFirstData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spConvertFirstData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spConvertFirstData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spConvertFirstData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spConvertFirstData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spConvertFirstData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spConvertFirstData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spConvertFirstData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spConvertFirst class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spConvertFirstData.ParameterNames.StckIid">
 <summary>
 Returns '@StckIid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spConvertFirstData.ParameterNames.Convertid">
 <summary>
 Returns '@Convertid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spConvertFirstData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spConvertFirstManager">
 <summary>
 This class is used to call the stored procedure spConvertFirst
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spConvertFirstManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spConvertFirstManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spConvertFirstManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spConvertsecondData">
 <summary>
 This class calls the stored procedure spConvertsecondData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spConvertsecondData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spConvertsecondData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spConvertsecondData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spConvertsecondData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spConvertsecondData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spConvertsecondData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spConvertsecondData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spConvertsecond class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spConvertsecondData.ParameterNames.StckIid">
 <summary>
 Returns '@StckIid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spConvertsecondData.ParameterNames.Convertid">
 <summary>
 Returns '@Convertid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spConvertsecondData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spConvertsecondManager">
 <summary>
 This class is used to call the stored procedure spConvertsecond
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spConvertsecondManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spConvertsecondManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spConvertsecondManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spCreditNoData">
 <summary>
 This class calls the stored procedure spCreditNoData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spCreditNoData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spCreditNoData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spCreditNoData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spCreditNoData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spCreditNoData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spCreditNoData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spCreditNoData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spCreditNo class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spCreditNoData.ParameterNames.CreditNo">
 <summary>
 Returns '@CreditNo'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spCreditNoData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spCreditNoManager">
 <summary>
 This class is used to call the stored procedure spCreditNo
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spCreditNoManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spCreditNoManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spCreditNoManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spDelposstocksData">
 <summary>
 This class calls the stored procedure spDelposstocksData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spDelposstocksData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spDelposstocksData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spDelposstocksData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spDelposstocksData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spDelposstocksData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spDelposstocksData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spDelposstocksData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spDelposstocks class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spDelposstocksData.ParameterNames.sInsertid">
 <summary>
 Returns '@sInsertid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spDelposstocksData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spDelposstocksManager">
 <summary>
 This class is used to call the stored procedure spDelposstocks
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spDelposstocksManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spDelposstocksManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spDelposstocksManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spDlvryProcData">
 <summary>
 This class calls the stored procedure spDlvryProcData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spDlvryProcData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spDlvryProcData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spDlvryProcData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spDlvryProcData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spDlvryProcData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spDlvryProcData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spDlvryProcData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spDlvryProc class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spDlvryProcData.ParameterNames.drdrid">
 <summary>
 Returns '@drdrid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spDlvryProcData.ParameterNames.supcode">
 <summary>
 Returns '@supcode'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spDlvryProcData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spDlvryProcManager">
 <summary>
 This class is used to call the stored procedure spDlvryProc
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spDlvryProcManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spDlvryProcManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spDlvryProcManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spGetDrReceiptNoData">
 <summary>
 This class calls the stored procedure spGetDrReceiptNoData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetDrReceiptNoData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetDrReceiptNoData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetDrReceiptNoData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetDrReceiptNoData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetDrReceiptNoData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetDrReceiptNoData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spGetDrReceiptNoData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spGetDrReceiptNo class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetDrReceiptNoData.ParameterNames.DrReceiptNo">
 <summary>
 Returns '@DrReceiptNo'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetDrReceiptNoData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spGetDrReceiptNoManager">
 <summary>
 This class is used to call the stored procedure spGetDrReceiptNo
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetDrReceiptNoManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetDrReceiptNoManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetDrReceiptNoManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spGetReadingNoData">
 <summary>
 This class calls the stored procedure spGetReadingNoData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetReadingNoData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetReadingNoData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetReadingNoData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetReadingNoData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetReadingNoData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetReadingNoData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spGetReadingNoData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spGetReadingNo class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetReadingNoData.ParameterNames.ReadingNo">
 <summary>
 Returns '@ReadingNo'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetReadingNoData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spGetReadingNoManager">
 <summary>
 This class is used to call the stored procedure spGetReadingNo
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetReadingNoManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetReadingNoManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetReadingNoManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spGetReceiptNoData">
 <summary>
 This class calls the stored procedure spGetReceiptNoData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetReceiptNoData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetReceiptNoData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetReceiptNoData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetReceiptNoData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetReceiptNoData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetReceiptNoData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spGetReceiptNoData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spGetReceiptNo class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetReceiptNoData.ParameterNames.ReceiptNo">
 <summary>
 Returns '@ReceiptNo'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetReceiptNoData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spGetReceiptNoManager">
 <summary>
 This class is used to call the stored procedure spGetReceiptNo
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetReceiptNoManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetReceiptNoManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetReceiptNoManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spGetReceiveNoData">
 <summary>
 This class calls the stored procedure spGetReceiveNoData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetReceiveNoData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetReceiveNoData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetReceiveNoData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetReceiveNoData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetReceiveNoData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetReceiveNoData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spGetReceiveNoData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spGetReceiveNo class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetReceiveNoData.ParameterNames.ReceiveNo">
 <summary>
 Returns '@ReceiveNo'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetReceiveNoData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spGetReceiveNoManager">
 <summary>
 This class is used to call the stored procedure spGetReceiveNo
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetReceiveNoManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetReceiveNoManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetReceiveNoManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spGetReplaceNoData">
 <summary>
 This class calls the stored procedure spGetReplaceNoData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetReplaceNoData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetReplaceNoData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetReplaceNoData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetReplaceNoData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetReplaceNoData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetReplaceNoData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spGetReplaceNoData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spGetReplaceNo class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetReplaceNoData.ParameterNames.ReplaceNo">
 <summary>
 Returns '@ReplaceNo'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetReplaceNoData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spGetReplaceNoManager">
 <summary>
 This class is used to call the stored procedure spGetReplaceNo
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetReplaceNoManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetReplaceNoManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetReplaceNoManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spGetSalesLast30daysData">
 <summary>
 This class calls the stored procedure spGetSalesLast30daysData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetSalesLast30daysData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetSalesLast30daysData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetSalesLast30daysData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetSalesLast30daysData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetSalesLast30daysData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetSalesLast30daysData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spGetSalesLast30daysData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spGetSalesLast30days class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetSalesLast30daysData.ParameterNames.Itemdescription">
 <summary>
 Returns '@Itemdescription'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetSalesLast30daysData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spGetSalesLast30daysManager">
 <summary>
 This class is used to call the stored procedure spGetSalesLast30days
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetSalesLast30daysManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetSalesLast30daysManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetSalesLast30daysManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spGetTotalAccSalesPerTerminalData">
 <summary>
 This class calls the stored procedure spGetTotalAccSalesPerTerminalData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTotalAccSalesPerTerminalData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTotalAccSalesPerTerminalData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTotalAccSalesPerTerminalData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTotalAccSalesPerTerminalData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTotalAccSalesPerTerminalData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTotalAccSalesPerTerminalData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spGetTotalAccSalesPerTerminalData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spGetTotalAccSalesPerTerminal class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTotalAccSalesPerTerminalData.ParameterNames.Terminal">
 <summary>
 Returns '@Terminal'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTotalAccSalesPerTerminalData.ParameterNames.TotalAccuSales">
 <summary>
 Returns '@TotalAccuSales'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTotalAccSalesPerTerminalData.ParameterNames.MAxReadingId">
 <summary>
 Returns '@MAxReadingId'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTotalAccSalesPerTerminalData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spGetTotalAccSalesPerTerminalManager">
 <summary>
 This class is used to call the stored procedure spGetTotalAccSalesPerTerminal
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTotalAccSalesPerTerminalManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTotalAccSalesPerTerminalManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTotalAccSalesPerTerminalManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spGetTotalSalesData">
 <summary>
 This class calls the stored procedure spGetTotalSalesData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTotalSalesData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTotalSalesData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTotalSalesData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTotalSalesData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTotalSalesData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTotalSalesData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spGetTotalSalesData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spGetTotalSales class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTotalSalesData.ParameterNames.InsertID">
 <summary>
 Returns '@InsertID'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTotalSalesData.ParameterNames.TotalSales">
 <summary>
 Returns '@TotalSales'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTotalSalesData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spGetTotalSalesDiscountCreditData">
 <summary>
 This class calls the stored procedure spGetTotalSalesDiscountCreditData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTotalSalesDiscountCreditData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTotalSalesDiscountCreditData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTotalSalesDiscountCreditData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTotalSalesDiscountCreditData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTotalSalesDiscountCreditData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTotalSalesDiscountCreditData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spGetTotalSalesDiscountCreditData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spGetTotalSalesDiscountCredit class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTotalSalesDiscountCreditData.ParameterNames.InsertID">
 <summary>
 Returns '@InsertID'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTotalSalesDiscountCreditData.ParameterNames.TotalSales">
 <summary>
 Returns '@TotalSales'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTotalSalesDiscountCreditData.ParameterNames.TotalDiscamnt">
 <summary>
 Returns '@TotalDiscamnt'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTotalSalesDiscountCreditData.ParameterNames.TotalCredit">
 <summary>
 Returns '@TotalCredit'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTotalSalesDiscountCreditData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spGetTotalSalesDiscountCreditManager">
 <summary>
 This class is used to call the stored procedure spGetTotalSalesDiscountCredit
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTotalSalesDiscountCreditManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTotalSalesDiscountCreditManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTotalSalesDiscountCreditManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spGetTotalSalesManager">
 <summary>
 This class is used to call the stored procedure spGetTotalSales
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTotalSalesManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTotalSalesManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTotalSalesManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spGetTransAmountData">
 <summary>
 This class calls the stored procedure spGetTransAmountData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTransAmountData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTransAmountData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTransAmountData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTransAmountData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTransAmountData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTransAmountData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spGetTransAmountData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spGetTransAmount class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTransAmountData.ParameterNames.InsertID">
 <summary>
 Returns '@InsertID'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTransAmountData.ParameterNames.TotalSales">
 <summary>
 Returns '@TotalSales'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTransAmountData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spGetTransAmountManager">
 <summary>
 This class is used to call the stored procedure spGetTransAmount
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTransAmountManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTransAmountManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTransAmountManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spGetTransferNoData">
 <summary>
 This class calls the stored procedure spGetTransferNoData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTransferNoData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTransferNoData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTransferNoData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTransferNoData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTransferNoData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTransferNoData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spGetTransferNoData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spGetTransferNo class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTransferNoData.ParameterNames.TransferNo">
 <summary>
 Returns '@TransferNo'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTransferNoData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spGetTransferNoManager">
 <summary>
 This class is used to call the stored procedure spGetTransferNo
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTransferNoManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spGetTransferNoManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spGetTransferNoManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spHiStocksData">
 <summary>
 This class calls the stored procedure spHiStocksData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spHiStocksData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spHiStocksData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spHiStocksData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spHiStocksData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spHiStocksData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spHiStocksData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spHiStocksData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spHiStocks class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spHiStocksData.ParameterNames.StockCount">
 <summary>
 Returns '@StockCount'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spHiStocksData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spHiStocksManager">
 <summary>
 This class is used to call the stored procedure spHiStocks
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spHiStocksManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spHiStocksManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spHiStocksManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spInvntoryData">
 <summary>
 This class calls the stored procedure spInvntoryData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spInvntoryData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spInvntoryData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spInvntoryData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spInvntoryData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spInvntoryData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spInvntoryData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spInvntoryData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spInvntory class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spInvntoryData.ParameterNames.StckIid">
 <summary>
 Returns '@StckIid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spInvntoryData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spInvntoryManager">
 <summary>
 This class is used to call the stored procedure spInvntory
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spInvntoryManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spInvntoryManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spInvntoryManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spLowStocksData">
 <summary>
 This class calls the stored procedure spLowStocksData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spLowStocksData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spLowStocksData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spLowStocksData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spLowStocksData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spLowStocksData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spLowStocksData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spLowStocksData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spLowStocks class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spLowStocksData.ParameterNames.StockCount">
 <summary>
 Returns '@StockCount'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spLowStocksData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spLowStocksManager">
 <summary>
 This class is used to call the stored procedure spLowStocks
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spLowStocksManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spLowStocksManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spLowStocksManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spProductBalanceupdateandItemLedgerEntryData">
 <summary>
 This class calls the stored procedure spProductBalanceupdateandItemLedgerEntryData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spProductBalanceupdateandItemLedgerEntryData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spProductBalanceupdateandItemLedgerEntryData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spProductBalanceupdateandItemLedgerEntryData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spProductBalanceupdateandItemLedgerEntryData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spProductBalanceupdateandItemLedgerEntryData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spProductBalanceupdateandItemLedgerEntryData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spProductBalanceupdateandItemLedgerEntryData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spProductBalanceupdateandItemLedgerEntry class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spProductBalanceupdateandItemLedgerEntryData.ParameterNames.postmphdrid">
 <summary>
 Returns '@postmphdrid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spProductBalanceupdateandItemLedgerEntryData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spProductBalanceupdateandItemLedgerEntryManager">
 <summary>
 This class is used to call the stored procedure spProductBalanceupdateandItemLedgerEntry
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spProductBalanceupdateandItemLedgerEntryManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spProductBalanceupdateandItemLedgerEntryManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spProductBalanceupdateandItemLedgerEntryManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spReceiveProcData">
 <summary>
 This class calls the stored procedure spReceiveProcData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spReceiveProcData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spReceiveProcData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spReceiveProcData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spReceiveProcData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spReceiveProcData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spReceiveProcData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spReceiveProcData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spReceiveProc class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spReceiveProcData.ParameterNames.rid">
 <summary>
 Returns '@rid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spReceiveProcData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spReceiveProcManager">
 <summary>
 This class is used to call the stored procedure spReceiveProc
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spReceiveProcManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spReceiveProcManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spReceiveProcManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spReplaceProcData">
 <summary>
 This class calls the stored procedure spReplaceProcData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spReplaceProcData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spReplaceProcData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spReplaceProcData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spReplaceProcData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spReplaceProcData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spReplaceProcData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spReplaceProcData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spReplaceProc class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spReplaceProcData.ParameterNames.repid">
 <summary>
 Returns '@repid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spReplaceProcData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spReplaceProcManager">
 <summary>
 This class is used to call the stored procedure spReplaceProc
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spReplaceProcManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spReplaceProcManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spReplaceProcManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spSearchItemsData">
 <summary>
 This class calls the stored procedure spSearchItemsData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spSearchItemsData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spSearchItemsData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spSearchItemsData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spSearchItemsData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spSearchItemsData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spSearchItemsData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spSearchItemsData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spSearchItems class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spSearchItemsData.ParameterNames.itemdesc">
 <summary>
 Returns '@item_desc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spSearchItemsData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spSearchItemsManager">
 <summary>
 This class is used to call the stored procedure spSearchItems
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spSearchItemsManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spSearchItemsManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spSearchItemsManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spStocks2Data">
 <summary>
 This class calls the stored procedure spStocks2Data
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spStocks2Data.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spStocks2Data.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spStocks2Data.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spStocks2Data.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spStocks2Data.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spStocks2Data.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spStocks2Data.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spStocks2 class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spStocks2Data.ParameterNames.bcode">
 <summary>
 Returns '@bcode'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spStocks2Data.ParameterNames.sInsertid">
 <summary>
 Returns '@sInsertid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spStocks2Data.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spStocks2Manager">
 <summary>
 This class is used to call the stored procedure spStocks2
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spStocks2Manager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spStocks2Manager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spStocks2Manager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spStocksData">
 <summary>
 This class calls the stored procedure spStocksData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spStocksData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spStocksData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spStocksData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spStocksData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spStocksData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spStocksData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spStocksData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spStocks class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spStocksData.ParameterNames.itemdesc">
 <summary>
 Returns '@item_desc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spStocksData.ParameterNames.sInsertid">
 <summary>
 Returns '@sInsertid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spStocksData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spStocksManager">
 <summary>
 This class is used to call the stored procedure spStocks
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spStocksManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spStocksManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spStocksManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spSuppliers2Data">
 <summary>
 This class calls the stored procedure spSuppliers2Data
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spSuppliers2Data.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spSuppliers2Data.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spSuppliers2Data.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spSuppliers2Data.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spSuppliers2Data.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spSuppliers2Data.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spSuppliers2Data.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spSuppliers2 class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spSuppliers2Data.ParameterNames.supname">
 <summary>
 Returns '@supname'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spSuppliers2Data.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spSuppliers2Manager">
 <summary>
 This class is used to call the stored procedure spSuppliers2
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spSuppliers2Manager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spSuppliers2Manager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spSuppliers2Manager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spSuppliersData">
 <summary>
 This class calls the stored procedure spSuppliersData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spSuppliersData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spSuppliersData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spSuppliersData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spSuppliersData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spSuppliersData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spSuppliersData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>spSuppliers</returns>
</member>
<member name="T:DoorsPOS.DataLayer.spSuppliersData.ColumnNames">
 <summary>
 Contains static string properties that represent the name of each property in the spSuppliers class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spSuppliersManager">
 <summary>
 This class is used to call the stored procedure spSuppliers
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spSuppliersManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the DataObject class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spSuppliersManager.DataObject">
 <summary>
 Get/Set the data class that contains the logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spSuppliersManager.BuildCollection">
 <summary>
 Returns a collection of spSuppliers classes based
 </summary>
 <returns>spSuppliersCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.spSuppliersManager.CloneEntity">
 <summary>
 Clones the current spSuppliers
 </summary>
 <returns>A cloned spSuppliers object</returns>
</member>
<member name="M:DoorsPOS.DataLayer.spSuppliersManager.CloneEntity(DoorsPOS.BusinessLayer.spSuppliers)">
 <summary>
 Clones the passed in spSuppliers
 </summary>
 <returns>A cloned spSuppliers object</returns>
</member>
<member name="T:DoorsPOS.DataLayer.spTmptoFinalPOSData">
 <summary>
 This class calls the stored procedure spTmptoFinalPOSData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spTmptoFinalPOSData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spTmptoFinalPOSData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spTmptoFinalPOSData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spTmptoFinalPOSData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spTmptoFinalPOSData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spTmptoFinalPOSData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spTmptoFinalPOSData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spTmptoFinalPOS class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spTmptoFinalPOSData.ParameterNames.InsertID">
 <summary>
 Returns '@InsertID'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spTmptoFinalPOSData.ParameterNames.trminal">
 <summary>
 Returns '@trminal'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spTmptoFinalPOSData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spTmptoFinalPOSManager">
 <summary>
 This class is used to call the stored procedure spTmptoFinalPOS
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spTmptoFinalPOSManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spTmptoFinalPOSManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spTmptoFinalPOSManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spTransferProcData">
 <summary>
 This class calls the stored procedure spTransferProcData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spTransferProcData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spTransferProcData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spTransferProcData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spTransferProcData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spTransferProcData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spTransferProcData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.spTransferProcData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the spTransferProc class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spTransferProcData.ParameterNames.tid">
 <summary>
 Returns '@tid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spTransferProcData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.spTransferProcManager">
 <summary>
 This class is used to call the stored procedure spTransferProc
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spTransferProcManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.spTransferProcManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.spTransferProcManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.stocksData">
 <summary>
 Used to Add/Edit/Delete/Select data from the stocks table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.stocksData.#ctor">
 <summary>
 Constructor for the stocksData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.stocksData.#ctor(DoorsPOS.BusinessLayer.stocks)">
 <summary>
 Constructor for the stocksData class
 </summary>
 <param name="entity">An instance of a stocks</param>
</member>
<member name="M:DoorsPOS.DataLayer.stocksData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.stocks)">
 <summary>
 Constructor for the stocksData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a stocks</param>
</member>
<member name="M:DoorsPOS.DataLayer.stocksData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.stocks,DoorsPOS.BusinessLayer.stocksValidator)">
 <summary>
 Constructor for the stocksData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a stocks</param>
 <param name="validator">An instance of a stocksValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.stocksData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.SelectFilters.positems">
 <summary>
 'positems' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.SelectFilters.posstocks">
 <summary>
 'posstocks' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.stocksData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.WhereFilters.barcode">
 <summary>
 'barcode' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.WhereFilters.categoryid">
 <summary>
 'categoryid' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.WhereFilters.dept">
 <summary>
 'dept' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.WhereFilters.item_desc">
 <summary>
 'item_desc' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.WhereFilters.items">
 <summary>
 'items' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.WhereFilters.Likebarcode">
 <summary>
 'Likebarcode' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.WhereFilters.likeitem">
 <summary>
 'likeitem' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.WhereFilters.sizeid">
 <summary>
 'sizeid' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.WhereFilters.supcode">
 <summary>
 'supcode' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.stocksData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.OrderByFilters.barcode">
 <summary>
 'barcode' OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.OrderByFilters.itemdesc">
 <summary>
 'itemdesc' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.stocksData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.stocksData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.stocksData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.stocksData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.stocksData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.stocksData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.stocksData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.stocksData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.stocksData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.stocksData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.stocksData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.stocksData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.stocksData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.stocksData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.stocksData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.stocksData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.stocksData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.stocksData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>stocks</returns>
</member>
<member name="M:DoorsPOS.DataLayer.stocksData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.stocksData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.stocksData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.stocksData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="stckid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.stocksData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.stocksData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.stocksData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="stckid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.stocksData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.stocksData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.stocksData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.stocksData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.stocksData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="stckid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.stocksData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.stocksManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the stocks table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.stocksManager.#ctor">
 <summary>
 Constructor for the stocksManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.stocksManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the stocksManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.stocksManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.stocksManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.stocksManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.stocksManager.BuildCollection">
 <summary>
 Returns a collection of stocks classes based
 </summary>
 <returns>stocksCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.stocksManager.GetstocksBybarcode">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.stocksManager.GetstocksBycategoryid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.stocksManager.GetstocksBydept">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.stocksManager.GetstocksByitem_desc">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.stocksManager.GetstocksByitems">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.stocksManager.GetstocksByLikebarcode">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.stocksManager.GetstocksBylikeitem">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.stocksManager.GetstocksByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.stocksManager.GetstocksBysizeid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.stocksManager.GetstocksBysupcode">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.suppliersData">
 <summary>
 Used to Add/Edit/Delete/Select data from the suppliers table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersData.#ctor">
 <summary>
 Constructor for the suppliersData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersData.#ctor(DoorsPOS.BusinessLayer.suppliers)">
 <summary>
 Constructor for the suppliersData class
 </summary>
 <param name="entity">An instance of a suppliers</param>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.suppliers)">
 <summary>
 Constructor for the suppliersData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a suppliers</param>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.suppliers,DoorsPOS.BusinessLayer.suppliersValidator)">
 <summary>
 Constructor for the suppliersData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a suppliers</param>
 <param name="validator">An instance of a suppliersValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.suppliersData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.suppliersData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.suppliersData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.suppliersData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.suppliersData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.suppliersData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.suppliersData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.suppliersData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.suppliersData.WhereFilters.Likesupplier">
 <summary>
 'Likesupplier' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.suppliersData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.suppliersData.WhereFilters.supplier">
 <summary>
 'supplier' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.suppliersData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.suppliersData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.suppliersData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.suppliersData.OrderByFilters.supplier">
 <summary>
 'supplier' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.suppliersData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.suppliersData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.suppliersData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.suppliersData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.suppliersData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.suppliersData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.suppliersData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.suppliersData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.suppliersData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.suppliersData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.suppliersData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.suppliersData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.suppliersData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.suppliersData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.suppliersData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.suppliersData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.suppliersData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.suppliersData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.suppliersData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.suppliersData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.suppliersData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>suppliers</returns>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="supcode">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="supcode">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="supcode">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.suppliersManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the suppliers table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersManager.#ctor">
 <summary>
 Constructor for the suppliersManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the suppliersManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.suppliersManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.suppliersManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.suppliersManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersManager.BuildCollection">
 <summary>
 Returns a collection of suppliers classes based
 </summary>
 <returns>suppliersCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersManager.GetsuppliersByLikesupplier">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersManager.GetsuppliersByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.suppliersManager.GetsuppliersBysupplier">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblBarcodesData">
 <summary>
 Used to Add/Edit/Delete/Select data from the tblBarcodes table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesData.#ctor">
 <summary>
 Constructor for the tblBarcodesData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesData.#ctor(DoorsPOS.BusinessLayer.tblBarcodes)">
 <summary>
 Constructor for the tblBarcodesData class
 </summary>
 <param name="entity">An instance of a tblBarcodes</param>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.tblBarcodes)">
 <summary>
 Constructor for the tblBarcodesData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a tblBarcodes</param>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.tblBarcodes,DoorsPOS.BusinessLayer.tblBarcodesValidator)">
 <summary>
 Constructor for the tblBarcodesData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a tblBarcodes</param>
 <param name="validator">An instance of a tblBarcodesValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.tblBarcodesData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblBarcodesData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblBarcodesData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblBarcodesData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblBarcodesData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblBarcodesData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblBarcodesData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblBarcodesData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblBarcodesData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblBarcodesData.WhereFilters.barcode">
 <summary>
 'barcode' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblBarcodesData.WhereFilters.Likebarcode">
 <summary>
 'Likebarcode' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblBarcodesData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblBarcodesData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblBarcodesData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblBarcodesData.OrderByFilters.barcode">
 <summary>
 'barcode' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblBarcodesData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblBarcodesData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblBarcodesData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblBarcodesData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblBarcodesData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblBarcodesData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblBarcodesData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblBarcodesData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblBarcodesData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblBarcodesData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblBarcodesData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblBarcodesData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblBarcodesData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblBarcodesData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblBarcodesData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblBarcodesData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblBarcodesData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblBarcodesData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblBarcodesData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblBarcodesData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblBarcodesData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>tblBarcodes</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="bcodeid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="bcodeid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="bcodeid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblBarcodesManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the tblBarcodes table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesManager.#ctor">
 <summary>
 Constructor for the tblBarcodesManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the tblBarcodesManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.tblBarcodesManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblBarcodesManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblBarcodesManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesManager.BuildCollection">
 <summary>
 Returns a collection of tblBarcodes classes based
 </summary>
 <returns>tblBarcodesCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesManager.GettblBarcodesByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesManager.GettblBarcodesBybarcode">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblBarcodesManager.GettblBarcodesByLikebarcode">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblChangedPriceData">
 <summary>
 Used to Add/Edit/Delete/Select data from the tblChangedPrice table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceData.#ctor">
 <summary>
 Constructor for the tblChangedPriceData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceData.#ctor(DoorsPOS.BusinessLayer.tblChangedPrice)">
 <summary>
 Constructor for the tblChangedPriceData class
 </summary>
 <param name="entity">An instance of a tblChangedPrice</param>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.tblChangedPrice)">
 <summary>
 Constructor for the tblChangedPriceData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a tblChangedPrice</param>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.tblChangedPrice,DoorsPOS.BusinessLayer.tblChangedPriceValidator)">
 <summary>
 Constructor for the tblChangedPriceData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a tblChangedPrice</param>
 <param name="validator">An instance of a tblChangedPriceValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.tblChangedPriceData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblChangedPriceData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblChangedPriceData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblChangedPriceData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblChangedPriceData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblChangedPriceData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblChangedPriceData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblChangedPriceData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblChangedPriceData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblChangedPriceData.WhereFilters.sInsert_id">
 <summary>
 'sInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblChangedPriceData.WhereFilters.LikesInsert_id">
 <summary>
 'LikesInsert_id' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblChangedPriceData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblChangedPriceData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblChangedPriceData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblChangedPriceData.OrderByFilters.sInsert_id">
 <summary>
 'sInsert_id' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblChangedPriceData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblChangedPriceData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblChangedPriceData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblChangedPriceData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblChangedPriceData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblChangedPriceData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblChangedPriceData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblChangedPriceData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblChangedPriceData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblChangedPriceData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblChangedPriceData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblChangedPriceData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblChangedPriceData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblChangedPriceData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblChangedPriceData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblChangedPriceData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblChangedPriceData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblChangedPriceData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblChangedPriceData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblChangedPriceData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblChangedPriceData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>tblChangedPrice</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="cpid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="cpid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="cpid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblChangedPriceManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the tblChangedPrice table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceManager.#ctor">
 <summary>
 Constructor for the tblChangedPriceManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the tblChangedPriceManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.tblChangedPriceManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblChangedPriceManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblChangedPriceManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceManager.BuildCollection">
 <summary>
 Returns a collection of tblChangedPrice classes based
 </summary>
 <returns>tblChangedPriceCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceManager.GettblChangedPricesByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceManager.GettblChangedPricesBysInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblChangedPriceManager.GettblChangedPricesByLikesInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblExpensesData">
 <summary>
 Used to Add/Edit/Delete/Select data from the tblExpenses table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesData.#ctor">
 <summary>
 Constructor for the tblExpensesData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesData.#ctor(DoorsPOS.BusinessLayer.tblExpenses)">
 <summary>
 Constructor for the tblExpensesData class
 </summary>
 <param name="entity">An instance of a tblExpenses</param>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.tblExpenses)">
 <summary>
 Constructor for the tblExpensesData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a tblExpenses</param>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.tblExpenses,DoorsPOS.BusinessLayer.tblExpensesValidator)">
 <summary>
 Constructor for the tblExpensesData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a tblExpenses</param>
 <param name="validator">An instance of a tblExpensesValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.tblExpensesData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpensesData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpensesData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpensesData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpensesData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblExpensesData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpensesData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpensesData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpensesData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpensesData.WhereFilters.expdesc">
 <summary>
 'expdesc' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpensesData.WhereFilters.Likeexpdesc">
 <summary>
 'Likeexpdesc' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblExpensesData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpensesData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpensesData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpensesData.OrderByFilters.expdesc">
 <summary>
 'expdesc' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblExpensesData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpensesData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpensesData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblExpensesData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpensesData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpensesData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblExpensesData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpensesData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpensesData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpensesData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblExpensesData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpensesData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpensesData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblExpensesData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblExpensesData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblExpensesData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblExpensesData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblExpensesData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblExpensesData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblExpensesData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblExpensesData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>tblExpenses</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="expenseid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="expenseid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="expenseid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblExpensesManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the tblExpenses table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesManager.#ctor">
 <summary>
 Constructor for the tblExpensesManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the tblExpensesManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.tblExpensesManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblExpensesManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblExpensesManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesManager.BuildCollection">
 <summary>
 Returns a collection of tblExpenses classes based
 </summary>
 <returns>tblExpensesCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesManager.GettblExpensesByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesManager.GettblExpensesByexpdesc">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpensesManager.GettblExpensesByLikeexpdesc">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblExpenseTransData">
 <summary>
 Used to Add/Edit/Delete/Select data from the tblExpenseTrans table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransData.#ctor">
 <summary>
 Constructor for the tblExpenseTransData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransData.#ctor(DoorsPOS.BusinessLayer.tblExpenseTrans)">
 <summary>
 Constructor for the tblExpenseTransData class
 </summary>
 <param name="entity">An instance of a tblExpenseTrans</param>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.tblExpenseTrans)">
 <summary>
 Constructor for the tblExpenseTransData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a tblExpenseTrans</param>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.tblExpenseTrans,DoorsPOS.BusinessLayer.tblExpenseTransValidator)">
 <summary>
 Constructor for the tblExpenseTransData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a tblExpenseTrans</param>
 <param name="validator">An instance of a tblExpenseTransValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.tblExpenseTransData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpenseTransData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpenseTransData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpenseTransData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpenseTransData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblExpenseTransData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpenseTransData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpenseTransData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpenseTransData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpenseTransData.WhereFilters.expremarks">
 <summary>
 'expremarks' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpenseTransData.WhereFilters.Likeexpremarks">
 <summary>
 'Likeexpremarks' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpenseTransData.WhereFilters.expenseid">
 <summary>
 'expenseid' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblExpenseTransData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpenseTransData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpenseTransData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpenseTransData.OrderByFilters.expremarks">
 <summary>
 'expremarks' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblExpenseTransData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpenseTransData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpenseTransData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblExpenseTransData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpenseTransData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpenseTransData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblExpenseTransData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpenseTransData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpenseTransData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpenseTransData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblExpenseTransData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpenseTransData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblExpenseTransData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblExpenseTransData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblExpenseTransData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblExpenseTransData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblExpenseTransData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblExpenseTransData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblExpenseTransData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblExpenseTransData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblExpenseTransData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>tblExpenseTrans</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="exptransid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="exptransid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="exptransid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblExpenseTransManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the tblExpenseTrans table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransManager.#ctor">
 <summary>
 Constructor for the tblExpenseTransManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the tblExpenseTransManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.tblExpenseTransManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblExpenseTransManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblExpenseTransManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransManager.BuildCollection">
 <summary>
 Returns a collection of tblExpenseTrans classes based
 </summary>
 <returns>tblExpenseTransCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransManager.GettblExpenseTransByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransManager.GettblExpenseTransByexpremarks">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransManager.GettblExpenseTransByLikeexpremarks">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblExpenseTransManager.GettblExpenseTransByexpenseid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblreadingData">
 <summary>
 Used to Add/Edit/Delete/Select data from the tblreading table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingData.#ctor">
 <summary>
 Constructor for the tblreadingData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingData.#ctor(DoorsPOS.BusinessLayer.tblreading)">
 <summary>
 Constructor for the tblreadingData class
 </summary>
 <param name="entity">An instance of a tblreading</param>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.tblreading)">
 <summary>
 Constructor for the tblreadingData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a tblreading</param>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.tblreading,DoorsPOS.BusinessLayer.tblreadingValidator)">
 <summary>
 Constructor for the tblreadingData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a tblreading</param>
 <param name="validator">An instance of a tblreadingValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.tblreadingData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblreadingData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblreadingData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblreadingData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblreadingData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblreadingData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblreadingData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblreadingData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblreadingData.WhereFilters.cashier">
 <summary>
 'cashier' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblreadingData.WhereFilters.CashierStatus">
 <summary>
 'CashierStatus' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblreadingData.WhereFilters.cashierupstd">
 <summary>
 'cashierupstd' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblreadingData.WhereFilters.Likecashier">
 <summary>
 'Likecashier' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblreadingData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblreadingData.WhereFilters.status">
 <summary>
 'status' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblreadingData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblreadingData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblreadingData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblreadingData.OrderByFilters.cashier">
 <summary>
 'cashier' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblreadingData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblreadingData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblreadingData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblreadingData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblreadingData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblreadingData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblreadingData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblreadingData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblreadingData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblreadingData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblreadingData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblreadingData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblreadingData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblreadingData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblreadingData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblreadingData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblreadingData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblreadingData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblreadingData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblreadingData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblreadingData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>tblreading</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="cashreadid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="cashreadid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="cashreadid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblreadingManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the tblreading table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingManager.#ctor">
 <summary>
 Constructor for the tblreadingManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the tblreadingManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.tblreadingManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblreadingManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblreadingManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingManager.BuildCollection">
 <summary>
 Returns a collection of tblreading classes based
 </summary>
 <returns>tblreadingCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingManager.GettblreadingsBycashier">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingManager.GettblreadingsByCashierStatus">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingManager.GettblreadingsBycashierupstd">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingManager.GettblreadingsByLikecashier">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingManager.GettblreadingsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblreadingManager.GettblreadingsBystatus">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblsData">
 <summary>
 Used to Add/Edit/Delete/Select data from the tbls table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblsData.#ctor">
 <summary>
 Constructor for the tblsData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblsData.#ctor(DoorsPOS.BusinessLayer.tbls)">
 <summary>
 Constructor for the tblsData class
 </summary>
 <param name="entity">An instance of a tbls</param>
</member>
<member name="M:DoorsPOS.DataLayer.tblsData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.tbls)">
 <summary>
 Constructor for the tblsData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a tbls</param>
</member>
<member name="M:DoorsPOS.DataLayer.tblsData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.tbls,DoorsPOS.BusinessLayer.tblsValidator)">
 <summary>
 Constructor for the tblsData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a tbls</param>
 <param name="validator">An instance of a tblsValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.tblsData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblsData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblsData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblsData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblsData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblsData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblsData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblsData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblsData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblsData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblsData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblsData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblsData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblsData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblsData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblsData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblsData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblsData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblsData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblsData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblsData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblsData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblsData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblsData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.tblsData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblsData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblsData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblsData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblsData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblsData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblsData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblsData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblsData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblsData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblsData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblsData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblsData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblsData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>tbls</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblsData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblsData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblsData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblsData.DeleteByPK(System.String,System.String)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="tid">The value of the primary key of the row to delete</param>
 <param name="tdesc">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblsData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblsData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblsData.LoadByPK(System.String,System.String)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="tid">The value of the primary key of the row to load</param>
 <param name="tdesc">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblsData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblsData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblsData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblsData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblsData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.tblsManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the tbls table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblsManager.#ctor">
 <summary>
 Constructor for the tblsManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblsManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the tblsManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.tblsManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblsManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.tblsManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.tblsManager.BuildCollection">
 <summary>
 Returns a collection of tbls classes based
 </summary>
 <returns>tblsCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.tblsManager.GettblsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.transfer_detData">
 <summary>
 Used to Add/Edit/Delete/Select data from the transfer_det table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detData.#ctor">
 <summary>
 Constructor for the transfer_detData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detData.#ctor(DoorsPOS.BusinessLayer.transfer_det)">
 <summary>
 Constructor for the transfer_detData class
 </summary>
 <param name="entity">An instance of a transfer_det</param>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.transfer_det)">
 <summary>
 Constructor for the transfer_detData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a transfer_det</param>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.transfer_det,DoorsPOS.BusinessLayer.transfer_detValidator)">
 <summary>
 Constructor for the transfer_detData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a transfer_det</param>
 <param name="validator">An instance of a transfer_detValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.transfer_detData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_detData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_detData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_detData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_detData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.transfer_detData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_detData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_detData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_detData.WhereFilters.LikesInsert_id">
 <summary>
 'LikesInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_detData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_detData.WhereFilters.sInsert_id">
 <summary>
 'sInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_detData.WhereFilters.stckid">
 <summary>
 'stckid' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_detData.WhereFilters.tid">
 <summary>
 'tid' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.transfer_detData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_detData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_detData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_detData.OrderByFilters.sInsert_id">
 <summary>
 'sInsert_id' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.transfer_detData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_detData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_detData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.transfer_detData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_detData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_detData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.transfer_detData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_detData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_detData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_detData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.transfer_detData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_detData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_detData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.transfer_detData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.transfer_detData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.transfer_detData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.transfer_detData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.transfer_detData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.transfer_detData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.transfer_detData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.transfer_detData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>transfer_det</returns>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="tdetid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="tdetid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="tdetid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.transfer_detManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the transfer_det table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detManager.#ctor">
 <summary>
 Constructor for the transfer_detManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the transfer_detManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.transfer_detManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.transfer_detManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.transfer_detManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detManager.BuildCollection">
 <summary>
 Returns a collection of transfer_det classes based
 </summary>
 <returns>transfer_detCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detManager.Gettransfer_detsByLikesInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detManager.Gettransfer_detsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detManager.Gettransfer_detsBysInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detManager.Gettransfer_detsBystckid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_detManager.Gettransfer_detsBytid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.transfer_hdrData">
 <summary>
 Used to Add/Edit/Delete/Select data from the transfer_hdr table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrData.#ctor">
 <summary>
 Constructor for the transfer_hdrData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrData.#ctor(DoorsPOS.BusinessLayer.transfer_hdr)">
 <summary>
 Constructor for the transfer_hdrData class
 </summary>
 <param name="entity">An instance of a transfer_hdr</param>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.transfer_hdr)">
 <summary>
 Constructor for the transfer_hdrData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a transfer_hdr</param>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.transfer_hdr,DoorsPOS.BusinessLayer.transfer_hdrValidator)">
 <summary>
 Constructor for the transfer_hdrData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a transfer_hdr</param>
 <param name="validator">An instance of a transfer_hdrValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.transfer_hdrData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_hdrData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_hdrData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_hdrData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_hdrData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.transfer_hdrData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_hdrData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_hdrData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_hdrData.WhereFilters.LikesInsert_id">
 <summary>
 'LikesInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_hdrData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_hdrData.WhereFilters.sInsert_id">
 <summary>
 'sInsert_id' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.transfer_hdrData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_hdrData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_hdrData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_hdrData.OrderByFilters.sInsert_id">
 <summary>
 'sInsert_id' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.transfer_hdrData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_hdrData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_hdrData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.transfer_hdrData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_hdrData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_hdrData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.transfer_hdrData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_hdrData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_hdrData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_hdrData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.transfer_hdrData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_hdrData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.transfer_hdrData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.transfer_hdrData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.transfer_hdrData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.transfer_hdrData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.transfer_hdrData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.transfer_hdrData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.transfer_hdrData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.transfer_hdrData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.transfer_hdrData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>transfer_hdr</returns>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="tid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="tid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="tid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.transfer_hdrManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the transfer_hdr table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrManager.#ctor">
 <summary>
 Constructor for the transfer_hdrManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the transfer_hdrManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.transfer_hdrManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.transfer_hdrManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.transfer_hdrManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrManager.BuildCollection">
 <summary>
 Returns a collection of transfer_hdr classes based
 </summary>
 <returns>transfer_hdrCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrManager.Gettransfer_hdrsByLikesInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrManager.Gettransfer_hdrsByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.transfer_hdrManager.Gettransfer_hdrsBysInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.usp_pos_dettmpInsertData">
 <summary>
 This class calls the stored procedure usp_pos_dettmpInsertData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the usp_pos_dettmpInsert class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.ParameterNames.postmphdrid">
 <summary>
 Returns '@postmp_hdrid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.ParameterNames.stckid">
 <summary>
 Returns '@stckid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.ParameterNames.barcode">
 <summary>
 Returns '@barcode'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.ParameterNames.itemdesc">
 <summary>
 Returns '@item_desc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.ParameterNames.cost">
 <summary>
 Returns '@cost'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.ParameterNames.price">
 <summary>
 Returns '@price'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.ParameterNames.pck">
 <summary>
 Returns '@pck'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.ParameterNames.quantity">
 <summary>
 Returns '@quantity'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.ParameterNames.detamnt">
 <summary>
 Returns '@det_amnt'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.ParameterNames.detdisc">
 <summary>
 Returns '@det_disc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.ParameterNames.psted">
 <summary>
 Returns '@psted'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.ParameterNames.detcost">
 <summary>
 Returns '@det_cost'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.ParameterNames.pckqty">
 <summary>
 Returns '@pck_qty'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.ParameterNames.ws">
 <summary>
 Returns '@ws'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.ParameterNames.qty">
 <summary>
 Returns '@qty'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.ParameterNames.sInsertid">
 <summary>
 Returns '@sInsert_id'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.ParameterNames.dtInsertdt">
 <summary>
 Returns '@dtInsert_dt'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.ParameterNames.sLastUpdateid">
 <summary>
 Returns '@sLastUpdate_id'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.ParameterNames.dtLastUpdatedt">
 <summary>
 Returns '@dtLastUpdate_dt'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.ParameterNames.iConcurrencyid">
 <summary>
 Returns '@iConcurrency_id'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_dettmpInsertData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.usp_pos_dettmpInsertManager">
 <summary>
 This class is used to call the stored procedure usp_pos_dettmpInsert
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_dettmpInsertManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_dettmpInsertManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.usp_pos_dettmpInsertManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertData">
 <summary>
 This class calls the stored procedure usp_pos_hdrtmpInsertData
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertData.InitParameters">
 <summary>
 Creates all the parameters for the stored procedure.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertData.EntityDataToParameterCollection">
 <summary>
 Moves the data from the Entity class into the Parameters collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertData.OutputParametersToEntityData">
 <summary>
 Moves the output parameters from the Parameters collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertData.SetDirtyFlag(System.Boolean)">
 <summary> 
 This is called with a 'false' value after each successful Insert/Update method call. 
 </summary> 
 <param name="isDirty">Called with 'false' by default</param> 
</member>
<member name="T:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertData.ParameterNames">
 <summary>
 Contains static string properties that represent the name of each property in the usp_pos_hdrtmpInsert class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertData.ParameterNames.posdate">
 <summary>
 Returns '@pos_date'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertData.ParameterNames.custid">
 <summary>
 Returns '@custid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertData.ParameterNames.disc">
 <summary>
 Returns '@disc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertData.ParameterNames.discamnt">
 <summary>
 Returns '@disc_amnt'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertData.ParameterNames.tendered">
 <summary>
 Returns '@tendered'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertData.ParameterNames.Cheyns">
 <summary>
 Returns '@Cheyns'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertData.ParameterNames.sInsertid">
 <summary>
 Returns '@sInsert_id'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertData.ParameterNames.mowd">
 <summary>
 Returns '@mowd'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertData.ParameterNames.status">
 <summary>
 Returns '@status'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertData.ParameterNames.totsales">
 <summary>
 Returns '@totsales'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertData.ParameterNames.tid">
 <summary>
 Returns '@tid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertData.ParameterNames.wtid">
 <summary>
 Returns '@wtid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertData.ParameterNames.RefNo">
 <summary>
 Returns '@RefNo'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertData.ParameterNames.RETURNVALUE">
 <summary>
 Returns '@RETURN_VALUE'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertManager">
 <summary>
 This class is used to call the stored procedure usp_pos_hdrtmpInsert
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertManager.Entity">
 <summary>
 Get/Set the entity class. This is the class that contains one property for each parameter in the stored procedure.
 Setting this property will also set the Entity class into the DataObject classes too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.usp_pos_hdrtmpInsertManager.Init">
 <summary>
 Initialize this class to a valid start state
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwBarcodeData">
 <summary>
 This class calls the view vwBarcode
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwBarcodeData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwBarcodeData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwBarcodeData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwBarcodeData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwBarcodeData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwBarcodeData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwBarcodeData.WhereFilters.item_desc">
 <summary>
 'item_desc' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwBarcodeData.WhereFilters.Likeitem_desc">
 <summary>
 'Likeitem_desc' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwBarcodeData.WhereFilters.barcode">
 <summary>
 'barcode' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwBarcodeData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwBarcodeData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwBarcodeData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwBarcodeData.OrderByFilters.item_desc">
 <summary>
 'item_desc' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwBarcodeData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwBarcodeData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the view.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the view in it.</param>
 <returns>vwBarcode</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwBarcodeData.ColumnNames">
 <summary>
 Contains static string properties that represent the name of each property in the Product class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeData.ColumnNames.stckid">
 <summary>
 Returns 'stckid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeData.ColumnNames.itemdesc">
 <summary>
 Returns 'item_desc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeData.ColumnNames.available">
 <summary>
 Returns 'available'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeData.ColumnNames.retail">
 <summary>
 Returns 'retail'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeData.ColumnNames.retail2">
 <summary>
 Returns 'retail2'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeData.ColumnNames.sInsertid">
 <summary>
 Returns 'sInsert_id'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeData.ColumnNames.packaging">
 <summary>
 Returns 'packaging'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeData.ColumnNames.barcode">
 <summary>
 Returns 'barcode'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwBarcodeManager">
 <summary>
 This class is used to call the view vwBarcode
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the DataObject class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeManager.DataObject">
 <summary>
 Get/Set the data class that contains the logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeManager.BuildCollection">
 <summary>
 Returns a collection of vwBarcode classes based
 </summary>
 <returns>vwBarcodeCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeManager.GetvwBarcodesByitem_desc">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeManager.GetvwBarcodesByLikeitem_desc">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeManager.GetvwBarcodesBybarcode">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeManager.CloneEntity">
 <summary>
 Clones the current vwBarcode
 </summary>
 <returns>A cloned vwBarcode object</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeManager.CloneEntity(DoorsPOS.BusinessLayer.vwBarcode)">
 <summary>
 Clones the passed in vwBarcode
 </summary>
 <returns>A cloned vwBarcode object</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwBarcodeMoreData">
 <summary>
 This class calls the view vwBarcodeMore
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwBarcodeMoreData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwBarcodeMoreData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwBarcodeMoreData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwBarcodeMoreData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwBarcodeMoreData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwBarcodeMoreData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwBarcodeMoreData.WhereFilters.barcode">
 <summary>
 'barcode' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwBarcodeMoreData.WhereFilters.item_desc">
 <summary>
 'item_desc' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwBarcodeMoreData.WhereFilters.Likeitem_desc">
 <summary>
 'Likeitem_desc' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwBarcodeMoreData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwBarcodeMoreData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwBarcodeMoreData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwBarcodeMoreData.OrderByFilters.item_desc">
 <summary>
 'item_desc' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwBarcodeMoreData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwBarcodeMoreData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeMoreData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeMoreData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeMoreData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeMoreData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeMoreData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeMoreData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeMoreData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the view.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeMoreData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeMoreData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeMoreData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the view in it.</param>
 <returns>vwBarcodeMore</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeMoreData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeMoreData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeMoreData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeMoreData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeMoreData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwBarcodeMoreData.ColumnNames">
 <summary>
 Contains static string properties that represent the name of each property in the Product class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeMoreData.ColumnNames.stckid">
 <summary>
 Returns 'stckid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeMoreData.ColumnNames.itemdesc">
 <summary>
 Returns 'item_desc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeMoreData.ColumnNames.available">
 <summary>
 Returns 'available'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeMoreData.ColumnNames.retail">
 <summary>
 Returns 'retail'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeMoreData.ColumnNames.retail2">
 <summary>
 Returns 'retail2'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeMoreData.ColumnNames.sInsertid">
 <summary>
 Returns 'sInsert_id'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeMoreData.ColumnNames.packaging">
 <summary>
 Returns 'packaging'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeMoreData.ColumnNames.barcode">
 <summary>
 Returns 'barcode'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwBarcodeMoreManager">
 <summary>
 This class is used to call the view vwBarcodeMore
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeMoreManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the DataObject class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwBarcodeMoreManager.DataObject">
 <summary>
 Get/Set the data class that contains the logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeMoreManager.BuildCollection">
 <summary>
 Returns a collection of vwBarcodeMore classes based
 </summary>
 <returns>vwBarcodeMoreCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeMoreManager.GetvwBarcodeMoresBybarcode">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeMoreManager.GetvwBarcodeMoresByitem_desc">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeMoreManager.GetvwBarcodeMoresByLikeitem_desc">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeMoreManager.CloneEntity">
 <summary>
 Clones the current vwBarcodeMore
 </summary>
 <returns>A cloned vwBarcodeMore object</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwBarcodeMoreManager.CloneEntity(DoorsPOS.BusinessLayer.vwBarcodeMore)">
 <summary>
 Clones the passed in vwBarcodeMore
 </summary>
 <returns>A cloned vwBarcodeMore object</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwDlvryData">
 <summary>
 This class calls the view vwDlvry
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwDlvryData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwDlvryData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwDlvryData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwDlvryData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwDlvryData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwDlvryData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwDlvryData.WhereFilters.drinv">
 <summary>
 'drinv' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwDlvryData.WhereFilters.Likedrinv">
 <summary>
 'Likedrinv' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwDlvryData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwDlvryData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwDlvryData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwDlvryData.OrderByFilters.drinv">
 <summary>
 'drinv' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwDlvryData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwDlvryData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvryData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvryData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvryData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvryData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvryData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvryData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvryData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the view.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvryData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvryData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvryData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the view in it.</param>
 <returns>vwDlvry</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvryData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvryData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvryData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvryData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvryData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwDlvryData.ColumnNames">
 <summary>
 Contains static string properties that represent the name of each property in the Product class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvryData.ColumnNames.drinv">
 <summary>
 Returns 'drinv'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvryData.ColumnNames.drdate">
 <summary>
 Returns 'drdate'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvryData.ColumnNames.supcode">
 <summary>
 Returns 'supcode'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvryData.ColumnNames.supplier">
 <summary>
 Returns 'supplier'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvryData.ColumnNames.paid">
 <summary>
 Returns 'paid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvryData.ColumnNames.drbal">
 <summary>
 Returns 'drbal'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvryData.ColumnNames.sInsertid">
 <summary>
 Returns 'sInsert_id'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvryData.ColumnNames.drid">
 <summary>
 Returns 'drid'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwDlvryManager">
 <summary>
 This class is used to call the view vwDlvry
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvryManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the DataObject class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvryManager.DataObject">
 <summary>
 Get/Set the data class that contains the logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvryManager.BuildCollection">
 <summary>
 Returns a collection of vwDlvry classes based
 </summary>
 <returns>vwDlvryCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvryManager.GetvwDlvrysBydrinv">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvryManager.GetvwDlvrysByLikedrinv">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvryManager.CloneEntity">
 <summary>
 Clones the current vwDlvry
 </summary>
 <returns>A cloned vwDlvry object</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvryManager.CloneEntity(DoorsPOS.BusinessLayer.vwDlvry)">
 <summary>
 Clones the passed in vwDlvry
 </summary>
 <returns>A cloned vwDlvry object</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwDlvrySuspendedData">
 <summary>
 This class calls the view vwDlvrySuspended
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwDlvrySuspendedData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwDlvrySuspendedData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwDlvrySuspendedData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwDlvrySuspendedData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwDlvrySuspendedData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwDlvrySuspendedData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwDlvrySuspendedData.WhereFilters.DrKey">
 <summary>
 'DrKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwDlvrySuspendedData.WhereFilters.Likesupplier">
 <summary>
 'Likesupplier' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwDlvrySuspendedData.WhereFilters.supplier">
 <summary>
 'supplier' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwDlvrySuspendedData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwDlvrySuspendedData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwDlvrySuspendedData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwDlvrySuspendedData.OrderByFilters.supplier">
 <summary>
 'supplier' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwDlvrySuspendedData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwDlvrySuspendedData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvrySuspendedData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvrySuspendedData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvrySuspendedData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvrySuspendedData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvrySuspendedData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvrySuspendedData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvrySuspendedData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the view.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvrySuspendedData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvrySuspendedData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvrySuspendedData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the view in it.</param>
 <returns>vwDlvrySuspended</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvrySuspendedData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvrySuspendedData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvrySuspendedData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvrySuspendedData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvrySuspendedData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwDlvrySuspendedData.ColumnNames">
 <summary>
 Contains static string properties that represent the name of each property in the Product class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvrySuspendedData.ColumnNames.dridtmp">
 <summary>
 Returns 'dridtmp'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvrySuspendedData.ColumnNames.drinv">
 <summary>
 Returns 'drinv'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvrySuspendedData.ColumnNames.drdate">
 <summary>
 Returns 'drdate'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvrySuspendedData.ColumnNames.supcode">
 <summary>
 Returns 'supcode'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvrySuspendedData.ColumnNames.supplier">
 <summary>
 Returns 'supplier'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvrySuspendedData.ColumnNames.drdue">
 <summary>
 Returns 'drdue'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvrySuspendedData.ColumnNames.terms">
 <summary>
 Returns 'terms'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvrySuspendedData.ColumnNames.stckid">
 <summary>
 Returns 'stckid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvrySuspendedData.ColumnNames.itemdesc">
 <summary>
 Returns 'item_desc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvrySuspendedData.ColumnNames.cost">
 <summary>
 Returns 'cost'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvrySuspendedData.ColumnNames.qty">
 <summary>
 Returns 'qty'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvrySuspendedData.ColumnNames.freee">
 <summary>
 Returns 'freee'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvrySuspendedData.ColumnNames.drdetamnt">
 <summary>
 Returns 'drdetamnt'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwDlvrySuspendedManager">
 <summary>
 This class is used to call the view vwDlvrySuspended
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvrySuspendedManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the DataObject class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwDlvrySuspendedManager.DataObject">
 <summary>
 Get/Set the data class that contains the logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvrySuspendedManager.BuildCollection">
 <summary>
 Returns a collection of vwDlvrySuspended classes based
 </summary>
 <returns>vwDlvrySuspendedCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvrySuspendedManager.GetvwDlvrySuspendedsByDrKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvrySuspendedManager.GetvwDlvrySuspendedsByLikesupplier">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvrySuspendedManager.GetvwDlvrySuspendedsBysupplier">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvrySuspendedManager.CloneEntity">
 <summary>
 Clones the current vwDlvrySuspended
 </summary>
 <returns>A cloned vwDlvrySuspended object</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwDlvrySuspendedManager.CloneEntity(DoorsPOS.BusinessLayer.vwDlvrySuspended)">
 <summary>
 Clones the passed in vwDlvrySuspended
 </summary>
 <returns>A cloned vwDlvrySuspended object</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwHiStocksData">
 <summary>
 This class calls the view vwHiStocks
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwHiStocksData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwHiStocksData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwHiStocksData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwHiStocksData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwHiStocksData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwHiStocksData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwHiStocksData.WhereFilters.item_desc">
 <summary>
 'item_desc' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwHiStocksData.WhereFilters.Likeitem_desc">
 <summary>
 'Likeitem_desc' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwHiStocksData.WhereFilters.HiStock">
 <summary>
 'HiStock' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwHiStocksData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwHiStocksData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwHiStocksData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwHiStocksData.OrderByFilters.item_desc">
 <summary>
 'item_desc' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwHiStocksData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwHiStocksData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwHiStocksData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwHiStocksData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwHiStocksData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwHiStocksData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwHiStocksData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwHiStocksData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwHiStocksData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the view.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwHiStocksData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwHiStocksData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwHiStocksData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the view in it.</param>
 <returns>vwHiStocks</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwHiStocksData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwHiStocksData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwHiStocksData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwHiStocksData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwHiStocksData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwHiStocksData.ColumnNames">
 <summary>
 Contains static string properties that represent the name of each property in the Product class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwHiStocksData.ColumnNames.stckid">
 <summary>
 Returns 'stckid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwHiStocksData.ColumnNames.itemdesc">
 <summary>
 Returns 'item_desc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwHiStocksData.ColumnNames.available">
 <summary>
 Returns 'available'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwHiStocksData.ColumnNames.maximum">
 <summary>
 Returns 'maximum'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwHiStocksManager">
 <summary>
 This class is used to call the view vwHiStocks
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwHiStocksManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the DataObject class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwHiStocksManager.DataObject">
 <summary>
 Get/Set the data class that contains the logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwHiStocksManager.BuildCollection">
 <summary>
 Returns a collection of vwHiStocks classes based
 </summary>
 <returns>vwHiStocksCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwHiStocksManager.GetvwHiStocksByitem_desc">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwHiStocksManager.GetvwHiStocksByLikeitem_desc">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwHiStocksManager.GetvwHiStocksByHiStock">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwHiStocksManager.CloneEntity">
 <summary>
 Clones the current vwHiStocks
 </summary>
 <returns>A cloned vwHiStocks object</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwHiStocksManager.CloneEntity(DoorsPOS.BusinessLayer.vwHiStocks)">
 <summary>
 Clones the passed in vwHiStocks
 </summary>
 <returns>A cloned vwHiStocks object</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwInvPaymentsData">
 <summary>
 This class calls the view vwInvPayments
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwInvPaymentsData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwInvPaymentsData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwInvPaymentsData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwInvPaymentsData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwInvPaymentsData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwInvPaymentsData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwInvPaymentsData.WhereFilters.supplier">
 <summary>
 'supplier' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwInvPaymentsData.WhereFilters.Likesupplier">
 <summary>
 'Likesupplier' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwInvPaymentsData.WhereFilters.betweenpaydate">
 <summary>
 'betweenpaydate' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwInvPaymentsData.WhereFilters.chq">
 <summary>
 'chq' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwInvPaymentsData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwInvPaymentsData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwInvPaymentsData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwInvPaymentsData.OrderByFilters.supplier">
 <summary>
 'supplier' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwInvPaymentsData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwInvPaymentsData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwInvPaymentsData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwInvPaymentsData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwInvPaymentsData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwInvPaymentsData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwInvPaymentsData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwInvPaymentsData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwInvPaymentsData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the view.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwInvPaymentsData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwInvPaymentsData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwInvPaymentsData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the view in it.</param>
 <returns>vwInvPayments</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwInvPaymentsData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwInvPaymentsData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwInvPaymentsData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwInvPaymentsData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwInvPaymentsData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwInvPaymentsData.ColumnNames">
 <summary>
 Contains static string properties that represent the name of each property in the Product class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwInvPaymentsData.ColumnNames.payid">
 <summary>
 Returns 'payid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwInvPaymentsData.ColumnNames.paydate">
 <summary>
 Returns 'paydate'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwInvPaymentsData.ColumnNames.supcode">
 <summary>
 Returns 'supcode'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwInvPaymentsData.ColumnNames.amntpaid">
 <summary>
 Returns 'amntpaid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwInvPaymentsData.ColumnNames.supplier">
 <summary>
 Returns 'supplier'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwInvPaymentsData.ColumnNames.chqno">
 <summary>
 Returns 'chqno'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwInvPaymentsData.ColumnNames.bank">
 <summary>
 Returns 'bank'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwInvPaymentsData.ColumnNames.drinv">
 <summary>
 Returns 'drinv'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwInvPaymentsData.ColumnNames.amnt">
 <summary>
 Returns 'amnt'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwInvPaymentsManager">
 <summary>
 This class is used to call the view vwInvPayments
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwInvPaymentsManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the DataObject class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwInvPaymentsManager.DataObject">
 <summary>
 Get/Set the data class that contains the logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwInvPaymentsManager.BuildCollection">
 <summary>
 Returns a collection of vwInvPayments classes based
 </summary>
 <returns>vwInvPaymentsCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwInvPaymentsManager.GetvwInvPaymentsBysupplier">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwInvPaymentsManager.GetvwInvPaymentsByLikesupplier">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwInvPaymentsManager.GetvwInvPaymentsBybetweenpaydate">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwInvPaymentsManager.GetvwInvPaymentsBychq">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwInvPaymentsManager.CloneEntity">
 <summary>
 Clones the current vwInvPayments
 </summary>
 <returns>A cloned vwInvPayments object</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwInvPaymentsManager.CloneEntity(DoorsPOS.BusinessLayer.vwInvPayments)">
 <summary>
 Clones the passed in vwInvPayments
 </summary>
 <returns>A cloned vwInvPayments object</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwLowStocksData">
 <summary>
 This class calls the view vwLowStocks
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwLowStocksData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwLowStocksData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwLowStocksData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwLowStocksData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwLowStocksData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwLowStocksData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwLowStocksData.WhereFilters.item_desc">
 <summary>
 'item_desc' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwLowStocksData.WhereFilters.Likeitem_desc">
 <summary>
 'Likeitem_desc' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwLowStocksData.WhereFilters.LoStock">
 <summary>
 'LoStock' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwLowStocksData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwLowStocksData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwLowStocksData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwLowStocksData.OrderByFilters.item_desc">
 <summary>
 'item_desc' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwLowStocksData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwLowStocksData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwLowStocksData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwLowStocksData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwLowStocksData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwLowStocksData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwLowStocksData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwLowStocksData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwLowStocksData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the view.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwLowStocksData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwLowStocksData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwLowStocksData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the view in it.</param>
 <returns>vwLowStocks</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwLowStocksData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwLowStocksData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwLowStocksData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwLowStocksData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwLowStocksData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwLowStocksData.ColumnNames">
 <summary>
 Contains static string properties that represent the name of each property in the Product class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwLowStocksData.ColumnNames.stckid">
 <summary>
 Returns 'stckid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwLowStocksData.ColumnNames.itemdesc">
 <summary>
 Returns 'item_desc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwLowStocksData.ColumnNames.available">
 <summary>
 Returns 'available'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwLowStocksData.ColumnNames.minimum">
 <summary>
 Returns 'minimum'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwLowStocksManager">
 <summary>
 This class is used to call the view vwLowStocks
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwLowStocksManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the DataObject class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwLowStocksManager.DataObject">
 <summary>
 Get/Set the data class that contains the logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwLowStocksManager.BuildCollection">
 <summary>
 Returns a collection of vwLowStocks classes based
 </summary>
 <returns>vwLowStocksCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwLowStocksManager.GetvwLowStocksByitem_desc">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwLowStocksManager.GetvwLowStocksByLikeitem_desc">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwLowStocksManager.GetvwLowStocksByLoStock">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwLowStocksManager.CloneEntity">
 <summary>
 Clones the current vwLowStocks
 </summary>
 <returns>A cloned vwLowStocks object</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwLowStocksManager.CloneEntity(DoorsPOS.BusinessLayer.vwLowStocks)">
 <summary>
 Clones the passed in vwLowStocks
 </summary>
 <returns>A cloned vwLowStocks object</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwMaxSaleNumData">
 <summary>
 This class calls the view vwMaxSaleNum
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwMaxSaleNumData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwMaxSaleNumData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwMaxSaleNumData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwMaxSaleNumData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwMaxSaleNumData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwMaxSaleNumData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwMaxSaleNumData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwMaxSaleNumData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwMaxSaleNumData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwMaxSaleNumData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwMaxSaleNumData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwMaxSaleNumData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwMaxSaleNumData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwMaxSaleNumData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwMaxSaleNumData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwMaxSaleNumData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwMaxSaleNumData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwMaxSaleNumData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the view.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwMaxSaleNumData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwMaxSaleNumData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwMaxSaleNumData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the view in it.</param>
 <returns>vwMaxSaleNum</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwMaxSaleNumData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwMaxSaleNumData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwMaxSaleNumData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwMaxSaleNumData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwMaxSaleNumData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwMaxSaleNumData.ColumnNames">
 <summary>
 Contains static string properties that represent the name of each property in the Product class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwMaxSaleNumData.ColumnNames.MaxSaleNum">
 <summary>
 Returns 'MaxSaleNum'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwMaxSaleNumManager">
 <summary>
 This class is used to call the view vwMaxSaleNum
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwMaxSaleNumManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the DataObject class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwMaxSaleNumManager.DataObject">
 <summary>
 Get/Set the data class that contains the logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwMaxSaleNumManager.BuildCollection">
 <summary>
 Returns a collection of vwMaxSaleNum classes based
 </summary>
 <returns>vwMaxSaleNumCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwMaxSaleNumManager.CloneEntity">
 <summary>
 Clones the current vwMaxSaleNum
 </summary>
 <returns>A cloned vwMaxSaleNum object</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwMaxSaleNumManager.CloneEntity(DoorsPOS.BusinessLayer.vwMaxSaleNum)">
 <summary>
 Clones the passed in vwMaxSaleNum
 </summary>
 <returns>A cloned vwMaxSaleNum object</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwPoSavedData">
 <summary>
 This class calls the view vwPoSaved
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwPoSavedData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPoSavedData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPoSavedData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwPoSavedData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPoSavedData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPoSavedData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPoSavedData.WhereFilters.sInsert_id">
 <summary>
 'sInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPoSavedData.WhereFilters.LikesInsert_id">
 <summary>
 'LikesInsert_id' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwPoSavedData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPoSavedData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPoSavedData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPoSavedData.OrderByFilters.sInsert_id">
 <summary>
 'sInsert_id' OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPoSavedData.OrderByFilters.podates">
 <summary>
 'podates' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwPoSavedData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPoSavedData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPoSavedData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPoSavedData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPoSavedData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPoSavedData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPoSavedData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPoSavedData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPoSavedData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the view.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPoSavedData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPoSavedData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPoSavedData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the view in it.</param>
 <returns>vwPoSaved</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwPoSavedData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwPoSavedData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwPoSavedData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwPoSavedData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPoSavedData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwPoSavedData.ColumnNames">
 <summary>
 Contains static string properties that represent the name of each property in the Product class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPoSavedData.ColumnNames.poidtmp">
 <summary>
 Returns 'poidtmp'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPoSavedData.ColumnNames.podate">
 <summary>
 Returns 'podate'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPoSavedData.ColumnNames.supcode">
 <summary>
 Returns 'supcode'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPoSavedData.ColumnNames.sInsertid">
 <summary>
 Returns 'sInsert_id'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPoSavedData.ColumnNames.dlivered">
 <summary>
 Returns 'dlivered'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPoSavedData.ColumnNames.supplier">
 <summary>
 Returns 'supplier'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwPoSavedManager">
 <summary>
 This class is used to call the view vwPoSaved
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPoSavedManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the DataObject class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPoSavedManager.DataObject">
 <summary>
 Get/Set the data class that contains the logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPoSavedManager.BuildCollection">
 <summary>
 Returns a collection of vwPoSaved classes based
 </summary>
 <returns>vwPoSavedCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwPoSavedManager.GetvwPoSavedsBysInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPoSavedManager.GetvwPoSavedsByLikesInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPoSavedManager.CloneEntity">
 <summary>
 Clones the current vwPoSaved
 </summary>
 <returns>A cloned vwPoSaved object</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwPoSavedManager.CloneEntity(DoorsPOS.BusinessLayer.vwPoSaved)">
 <summary>
 Clones the passed in vwPoSaved
 </summary>
 <returns>A cloned vwPoSaved object</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwPosData">
 <summary>
 This class calls the view vwPos
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwPosData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPosData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPosData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwPosData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPosData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPosData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPosData.WhereFilters.barcode">
 <summary>
 'barcode' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPosData.WhereFilters.Likebarcode">
 <summary>
 'Likebarcode' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwPosData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPosData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPosData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPosData.OrderByFilters.barcode">
 <summary>
 'barcode' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwPosData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPosData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPosData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPosData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the view.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPosData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPosData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPosData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the view in it.</param>
 <returns>vwPos</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwPosData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwPosData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwPosData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwPosData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPosData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwPosData.ColumnNames">
 <summary>
 Contains static string properties that represent the name of each property in the Product class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.barcode">
 <summary>
 Returns 'barcode'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.Items">
 <summary>
 Returns 'Items'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.stckid">
 <summary>
 Returns 'stckid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.cost">
 <summary>
 Returns 'cost'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.qty">
 <summary>
 Returns 'qty'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.price">
 <summary>
 Returns 'price'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.detamnt">
 <summary>
 Returns 'det_amnt'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.tdesc">
 <summary>
 Returns 'tdesc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.waiter">
 <summary>
 Returns 'waiter'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.postmphdrid">
 <summary>
 Returns 'postmp_hdrid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.posdate">
 <summary>
 Returns 'pos_date'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.custid">
 <summary>
 Returns 'custid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.posamnt">
 <summary>
 Returns 'pos_amnt'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.tendered">
 <summary>
 Returns 'tendered'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.Cheyns">
 <summary>
 Returns 'Cheyns'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.Sc">
 <summary>
 Returns 'Sc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.totsales">
 <summary>
 Returns 'totsales'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.lessvat">
 <summary>
 Returns 'less_vat'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.nov">
 <summary>
 Returns 'nov'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.lesssc">
 <summary>
 Returns 'less_sc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.vatable">
 <summary>
 Returns 'vatable'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.exempt">
 <summary>
 Returns 'exempt'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.vatamnt">
 <summary>
 Returns 'vatamnt'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.Expr2">
 <summary>
 Returns 'Expr2'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosData.ColumnNames.wtid">
 <summary>
 Returns 'wtid'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwPosManager">
 <summary>
 This class is used to call the view vwPos
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the DataObject class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPosManager.DataObject">
 <summary>
 Get/Set the data class that contains the logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPosManager.BuildCollection">
 <summary>
 Returns a collection of vwPos classes based
 </summary>
 <returns>vwPosCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwPosManager.GetvwPosBybarcode">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPosManager.GetvwPosByLikebarcode">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPosManager.CloneEntity">
 <summary>
 Clones the current vwPos
 </summary>
 <returns>A cloned vwPos object</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwPosManager.CloneEntity(DoorsPOS.BusinessLayer.vwPos)">
 <summary>
 Clones the passed in vwPos
 </summary>
 <returns>A cloned vwPos object</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwpostmpData">
 <summary>
 This class calls the view vwpostmp
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwpostmpData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwpostmpData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwpostmpData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwpostmpData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwpostmpData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwpostmpData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwpostmpData.WhereFilters.barcodes">
 <summary>
 'barcodes' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwpostmpData.WhereFilters.betwin">
 <summary>
 'betwin' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwpostmpData.WhereFilters.LikeItems">
 <summary>
 'LikeItems' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwpostmpData.WhereFilters.Liketid">
 <summary>
 'Liketid' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwpostmpData.WhereFilters.salesid">
 <summary>
 'salesid' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwpostmpData.WhereFilters.tid">
 <summary>
 'tid' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwpostmpData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwpostmpData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwpostmpData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwpostmpData.OrderByFilters.posdeyt">
 <summary>
 'posdeyt' OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwpostmpData.OrderByFilters.saleid">
 <summary>
 'saleid' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwpostmpData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwpostmpData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwpostmpData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwpostmpData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the view.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwpostmpData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwpostmpData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwpostmpData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the view in it.</param>
 <returns>vwpostmp</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwpostmpData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwpostmpData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwpostmpData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwpostmpData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwpostmpData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwpostmpData.ColumnNames">
 <summary>
 Contains static string properties that represent the name of each property in the Product class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.postmphdrid">
 <summary>
 Returns 'postmp_hdrid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.posdate">
 <summary>
 Returns 'pos_date'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.custid">
 <summary>
 Returns 'custid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.posamnt">
 <summary>
 Returns 'pos_amnt'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.tendered">
 <summary>
 Returns 'tendered'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.Cheyns">
 <summary>
 Returns 'Cheyns'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.Sc">
 <summary>
 Returns 'Sc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.totsales">
 <summary>
 Returns 'totsales'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.lessvat">
 <summary>
 Returns 'less_vat'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.nov">
 <summary>
 Returns 'nov'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.lesssc">
 <summary>
 Returns 'less_sc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.vatable">
 <summary>
 Returns 'vatable'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.exempt">
 <summary>
 Returns 'exempt'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.vatamnt">
 <summary>
 Returns 'vatamnt'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.tid">
 <summary>
 Returns 'tid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.wtid">
 <summary>
 Returns 'wtid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.stckid">
 <summary>
 Returns 'stckid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.cost">
 <summary>
 Returns 'cost'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.price">
 <summary>
 Returns 'price'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.qty">
 <summary>
 Returns 'qty'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.barcode">
 <summary>
 Returns 'barcode'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.itemdesc">
 <summary>
 Returns 'item_desc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.tdesc">
 <summary>
 Returns 'tdesc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.waiter">
 <summary>
 Returns 'waiter'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.Custnum">
 <summary>
 Returns 'Custnum'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpData.ColumnNames.detamnt">
 <summary>
 Returns 'det_amnt'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwpostmpManager">
 <summary>
 This class is used to call the view vwpostmp
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the DataObject class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwpostmpManager.DataObject">
 <summary>
 Get/Set the data class that contains the logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwpostmpManager.BuildCollection">
 <summary>
 Returns a collection of vwpostmp classes based
 </summary>
 <returns>vwpostmpCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwpostmpManager.GetvwpostmpsBybarcodes">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwpostmpManager.GetvwpostmpsBybetwin">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwpostmpManager.GetvwpostmpsByLikeItems">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwpostmpManager.GetvwpostmpsByLiketid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwpostmpManager.GetvwpostmpsBysalesid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwpostmpManager.GetvwpostmpsBytid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwpostmpManager.CloneEntity">
 <summary>
 Clones the current vwpostmp
 </summary>
 <returns>A cloned vwpostmp object</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwpostmpManager.CloneEntity(DoorsPOS.BusinessLayer.vwpostmp)">
 <summary>
 Clones the passed in vwpostmp
 </summary>
 <returns>A cloned vwpostmp object</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwPOSuspendedData">
 <summary>
 This class calls the view vwPOSuspended
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwPOSuspendedData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPOSuspendedData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPOSuspendedData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwPOSuspendedData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPOSuspendedData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPOSuspendedData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPOSuspendedData.WhereFilters.poinv">
 <summary>
 'poinv' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPOSuspendedData.WhereFilters.Likepoinv">
 <summary>
 'Likepoinv' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPOSuspendedData.WhereFilters.poid">
 <summary>
 'poid' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwPOSuspendedData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPOSuspendedData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPOSuspendedData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPOSuspendedData.OrderByFilters.poinv">
 <summary>
 'poinv' OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPOSuspendedData.OrderByFilters.poidt">
 <summary>
 'poidt' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwPOSuspendedData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwPOSuspendedData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPOSuspendedData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPOSuspendedData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPOSuspendedData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPOSuspendedData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPOSuspendedData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPOSuspendedData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPOSuspendedData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the view.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPOSuspendedData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPOSuspendedData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPOSuspendedData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the view in it.</param>
 <returns>vwPOSuspended</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwPOSuspendedData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwPOSuspendedData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwPOSuspendedData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwPOSuspendedData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPOSuspendedData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwPOSuspendedData.ColumnNames">
 <summary>
 Contains static string properties that represent the name of each property in the Product class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPOSuspendedData.ColumnNames.poidtmp">
 <summary>
 Returns 'poidtmp'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPOSuspendedData.ColumnNames.podate">
 <summary>
 Returns 'podate'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPOSuspendedData.ColumnNames.supcode">
 <summary>
 Returns 'supcode'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPOSuspendedData.ColumnNames.poinv">
 <summary>
 Returns 'poinv'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPOSuspendedData.ColumnNames.stckid">
 <summary>
 Returns 'stckid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPOSuspendedData.ColumnNames.cost">
 <summary>
 Returns 'cost'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPOSuspendedData.ColumnNames.qty">
 <summary>
 Returns 'qty'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPOSuspendedData.ColumnNames.podetamnt">
 <summary>
 Returns 'podetamnt'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPOSuspendedData.ColumnNames.itemdesc">
 <summary>
 Returns 'item_desc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPOSuspendedData.ColumnNames.supplier">
 <summary>
 Returns 'supplier'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwPOSuspendedManager">
 <summary>
 This class is used to call the view vwPOSuspended
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPOSuspendedManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the DataObject class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwPOSuspendedManager.DataObject">
 <summary>
 Get/Set the data class that contains the logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPOSuspendedManager.BuildCollection">
 <summary>
 Returns a collection of vwPOSuspended classes based
 </summary>
 <returns>vwPOSuspendedCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwPOSuspendedManager.GetvwPOSuspendedsBypoinv">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPOSuspendedManager.GetvwPOSuspendedsByLikepoinv">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPOSuspendedManager.GetvwPOSuspendedsBypoid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwPOSuspendedManager.CloneEntity">
 <summary>
 Clones the current vwPOSuspended
 </summary>
 <returns>A cloned vwPOSuspended object</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwPOSuspendedManager.CloneEntity(DoorsPOS.BusinessLayer.vwPOSuspended)">
 <summary>
 Clones the passed in vwPOSuspended
 </summary>
 <returns>A cloned vwPOSuspended object</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwReceiptData">
 <summary>
 This class calls the view vwReceipt
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwReceiptData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwReceiptData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwReceiptData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwReceiptData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwReceiptData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwReceiptData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwReceiptData.WhereFilters.sInsert_id">
 <summary>
 'sInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwReceiptData.WhereFilters.LikesInsert_id">
 <summary>
 'LikesInsert_id' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwReceiptData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwReceiptData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwReceiptData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwReceiptData.OrderByFilters.sInsert_id">
 <summary>
 'sInsert_id' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwReceiptData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwReceiptData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwReceiptData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwReceiptData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the view.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwReceiptData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwReceiptData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwReceiptData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the view in it.</param>
 <returns>vwReceipt</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwReceiptData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwReceiptData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwReceiptData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwReceiptData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwReceiptData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwReceiptData.ColumnNames">
 <summary>
 Contains static string properties that represent the name of each property in the Product class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.postmphdrid">
 <summary>
 Returns 'postmp_hdrid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.sInsertid">
 <summary>
 Returns 'sInsert_id'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.posdate">
 <summary>
 Returns 'pos_date'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.discamnt">
 <summary>
 Returns 'disc_amnt'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.postme">
 <summary>
 Returns 'pos_tme'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.custid">
 <summary>
 Returns 'custid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.posamnt">
 <summary>
 Returns 'pos_amnt'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.tendered">
 <summary>
 Returns 'tendered'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.Cheyns">
 <summary>
 Returns 'Cheyns'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.mowd">
 <summary>
 Returns 'mowd'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.Sc">
 <summary>
 Returns 'Sc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.totsales">
 <summary>
 Returns 'totsales'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.lessvat">
 <summary>
 Returns 'less_vat'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.nov">
 <summary>
 Returns 'nov'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.lesssc">
 <summary>
 Returns 'less_sc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.vatable">
 <summary>
 Returns 'vatable'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.exempt">
 <summary>
 Returns 'exempt'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.vatamnt">
 <summary>
 Returns 'vatamnt'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.tid">
 <summary>
 Returns 'tid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.wtid">
 <summary>
 Returns 'wtid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.stckid">
 <summary>
 Returns 'stckid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.cost">
 <summary>
 Returns 'cost'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.price">
 <summary>
 Returns 'price'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.detamnt">
 <summary>
 Returns 'det_amnt'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.qty">
 <summary>
 Returns 'qty'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.barcode">
 <summary>
 Returns 'barcode'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.itemdesc">
 <summary>
 Returns 'item_desc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.lastname">
 <summary>
 Returns 'lastname'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.firstname">
 <summary>
 Returns 'firstname'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.incentiv">
 <summary>
 Returns 'incentiv'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.active">
 <summary>
 Returns 'active'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.subtot">
 <summary>
 Returns 'subtot'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.paidamnt">
 <summary>
 Returns 'paidamnt'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.idnum">
 <summary>
 Returns 'id_num'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptData.ColumnNames.Receipt">
 <summary>
 Returns 'Receipt'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwReceiptManager">
 <summary>
 This class is used to call the view vwReceipt
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the DataObject class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwReceiptManager.DataObject">
 <summary>
 Get/Set the data class that contains the logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwReceiptManager.BuildCollection">
 <summary>
 Returns a collection of vwReceipt classes based
 </summary>
 <returns>vwReceiptCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwReceiptManager.GetvwReceiptsBysInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwReceiptManager.GetvwReceiptsByLikesInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwReceiptManager.CloneEntity">
 <summary>
 Clones the current vwReceipt
 </summary>
 <returns>A cloned vwReceipt object</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwReceiptManager.CloneEntity(DoorsPOS.BusinessLayer.vwReceipt)">
 <summary>
 Clones the passed in vwReceipt
 </summary>
 <returns>A cloned vwReceipt object</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwStocksData">
 <summary>
 This class calls the view vwStocks
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwStocksData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwStocksData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwStocksData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwStocksData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwStocksData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwStocksData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwStocksData.WhereFilters.barcode">
 <summary>
 'barcode' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwStocksData.WhereFilters.Likebarcode">
 <summary>
 'Likebarcode' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwStocksData.WhereFilters.Stakid">
 <summary>
 'Stakid' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwStocksData.WhereFilters.likeitem">
 <summary>
 'likeitem' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwStocksData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwStocksData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwStocksData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwStocksData.OrderByFilters.barcode">
 <summary>
 'barcode' OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwStocksData.OrderByFilters.itemdescript">
 <summary>
 'itemdescript' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwStocksData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwStocksData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the view.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the view in it.</param>
 <returns>vwStocks</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwStocksData.ColumnNames">
 <summary>
 Contains static string properties that represent the name of each property in the Product class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksData.ColumnNames.stckid">
 <summary>
 Returns 'stckid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksData.ColumnNames.barcode">
 <summary>
 Returns 'barcode'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksData.ColumnNames.itemdesc">
 <summary>
 Returns 'item_desc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksData.ColumnNames.available">
 <summary>
 Returns 'available'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksData.ColumnNames.cost">
 <summary>
 Returns 'cost'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksData.ColumnNames.retail">
 <summary>
 Returns 'retail'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksData.ColumnNames.wsale">
 <summary>
 Returns 'wsale'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksData.ColumnNames.retail2">
 <summary>
 Returns 'retail2'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwStocksLookupData">
 <summary>
 This class calls the view vwStocksLookup
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwStocksLookupData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwStocksLookupData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwStocksLookupData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwStocksLookupData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwStocksLookupData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwStocksLookupData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwStocksLookupData.WhereFilters.barcode">
 <summary>
 'barcode' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwStocksLookupData.WhereFilters.Likebarcode">
 <summary>
 'Likebarcode' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwStocksLookupData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwStocksLookupData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwStocksLookupData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwStocksLookupData.OrderByFilters.barcode">
 <summary>
 'barcode' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwStocksLookupData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwStocksLookupData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksLookupData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksLookupData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksLookupData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksLookupData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksLookupData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksLookupData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksLookupData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the view.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksLookupData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksLookupData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksLookupData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the view in it.</param>
 <returns>vwStocksLookup</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksLookupData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksLookupData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksLookupData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksLookupData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksLookupData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwStocksLookupData.ColumnNames">
 <summary>
 Contains static string properties that represent the name of each property in the Product class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksLookupData.ColumnNames.barcode">
 <summary>
 Returns 'barcode'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksLookupData.ColumnNames.itemdesc">
 <summary>
 Returns 'item_desc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksLookupData.ColumnNames.available">
 <summary>
 Returns 'available'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksLookupData.ColumnNames.retail">
 <summary>
 Returns 'retail'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksLookupData.ColumnNames.retail2">
 <summary>
 Returns 'retail2'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwStocksLookupManager">
 <summary>
 This class is used to call the view vwStocksLookup
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksLookupManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the DataObject class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksLookupManager.DataObject">
 <summary>
 Get/Set the data class that contains the logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksLookupManager.BuildCollection">
 <summary>
 Returns a collection of vwStocksLookup classes based
 </summary>
 <returns>vwStocksLookupCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksLookupManager.GetvwStocksLookupsBybarcode">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksLookupManager.GetvwStocksLookupsByLikebarcode">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksLookupManager.CloneEntity">
 <summary>
 Clones the current vwStocksLookup
 </summary>
 <returns>A cloned vwStocksLookup object</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksLookupManager.CloneEntity(DoorsPOS.BusinessLayer.vwStocksLookup)">
 <summary>
 Clones the passed in vwStocksLookup
 </summary>
 <returns>A cloned vwStocksLookup object</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwStocksManager">
 <summary>
 This class is used to call the view vwStocks
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the DataObject class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwStocksManager.DataObject">
 <summary>
 Get/Set the data class that contains the logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksManager.BuildCollection">
 <summary>
 Returns a collection of vwStocks classes based
 </summary>
 <returns>vwStocksCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksManager.GetvwStocksBybarcode">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksManager.GetvwStocksByLikebarcode">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksManager.GetvwStocksByStakid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksManager.GetvwStocksBylikeitem">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksManager.CloneEntity">
 <summary>
 Clones the current vwStocks
 </summary>
 <returns>A cloned vwStocks object</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwStocksManager.CloneEntity(DoorsPOS.BusinessLayer.vwStocks)">
 <summary>
 Clones the passed in vwStocks
 </summary>
 <returns>A cloned vwStocks object</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendDlvryData">
 <summary>
 This class calls the view vwSuspendDlvry
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendDlvryData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendDlvryData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendDlvryData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendDlvryData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendDlvryData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendDlvryData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendDlvryData.WhereFilters.Likesupplier">
 <summary>
 'Likesupplier' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendDlvryData.WhereFilters.supplier">
 <summary>
 'supplier' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendDlvryData.WhereFilters.employee">
 <summary>
 'employee' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendDlvryData.WhereFilters.SuspendID">
 <summary>
 'SuspendID' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendDlvryData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendDlvryData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendDlvryData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendDlvryData.OrderByFilters.supplier">
 <summary>
 'supplier' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendDlvryData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendDlvryData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendDlvryData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendDlvryData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendDlvryData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendDlvryData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendDlvryData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendDlvryData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendDlvryData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the view.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendDlvryData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendDlvryData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendDlvryData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the view in it.</param>
 <returns>vwSuspendDlvry</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendDlvryData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendDlvryData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendDlvryData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendDlvryData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendDlvryData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendDlvryData.ColumnNames">
 <summary>
 Contains static string properties that represent the name of each property in the Product class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendDlvryData.ColumnNames.dridtmp">
 <summary>
 Returns 'dridtmp'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendDlvryData.ColumnNames.drdate">
 <summary>
 Returns 'drdate'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendDlvryData.ColumnNames.supplier">
 <summary>
 Returns 'supplier'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendDlvryData.ColumnNames.supcode">
 <summary>
 Returns 'supcode'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendDlvryData.ColumnNames.drdue">
 <summary>
 Returns 'drdue'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendDlvryData.ColumnNames.sInsertid">
 <summary>
 Returns 'sInsert_id'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendDlvryManager">
 <summary>
 This class is used to call the view vwSuspendDlvry
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendDlvryManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the DataObject class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendDlvryManager.DataObject">
 <summary>
 Get/Set the data class that contains the logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendDlvryManager.BuildCollection">
 <summary>
 Returns a collection of vwSuspendDlvry classes based
 </summary>
 <returns>vwSuspendDlvryCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendDlvryManager.GetvwSuspendDlvrysByLikesupplier">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendDlvryManager.GetvwSuspendDlvrysBysupplier">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendDlvryManager.GetvwSuspendDlvrysByemployee">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendDlvryManager.GetvwSuspendDlvrysBySuspendID">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendDlvryManager.CloneEntity">
 <summary>
 Clones the current vwSuspendDlvry
 </summary>
 <returns>A cloned vwSuspendDlvry object</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendDlvryManager.CloneEntity(DoorsPOS.BusinessLayer.vwSuspendDlvry)">
 <summary>
 Clones the passed in vwSuspendDlvry
 </summary>
 <returns>A cloned vwSuspendDlvry object</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendedData">
 <summary>
 This class calls the view vwSuspended
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendedData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendedData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendedData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendedData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendedData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendedData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendedData.WhereFilters.LikesInsert_id">
 <summary>
 'LikesInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendedData.WhereFilters.sInsert_id">
 <summary>
 'sInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendedData.WhereFilters.SuspendId">
 <summary>
 'SuspendId' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendedData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendedData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendedData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendedData.OrderByFilters.sInsert_id">
 <summary>
 'sInsert_id' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendedData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendedData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the view.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the view in it.</param>
 <returns>vwSuspended</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendedData.ColumnNames">
 <summary>
 Contains static string properties that represent the name of each property in the Product class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedData.ColumnNames.postmphdrid">
 <summary>
 Returns 'postmp_hdrid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedData.ColumnNames.posdate">
 <summary>
 Returns 'pos_date'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedData.ColumnNames.custid">
 <summary>
 Returns 'custid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedData.ColumnNames.sInsertid">
 <summary>
 Returns 'sInsert_id'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedData.ColumnNames.stckid">
 <summary>
 Returns 'stckid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedData.ColumnNames.barcode">
 <summary>
 Returns 'barcode'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedData.ColumnNames.itemdesc">
 <summary>
 Returns 'item_desc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedData.ColumnNames.cost">
 <summary>
 Returns 'cost'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedData.ColumnNames.price">
 <summary>
 Returns 'price'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedData.ColumnNames.detamnt">
 <summary>
 Returns 'det_amnt'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedData.ColumnNames.qty">
 <summary>
 Returns 'qty'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedData.ColumnNames.lastname">
 <summary>
 Returns 'lastname'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedData.ColumnNames.firstname">
 <summary>
 Returns 'firstname'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedData.ColumnNames.detdisc">
 <summary>
 Returns 'det_disc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedData.ColumnNames.incentiv">
 <summary>
 Returns 'incentiv'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendedManager">
 <summary>
 This class is used to call the view vwSuspended
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the DataObject class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedManager.DataObject">
 <summary>
 Get/Set the data class that contains the logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedManager.BuildCollection">
 <summary>
 Returns a collection of vwSuspended classes based
 </summary>
 <returns>vwSuspendedCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedManager.GetvwSuspendedsByLikesInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedManager.GetvwSuspendedsBysInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedManager.GetvwSuspendedsBySuspendId">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedManager.CloneEntity">
 <summary>
 Clones the current vwSuspended
 </summary>
 <returns>A cloned vwSuspended object</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedManager.CloneEntity(DoorsPOS.BusinessLayer.vwSuspended)">
 <summary>
 Clones the passed in vwSuspended
 </summary>
 <returns>A cloned vwSuspended object</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendedSaleData">
 <summary>
 This class calls the view vwSuspendedSale
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendedSaleData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendedSaleData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendedSaleData.SelectFilters.SuspendedItems">
 <summary>
 'SuspendedItems' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendedSaleData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendedSaleData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendedSaleData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendedSaleData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendedSaleData.WhereFilters.cashstatus">
 <summary>
 'cashstatus' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendedSaleData.WhereFilters.hdrid">
 <summary>
 'hdrid' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendedSaleData.WhereFilters.LikesInsert_id">
 <summary>
 'LikesInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendedSaleData.WhereFilters.sInsert_id">
 <summary>
 'sInsert_id' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendedSaleData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendedSaleData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendedSaleData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendedSaleData.OrderByFilters.sInsert_id">
 <summary>
 'sInsert_id' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendedSaleData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendedSaleData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedSaleData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedSaleData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedSaleData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedSaleData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedSaleData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedSaleData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedSaleData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the view.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedSaleData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedSaleData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedSaleData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the view in it.</param>
 <returns>vwSuspendedSale</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedSaleData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedSaleData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedSaleData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedSaleData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedSaleData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendedSaleData.ColumnNames">
 <summary>
 Contains static string properties that represent the name of each property in the Product class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedSaleData.ColumnNames.postmphdrid">
 <summary>
 Returns 'postmp_hdrid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedSaleData.ColumnNames.posdate">
 <summary>
 Returns 'pos_date'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedSaleData.ColumnNames.custid">
 <summary>
 Returns 'custid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedSaleData.ColumnNames.sInsertid">
 <summary>
 Returns 'sInsert_id'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedSaleData.ColumnNames.stckid">
 <summary>
 Returns 'stckid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedSaleData.ColumnNames.barcode">
 <summary>
 Returns 'barcode'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedSaleData.ColumnNames.cost">
 <summary>
 Returns 'cost'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedSaleData.ColumnNames.price">
 <summary>
 Returns 'price'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedSaleData.ColumnNames.detamnt">
 <summary>
 Returns 'det_amnt'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedSaleData.ColumnNames.itemdesc">
 <summary>
 Returns 'item_desc'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedSaleData.ColumnNames.status">
 <summary>
 Returns 'status'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedSaleData.ColumnNames.qty">
 <summary>
 Returns 'qty'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendedSaleManager">
 <summary>
 This class is used to call the view vwSuspendedSale
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedSaleManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the DataObject class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendedSaleManager.DataObject">
 <summary>
 Get/Set the data class that contains the logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedSaleManager.BuildCollection">
 <summary>
 Returns a collection of vwSuspendedSale classes based
 </summary>
 <returns>vwSuspendedSaleCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedSaleManager.GetvwSuspendedSalesBycashstatus">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedSaleManager.GetvwSuspendedSalesByhdrid">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedSaleManager.GetvwSuspendedSalesByLikesInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedSaleManager.GetvwSuspendedSalesBysInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedSaleManager.CloneEntity">
 <summary>
 Clones the current vwSuspendedSale
 </summary>
 <returns>A cloned vwSuspendedSale object</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendedSaleManager.CloneEntity(DoorsPOS.BusinessLayer.vwSuspendedSale)">
 <summary>
 Clones the passed in vwSuspendedSale
 </summary>
 <returns>A cloned vwSuspendedSale object</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendHdrData">
 <summary>
 This class calls the view vwSuspendHdr
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendHdrData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendHdrData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendHdrData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendHdrData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendHdrData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendHdrData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendHdrData.WhereFilters.Cashier">
 <summary>
 'Cashier' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendHdrData.WhereFilters.LikesInsert_id">
 <summary>
 'LikesInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendHdrData.WhereFilters.sInsert_id">
 <summary>
 'sInsert_id' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendHdrData.WhereFilters.cashstatus">
 <summary>
 'cashstatus' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendHdrData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendHdrData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendHdrData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendHdrData.OrderByFilters.sInsert_id">
 <summary>
 'sInsert_id' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendHdrData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.vwSuspendHdrData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendHdrData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendHdrData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendHdrData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendHdrData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendHdrData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendHdrData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendHdrData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the view.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendHdrData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendHdrData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendHdrData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the view in it.</param>
 <returns>vwSuspendHdr</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendHdrData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendHdrData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendHdrData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendHdrData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendHdrData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendHdrData.ColumnNames">
 <summary>
 Contains static string properties that represent the name of each property in the Product class.
 This class is generated by the Haystack Code Generator for .NET.
 Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendHdrData.ColumnNames.postmphdrid">
 <summary>
 Returns 'postmp_hdrid'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendHdrData.ColumnNames.posdate">
 <summary>
 Returns 'pos_date'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendHdrData.ColumnNames.sInsertid">
 <summary>
 Returns 'sInsert_id'
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendHdrData.ColumnNames.status">
 <summary>
 Returns 'status'
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.vwSuspendHdrManager">
 <summary>
 This class is used to call the view vwSuspendHdr
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendHdrManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the DataObject class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.vwSuspendHdrManager.DataObject">
 <summary>
 Get/Set the data class that contains the logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendHdrManager.BuildCollection">
 <summary>
 Returns a collection of vwSuspendHdr classes based
 </summary>
 <returns>vwSuspendHdrCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendHdrManager.GetvwSuspendHdrsByCashier">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendHdrManager.GetvwSuspendHdrsByLikesInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendHdrManager.GetvwSuspendHdrsBysInsert_id">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendHdrManager.GetvwSuspendHdrsBycashstatus">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendHdrManager.CloneEntity">
 <summary>
 Clones the current vwSuspendHdr
 </summary>
 <returns>A cloned vwSuspendHdr object</returns>
</member>
<member name="M:DoorsPOS.DataLayer.vwSuspendHdrManager.CloneEntity(DoorsPOS.BusinessLayer.vwSuspendHdr)">
 <summary>
 Clones the passed in vwSuspendHdr
 </summary>
 <returns>A cloned vwSuspendHdr object</returns>
</member>
<member name="T:DoorsPOS.DataLayer.waitersData">
 <summary>
 Used to Add/Edit/Delete/Select data from the waiters table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.waitersData.#ctor">
 <summary>
 Constructor for the waitersData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.waitersData.#ctor(DoorsPOS.BusinessLayer.waiters)">
 <summary>
 Constructor for the waitersData class
 </summary>
 <param name="entity">An instance of a waiters</param>
</member>
<member name="M:DoorsPOS.DataLayer.waitersData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.waiters)">
 <summary>
 Constructor for the waitersData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a waiters</param>
</member>
<member name="M:DoorsPOS.DataLayer.waitersData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.waiters,DoorsPOS.BusinessLayer.waitersValidator)">
 <summary>
 Constructor for the waitersData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a waiters</param>
 <param name="validator">An instance of a waitersValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.waitersData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.waitersData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.waitersData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.waitersData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.waitersData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.waitersData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.waitersData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.waitersData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.waitersData.WhereFilters.pass">
 <summary>
 'pass' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.waitersData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.waitersData.WhereFilters.pword">
 <summary>
 'pword' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.waitersData.WhereFilters.waiter">
 <summary>
 'waiter' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.waitersData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.waitersData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.waitersData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.waitersData.OrderByFilters.pword">
 <summary>
 'pword' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.waitersData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.waitersData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.waitersData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.waitersData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.waitersData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.waitersData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.waitersData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.waitersData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.waitersData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.waitersData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.waitersData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.waitersData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.waitersData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.waitersData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.waitersData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.waitersData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.waitersData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.waitersData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.waitersData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.waitersData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.waitersData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.waitersData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.waitersData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.waitersData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.waitersData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.waitersData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>waiters</returns>
</member>
<member name="M:DoorsPOS.DataLayer.waitersData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.waitersData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.waitersData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.waitersData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="wtid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.waitersData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.waitersData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.waitersData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="wtid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.waitersData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.waitersData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.waitersData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.waitersData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.waitersData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="wtid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.waitersData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.waitersManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the waiters table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.waitersManager.#ctor">
 <summary>
 Constructor for the waitersManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.waitersManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the waitersManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.waitersManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.waitersManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.waitersManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.waitersManager.BuildCollection">
 <summary>
 Returns a collection of waiters classes based
 </summary>
 <returns>waitersCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.waitersManager.GetwaitersBypass">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.waitersManager.GetwaitersByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.waitersManager.GetwaitersBypword">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.waitersManager.GetwaitersBywaiter">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.wsizeData">
 <summary>
 Used to Add/Edit/Delete/Select data from the wsize table.
 This class is generated by the Haystack Code Generator for .NET.
 You should NOT modify this class as it is intended to be re-generated.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeData.#ctor">
 <summary>
 Constructor for the wsizeData class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeData.#ctor(DoorsPOS.BusinessLayer.wsize)">
 <summary>
 Constructor for the wsizeData class
 </summary>
 <param name="entity">An instance of a wsize</param>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.wsize)">
 <summary>
 Constructor for the wsizeData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a wsize</param>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeData.#ctor(PDSA.DataLayer.PDSADataProvider,DoorsPOS.BusinessLayer.wsize,DoorsPOS.BusinessLayer.wsizeValidator)">
 <summary>
 Constructor for the wsizeData class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
 <param name="entity">An instance of a wsize</param>
 <param name="validator">An instance of a wsizeValidator</param>
</member>
<member name="T:DoorsPOS.DataLayer.wsizeData.SelectFilters">
 <summary>
 Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.wsizeData.SelectFilters.All">
 <summary>
 'All' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.wsizeData.SelectFilters.ListBox">
 <summary>
 'ListBox' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.wsizeData.SelectFilters.PrimaryKey">
 <summary>
 'PrimaryKey' SelectFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.wsizeData.SelectFilters.Custom">
 <summary>
 A Custom SelectFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.wsizeData.WhereFilters">
 <summary>
 Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.wsizeData.WhereFilters.None">
 <summary>
 No WhereFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.wsizeData.WhereFilters.Custom">
 <summary>
 A Custom WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.wsizeData.WhereFilters.PrimaryKey">
 <summary>
 'PrimaryKey' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.wsizeData.WhereFilters.sayz">
 <summary>
 'sayz' WhereFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.wsizeData.WhereFilters.Likesayz">
 <summary>
 'Likesayz' WhereFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.wsizeData.OrderByFilters">
 <summary>
 Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.wsizeData.OrderByFilters.None">
 <summary>
 No OrderByFilter Selected
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.wsizeData.OrderByFilters.Custom">
 <summary>
 A Custom OrderByFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.wsizeData.OrderByFilters.sayz">
 <summary>
 'sayz' OrderByFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.wsizeData.InsertFilters">
 <summary>
 Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.wsizeData.InsertFilters.All">
 <summary>
 'All' InsertFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.wsizeData.InsertFilters.Custom">
 <summary>
 A Custom InsertFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.wsizeData.UpdateFilters">
 <summary>
 Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.wsizeData.UpdateFilters.PrimaryKey">
 <summary>
 'PrimaryKey' UpdateFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.wsizeData.UpdateFilters.Custom">
 <summary>
 A Custom UpdateFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.wsizeData.DeleteFilters">
 <summary>
 Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.wsizeData.DeleteFilters.All">
 <summary>
 'All' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.wsizeData.DeleteFilters.DeleteByPK">
 <summary>
 'DeleteByPK' DeleteFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.wsizeData.DeleteFilters.Custom">
 <summary>
 A Custom DeleteFilter
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.wsizeData.RowCountFilters">
 <summary>
 Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.wsizeData.RowCountFilters.All">
 <summary>
 'All' RowCountFilter
 </summary>
</member>
<member name="F:DoorsPOS.DataLayer.wsizeData.RowCountFilters.Custom">
 <summary>
 S Custom RowCountFilter
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.wsizeData.Entity">
 <summary>
 Get/Set the Entity class that will be used to get and set properties/fields for this data class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.wsizeData.SelectFilter">
 <summary>
 Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.wsizeData.WhereFilter">
 <summary>
 Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.wsizeData.OrderByFilter">
 <summary>
 Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.wsizeData.InsertFilter">
 <summary>
 Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.wsizeData.UpdateFilter">
 <summary>
 Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.wsizeData.DeleteFilter">
 <summary>
 Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.wsizeData.RowCountFilter">
 <summary>
 Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeData.Init">
 <summary>
 Initializes this class to a valid start state.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeData.InitDataColumns">
 <summary>
 Initializes all of the Data Columns with valid data for each field in the table.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeData.EntityDataToColumnCollection">
 <summary>
 Moves the data from the Entity class into the Columns collection
 This is called prior to performing a Business Rule Check, an INSERT, UPDATE or DELETE
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeData.ColumnCollectionToEntityData">
 <summary>
 Moves the data from the Columns collection into the Entity class.
 This is called whenever you are reading data in from a database.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeData.CreateEntityFromDataRow(System.Data.DataRow)">
 <summary>
 Creates an Entity object from a DataRow object.
 </summary>
 <param name="dr">DataRow object with all fields from the table in it.</param>
 <returns>wsize</returns>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeData.SelectSQL">
 <summary>
 Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeData.InsertSQL">
 <summary>
 Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeData.UpdateSQL">
 <summary>
 Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeData.DeleteByPK(System.Int32)">
 <summary>
 Delete a record from the table based on the primary key value that is passed in.
 </summary>
 <param name="sizeid">The value of the primary key of the row to delete</param>
 <returns>int</returns>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeData.DeleteSQL">
 <summary>
 Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeData.RowCountSQL">
 <summary>
 Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeData.LoadByPK(System.Int32)">
 <summary>
 Load a row of data in the Entity properties
 </summary>
 <param name="sizeid">The value of the primary key of the row to load</param>
 <returns>Int32</returns>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeData.WhereClauseSQL">
 <summary>
 Builds the WHERE clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeData.WhereClauseFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any WHERE clause parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeData.OrderByClauseSQL">
 <summary>
 Builds the ORDER BY clause to be used in combination with a SELECT statement.
 </summary>
 <returns>string</returns>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeData.SelectFillInParameters">
 <summary>
 Builds the CommandObject.Parameters collection for any SELECT statement parameters.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeData.PrimaryKeySet(System.Int32)">
 <summary>
 Sets the primary key field in the Entity and in the Data Columns Collection.
 </summary>
 <param name="sizeid">The value of the primary key to set</param>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeData.SetModificationCommandParameters">
 <summary>
 Called to build any parameters prior to submitting an INSERT, UPDATE, DELETE statement.
 </summary>
</member>
<member name="T:DoorsPOS.DataLayer.wsizeManager">
 <summary>
 This class should be used when you need to add, edit, delete, select and validate data for the wsize table.
 This class is generated using the Haystack Code Generator for .NET Utility.
 You may add additional methods to this class.
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeManager.#ctor">
 <summary>
 Constructor for the wsizeManager class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeManager.#ctor(PDSA.DataLayer.PDSADataProvider)">
 <summary>
 Constructor for the wsizeManager class
 </summary>
 <param name="dataProvider">An instance of a PDSADataProvider</param>
</member>
<member name="P:DoorsPOS.DataLayer.wsizeManager.Entity">
 <summary>
 Get/Set the entity class. This the class that contains one property for each column in the table.
 Setting this property will also set the Entity class in the Validator class too.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.wsizeManager.Validator">
 <summary>
 Get/Set the validator class. This is the class that contains the business rules for the Entity class.
 </summary>
</member>
<member name="P:DoorsPOS.DataLayer.wsizeManager.DataObject">
 <summary>
 Get/Set the data class that contains the CRUD logic for loading the Entity class
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeManager.BuildCollection">
 <summary>
 Returns a collection of wsize classes based
 </summary>
 <returns>wsizeCollection</returns>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeManager.GetwsizesByPrimaryKey">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeManager.GetwsizesBysayz">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
<member name="M:DoorsPOS.DataLayer.wsizeManager.GetwsizesByLikesayz">
 <summary>
 Set the specified WhereFilter and call the BuildCollection() method
 </summary>
</member>
</members>
</doc>
