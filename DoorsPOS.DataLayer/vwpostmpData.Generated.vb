Imports System
Imports System.Data
Imports System.Text

Imports PDSA.Common
Imports PDSA.DataLayer
Imports PDSA.DataLayer.DataClasses
Imports PDSA.Validation

''' <summary>
''' This class calls the view vwpostmp
''' This class is generated by the Haystack Code Generator for .NET.
''' You should NOT modify this class as it is intended to be re-generated.
''' </summary>
Public Class vwpostmpData
  Inherits PDSADataClassReadOnly

#Region "Constructors"
  Public Sub New()
    MyBase.New()

    _Entity = New vwpostmp()

    Init()
  End Sub
  
  Public Sub New(ByVal dataProvider As PDSADataProvider, ByVal entity As vwpostmp)
    MyBase.New(dataProvider)

    _Entity = entity

    Init()
  End Sub
#End Region

#Region "Private Variables"
  Private _Entity As vwpostmp

  Private _WhereFilter As WhereFilters
  Private _OrderByFilter As OrderByFilters
  Private _SelectFilter As SelectFilters
  Private _RowCountFilter As RowCountFilters
#End Region

#Region "Filter Enumerations"
  ''' <summary>
  ''' Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
  ''' </summary>
  Public Enum SelectFilters
    ''' <summary>
    ''' 'All' SelectFilter
    ''' </summary>
    All
    ''' <summary>
    ''' A Custom SelectFilter
    ''' </summary>
    Custom
  End Enum

  ''' <summary>
  ''' Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
  ''' </summary>
  Public Enum WhereFilters
    ''' <summary>
    ''' No WhereFilter Selected
    ''' </summary>
    None
    ''' <summary>
    ''' A Custom WhereFilter
    ''' </summary>
    Custom
    ''' <summary>
    ''' 'barcodes' WhereFilter
    ''' </summary>
    barcodes
    ''' <summary>
    ''' 'betwin' WhereFilter
    ''' </summary>
    betwin
    ''' <summary>
    ''' 'LikeItems' WhereFilter
    ''' </summary>
    LikeItems
    ''' <summary>
    ''' 'Liketid' WhereFilter
    ''' </summary>
    Liketid
    ''' <summary>
    ''' 'salesid' WhereFilter
    ''' </summary>
    salesid
    ''' <summary>
    ''' 'tid' WhereFilter
    ''' </summary>
    tid
  End Enum

  ''' <summary>
  ''' Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
  ''' </summary>
  Public Enum OrderByFilters
    ''' <summary>
    ''' No OrderByFilter Selected
    ''' </summary>
    None
    ''' <summary>
    ''' A Custom OrderByFilter
    ''' </summary>
    Custom
    ''' <summary>
    ''' 'posdeyt' OrderByFilter
    ''' </summary>
    posdeyt
    ''' <summary>
    ''' 'saleid' OrderByFilter
    ''' </summary>
    saleid
  End Enum
  ''' <summary>
  ''' Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
  ''' </summary>
  Public Enum RowCountFilters
    ''' <summary>
    ''' 'All' RowCountFilter
    ''' </summary>
    All
    Custom
  End Enum
#End Region

#Region "Public Properties"
  ''' <summary>
  ''' Get/Set the Entity class that will be used to get and set properties/fields for this data class.
  ''' </summary>
  Public Property Entity() As vwpostmp
    Get
      Return _Entity
    End Get
    Set(ByVal value As vwpostmp)
      _Entity = value
    End Set
  End Property

  ''' <summary>
  ''' Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
  ''' </summary>
  Public Property SelectFilter() As SelectFilters
    Get
      Return _SelectFilter
    End Get
    Set(ByVal Value As SelectFilters)
      _SelectFilter = Value
    End Set
  End Property

  ''' <summary>
  ''' Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
  ''' </summary>
  Public Property WhereFilter() As WhereFilters
    Get
      Return _WhereFilter
    End Get
    Set(ByVal Value As WhereFilters)
      _WhereFilter = Value
    End Set
  End Property

  ''' <summary>
  ''' Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
  ''' </summary>
  Public Property OrderByFilter() As OrderByFilters
    Get
      Return _OrderByFilter
    End Get
    Set(ByVal Value As OrderByFilters)
      _OrderByFilter = Value
    End Set
  End Property
  
  ''' <summary>
  ''' Get/Set a Row Count statement to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
  ''' </summary>
  Public Property RowCountFilter() As RowCountFilters
    Get
      Return _RowCountFilter
    End Get
    Set(ByVal Value As RowCountFilters)
      _RowCountFilter = Value
    End Set
  End Property
#End Region

#Region "Init Method"
  ''' <summary>
  ''' Initializes this class to a valid start state.
  ''' </summary>
  Protected Overrides Sub Init()
    ClassName = "vwpostmpData"
    DBObjectName = "vwpostmp"
    SchemaName = "dbo"

    ' Create Data Columns
    InitDataColumns()
  End Sub
#End Region

#Region "InitDataColumns Method"
  ''' <summary>
  ''' Initializes all of the Data Columns with valid data for each field in the view.
  ''' </summary>
  Protected Overrides Sub InitDataColumns()
    Dim dc As PDSADataColumn

    ' Create each data column
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.postmphdrid, "postmp hdrid", False, GetType(Integer), DbType.Int32)
    AllColumns.Add(dc)
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.posdate, "pos date", False, GetType(Date), DbType.Date)
    AllColumns.Add(dc)
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.custid, "custid", False, GetType(Integer), DbType.Int32)
    AllColumns.Add(dc)
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.posamnt, "pos amnt", False, GetType(Decimal), DbType.Decimal)
    AllColumns.Add(dc)
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.tendered, "tendered", False, GetType(Decimal), DbType.Decimal)
    AllColumns.Add(dc)
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.Cheyns, "Cheyns", False, GetType(Decimal), DbType.Decimal)
    AllColumns.Add(dc)
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.Sc, "Sc", False, GetType(Integer), DbType.Int32)
    AllColumns.Add(dc)
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.totsales, "totsales", False, GetType(Decimal), DbType.Decimal)
    AllColumns.Add(dc)
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.lessvat, "less vat", False, GetType(Decimal), DbType.Decimal)
    AllColumns.Add(dc)
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.nov, "nov", False, GetType(Decimal), DbType.Decimal)
    AllColumns.Add(dc)
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.lesssc, "less sc", False, GetType(Decimal), DbType.Decimal)
    AllColumns.Add(dc)
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.vatable, "vatable", False, GetType(Decimal), DbType.Decimal)
    AllColumns.Add(dc)
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.exempt, "exempt", False, GetType(Decimal), DbType.Decimal)
    AllColumns.Add(dc)
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.vatamnt, "vatamnt", False, GetType(Decimal), DbType.Decimal)
    AllColumns.Add(dc)
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.tid, "tid", False, GetType(String), DbType.String)
    AllColumns.Add(dc)
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.wtid, "wtid", False, GetType(Integer), DbType.Int32)
    AllColumns.Add(dc)
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.stckid, "stckid", False, GetType(Integer), DbType.Int32)
    AllColumns.Add(dc)
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.cost, "cost", False, GetType(Decimal), DbType.Decimal)
    AllColumns.Add(dc)
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.price, "price", False, GetType(Decimal), DbType.Decimal)
    AllColumns.Add(dc)
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.qty, "qty", False, GetType(Double), DbType.Double)
    AllColumns.Add(dc)
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.barcode, "barcode", False, GetType(String), DbType.String)
    AllColumns.Add(dc)
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.itemdesc, "item desc", False, GetType(String), DbType.String)
    AllColumns.Add(dc)
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.tdesc, "tdesc", False, GetType(String), DbType.String)
    AllColumns.Add(dc)
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.waiter, "waiter", False, GetType(String), DbType.String)
    AllColumns.Add(dc)
    dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.Custnum, "Custnum", False, GetType(Integer), DbType.Int32)
        AllColumns.Add(dc)
        dc = PDSADataColumn.CreateDataColumn(vwpostmpData.ColumnNames.detamnt, "det amnt", False, GetType(Decimal), DbType.Decimal)
        AllColumns.Add(dc)
    End Sub
#End Region

#Region "EntityDataToColumnCollection Method"
    ''' <summary>
    ''' Moves the data from the Entity class into the Columns collection
    ''' </summary>
    Protected Overrides Sub EntityDataToColumnCollection()
        If AllColumns.GetByName(vwpostmpData.ColumnNames.postmphdrid).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.postmphdrid).Value = Entity.postmphdrid
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.postmphdrid).Value = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.posdate).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.posdate).Value = Entity.posdate
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.posdate).Value = DateTime.Now
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.custid).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.custid).Value = Entity.custid
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.custid).Value = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.posamnt).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.posamnt).Value = Entity.posamnt
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.posamnt).Value = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.tendered).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.tendered).Value = Entity.tendered
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.tendered).Value = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.Cheyns).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.Cheyns).Value = Entity.Cheyns
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.Cheyns).Value = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.Sc).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.Sc).Value = Entity.Sc
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.Sc).Value = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.totsales).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.totsales).Value = Entity.totsales
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.totsales).Value = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.lessvat).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.lessvat).Value = Entity.lessvat
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.lessvat).Value = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.nov).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.nov).Value = Entity.nov
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.nov).Value = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.lesssc).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.lesssc).Value = Entity.lesssc
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.lesssc).Value = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.vatable).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.vatable).Value = Entity.vatable
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.vatable).Value = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.exempt).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.exempt).Value = Entity.exempt
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.exempt).Value = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.vatamnt).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.vatamnt).Value = Entity.vatamnt
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.vatamnt).Value = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.tid).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.tid).Value = Entity.tid
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.tid).Value = String.Empty
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.wtid).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.wtid).Value = Entity.wtid
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.wtid).Value = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.stckid).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.stckid).Value = Entity.stckid
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.stckid).Value = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.cost).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.cost).Value = Entity.cost
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.cost).Value = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.price).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.price).Value = Entity.price
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.price).Value = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.qty).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.qty).Value = Entity.qty
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.qty).Value = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.barcode).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.barcode).Value = Entity.barcode
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.barcode).Value = String.Empty
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.itemdesc).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.itemdesc).Value = Entity.itemdesc
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.itemdesc).Value = String.Empty
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.tdesc).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.tdesc).Value = Entity.tdesc
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.tdesc).Value = String.Empty
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.waiter).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.waiter).Value = Entity.waiter
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.waiter).Value = String.Empty
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.Custnum).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.Custnum).Value = Entity.Custnum
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.Custnum).Value = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.detamnt).SetAsNull = False Then
            AllColumns.GetByName(vwpostmpData.ColumnNames.detamnt).Value = Entity.detamnt
        Else
            AllColumns.GetByName(vwpostmpData.ColumnNames.detamnt).Value = 0
        End If

    End Sub
#End Region

#Region "ColumnCollectionToEntityData Method"
    ''' <summary>
    ''' Moves the data from the Columns collection into the Entity class.
    ''' </summary>
    Protected Overrides Sub ColumnCollectionToEntityData()
        If AllColumns.GetByName(vwpostmpData.ColumnNames.postmphdrid).IsNull = False Then
            Entity.postmphdrid = AllColumns.GetByName(vwpostmpData.ColumnNames.postmphdrid).GetAsInteger()
        Else
            Entity.postmphdrid = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.posdate).IsNull = False Then
            Entity.posdate = AllColumns.GetByName(vwpostmpData.ColumnNames.posdate).GetAsDate()
        Else
            Entity.posdate = DateTime.Now
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.custid).IsNull = False Then
            Entity.custid = AllColumns.GetByName(vwpostmpData.ColumnNames.custid).GetAsInteger()
        Else
            Entity.custid = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.posamnt).IsNull = False Then
            Entity.posamnt = AllColumns.GetByName(vwpostmpData.ColumnNames.posamnt).GetAsDecimal()
        Else
            Entity.posamnt = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.tendered).IsNull = False Then
            Entity.tendered = AllColumns.GetByName(vwpostmpData.ColumnNames.tendered).GetAsDecimal()
        Else
            Entity.tendered = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.Cheyns).IsNull = False Then
            Entity.Cheyns = AllColumns.GetByName(vwpostmpData.ColumnNames.Cheyns).GetAsDecimal()
        Else
            Entity.Cheyns = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.Sc).IsNull = False Then
            Entity.Sc = AllColumns.GetByName(vwpostmpData.ColumnNames.Sc).GetAsInteger()
        Else
            Entity.Sc = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.totsales).IsNull = False Then
            Entity.totsales = AllColumns.GetByName(vwpostmpData.ColumnNames.totsales).GetAsDecimal()
        Else
            Entity.totsales = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.lessvat).IsNull = False Then
            Entity.lessvat = AllColumns.GetByName(vwpostmpData.ColumnNames.lessvat).GetAsDecimal()
        Else
            Entity.lessvat = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.nov).IsNull = False Then
            Entity.nov = AllColumns.GetByName(vwpostmpData.ColumnNames.nov).GetAsDecimal()
        Else
            Entity.nov = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.lesssc).IsNull = False Then
            Entity.lesssc = AllColumns.GetByName(vwpostmpData.ColumnNames.lesssc).GetAsDecimal()
        Else
            Entity.lesssc = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.vatable).IsNull = False Then
            Entity.vatable = AllColumns.GetByName(vwpostmpData.ColumnNames.vatable).GetAsDecimal()
        Else
            Entity.vatable = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.exempt).IsNull = False Then
            Entity.exempt = AllColumns.GetByName(vwpostmpData.ColumnNames.exempt).GetAsDecimal()
        Else
            Entity.exempt = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.vatamnt).IsNull = False Then
            Entity.vatamnt = AllColumns.GetByName(vwpostmpData.ColumnNames.vatamnt).GetAsDecimal()
        Else
            Entity.vatamnt = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.tid).IsNull = False Then
            Entity.tid = AllColumns.GetByName(vwpostmpData.ColumnNames.tid).GetAsString()
        Else
            Entity.tid = String.Empty
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.wtid).IsNull = False Then
            Entity.wtid = AllColumns.GetByName(vwpostmpData.ColumnNames.wtid).GetAsInteger()
        Else
            Entity.wtid = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.stckid).IsNull = False Then
            Entity.stckid = AllColumns.GetByName(vwpostmpData.ColumnNames.stckid).GetAsInteger()
        Else
            Entity.stckid = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.cost).IsNull = False Then
            Entity.cost = AllColumns.GetByName(vwpostmpData.ColumnNames.cost).GetAsDecimal()
        Else
            Entity.cost = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.price).IsNull = False Then
            Entity.price = AllColumns.GetByName(vwpostmpData.ColumnNames.price).GetAsDecimal()
        Else
            Entity.price = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.qty).IsNull = False Then
            Entity.qty = AllColumns.GetByName(vwpostmpData.ColumnNames.qty).GetAsDouble()
        Else
            Entity.qty = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.barcode).IsNull = False Then
            Entity.barcode = AllColumns.GetByName(vwpostmpData.ColumnNames.barcode).GetAsString()
        Else
            Entity.barcode = String.Empty
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.itemdesc).IsNull = False Then
            Entity.itemdesc = AllColumns.GetByName(vwpostmpData.ColumnNames.itemdesc).GetAsString()
        Else
            Entity.itemdesc = String.Empty
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.tdesc).IsNull = False Then
            Entity.tdesc = AllColumns.GetByName(vwpostmpData.ColumnNames.tdesc).GetAsString()
        Else
            Entity.tdesc = String.Empty
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.waiter).IsNull = False Then
            Entity.waiter = AllColumns.GetByName(vwpostmpData.ColumnNames.waiter).GetAsString()
        Else
            Entity.waiter = String.Empty
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.Custnum).IsNull = False Then
            Entity.Custnum = AllColumns.GetByName(vwpostmpData.ColumnNames.Custnum).GetAsInteger()
        Else
            Entity.Custnum = 0
        End If

        If AllColumns.GetByName(vwpostmpData.ColumnNames.detamnt).IsNull = False Then
            Entity.detamnt = AllColumns.GetByName(vwpostmpData.ColumnNames.detamnt).GetAsDecimal()
        Else
            Entity.detamnt = 0
        End If

    End Sub
#End Region

#Region "CreateEntityFromDataRow Method"
    ''' <summary>
    ''' Creates an Entity object from a DataRow object.
    ''' </summary>
    ''' <param name="dr">DataRow object with all fields from the view in it.</param>
    ''' <returns>vwpostmp</returns>
    Public Function CreateEntityFromDataRow(ByVal dr As DataRow) As vwpostmp
        Dim entity As New vwpostmp()

        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.postmphdrid) Then
            If dr(vwpostmpData.ColumnNames.postmphdrid).Equals(DBNull.Value) = False Then
                entity.postmphdrid = Convert.ToInt32(dr(vwpostmpData.ColumnNames.postmphdrid))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.posdate) Then
            If dr(vwpostmpData.ColumnNames.posdate).Equals(DBNull.Value) = False Then
                entity.posdate = Convert.ToDateTime(dr(vwpostmpData.ColumnNames.posdate))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.custid) Then
            If dr(vwpostmpData.ColumnNames.custid).Equals(DBNull.Value) = False Then
                entity.custid = Convert.ToInt32(dr(vwpostmpData.ColumnNames.custid))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.posamnt) Then
            If dr(vwpostmpData.ColumnNames.posamnt).Equals(DBNull.Value) = False Then
                entity.posamnt = Convert.ToDecimal(dr(vwpostmpData.ColumnNames.posamnt))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.tendered) Then
            If dr(vwpostmpData.ColumnNames.tendered).Equals(DBNull.Value) = False Then
                entity.tendered = Convert.ToDecimal(dr(vwpostmpData.ColumnNames.tendered))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.Cheyns) Then
            If dr(vwpostmpData.ColumnNames.Cheyns).Equals(DBNull.Value) = False Then
                entity.Cheyns = Convert.ToDecimal(dr(vwpostmpData.ColumnNames.Cheyns))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.Sc) Then
            If dr(vwpostmpData.ColumnNames.Sc).Equals(DBNull.Value) = False Then
                entity.Sc = Convert.ToInt32(dr(vwpostmpData.ColumnNames.Sc))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.totsales) Then
            If dr(vwpostmpData.ColumnNames.totsales).Equals(DBNull.Value) = False Then
                entity.totsales = Convert.ToDecimal(dr(vwpostmpData.ColumnNames.totsales))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.lessvat) Then
            If dr(vwpostmpData.ColumnNames.lessvat).Equals(DBNull.Value) = False Then
                entity.lessvat = Convert.ToDecimal(dr(vwpostmpData.ColumnNames.lessvat))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.nov) Then
            If dr(vwpostmpData.ColumnNames.nov).Equals(DBNull.Value) = False Then
                entity.nov = Convert.ToDecimal(dr(vwpostmpData.ColumnNames.nov))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.lesssc) Then
            If dr(vwpostmpData.ColumnNames.lesssc).Equals(DBNull.Value) = False Then
                entity.lesssc = Convert.ToDecimal(dr(vwpostmpData.ColumnNames.lesssc))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.vatable) Then
            If dr(vwpostmpData.ColumnNames.vatable).Equals(DBNull.Value) = False Then
                entity.vatable = Convert.ToDecimal(dr(vwpostmpData.ColumnNames.vatable))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.exempt) Then
            If dr(vwpostmpData.ColumnNames.exempt).Equals(DBNull.Value) = False Then
                entity.exempt = Convert.ToDecimal(dr(vwpostmpData.ColumnNames.exempt))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.vatamnt) Then
            If dr(vwpostmpData.ColumnNames.vatamnt).Equals(DBNull.Value) = False Then
                entity.vatamnt = Convert.ToDecimal(dr(vwpostmpData.ColumnNames.vatamnt))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.tid) Then
            If dr(vwpostmpData.ColumnNames.tid).Equals(DBNull.Value) = False Then
                entity.tid = PDSAString.ConvertToStringTrim(dr(vwpostmpData.ColumnNames.tid))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.wtid) Then
            If dr(vwpostmpData.ColumnNames.wtid).Equals(DBNull.Value) = False Then
                entity.wtid = Convert.ToInt32(dr(vwpostmpData.ColumnNames.wtid))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.stckid) Then
            If dr(vwpostmpData.ColumnNames.stckid).Equals(DBNull.Value) = False Then
                entity.stckid = Convert.ToInt32(dr(vwpostmpData.ColumnNames.stckid))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.cost) Then
            If dr(vwpostmpData.ColumnNames.cost).Equals(DBNull.Value) = False Then
                entity.cost = Convert.ToDecimal(dr(vwpostmpData.ColumnNames.cost))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.price) Then
            If dr(vwpostmpData.ColumnNames.price).Equals(DBNull.Value) = False Then
                entity.price = Convert.ToDecimal(dr(vwpostmpData.ColumnNames.price))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.qty) Then
            If dr(vwpostmpData.ColumnNames.qty).Equals(DBNull.Value) = False Then
                entity.qty = Convert.ToDouble(dr(vwpostmpData.ColumnNames.qty))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.barcode) Then
            If dr(vwpostmpData.ColumnNames.barcode).Equals(DBNull.Value) = False Then
                entity.barcode = PDSAString.ConvertToStringTrim(dr(vwpostmpData.ColumnNames.barcode))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.itemdesc) Then
            If dr(vwpostmpData.ColumnNames.itemdesc).Equals(DBNull.Value) = False Then
                entity.itemdesc = PDSAString.ConvertToStringTrim(dr(vwpostmpData.ColumnNames.itemdesc))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.tdesc) Then
            If dr(vwpostmpData.ColumnNames.tdesc).Equals(DBNull.Value) = False Then
                entity.tdesc = PDSAString.ConvertToStringTrim(dr(vwpostmpData.ColumnNames.tdesc))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.waiter) Then
            If dr(vwpostmpData.ColumnNames.waiter).Equals(DBNull.Value) = False Then
                entity.waiter = PDSAString.ConvertToStringTrim(dr(vwpostmpData.ColumnNames.waiter))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.Custnum) Then
            If dr(vwpostmpData.ColumnNames.Custnum).Equals(DBNull.Value) = False Then
                entity.Custnum = Convert.ToInt32(dr(vwpostmpData.ColumnNames.Custnum))
            End If
        End If
        If dr.Table.Columns.Contains(vwpostmpData.ColumnNames.detamnt) Then
            If dr(vwpostmpData.ColumnNames.detamnt).Equals(DBNull.Value) = False Then
                entity.detamnt = Convert.ToDecimal(dr(vwpostmpData.ColumnNames.detamnt))
            End If
        End If
        entity.IsDirty = False

        Return entity
    End Function
#End Region

#Region "SelectSQL Method"
    ''' <summary>
    ''' Builds the SQL for the SELECT statement based on the SelectFilter property.
    ''' </summary>
    ''' <returns>string</returns>
    Public Overrides Function SelectSQL() As String
        Dim sb As StringBuilder = New StringBuilder(SB_INIT_LENGTH)

        Select Case SelectFilter
            Case SelectFilters.All
                sb.Append(" SELECT postmp_hdrid, pos_date, custid, pos_amnt, tendered, Cheyns, Sc, totsales, less_vat, nov, less_sc, vatable, exempt, vatamnt, tid, wtid, stckid, cost, price, qty, barcode, item_desc, tdesc, waiter, Custnum, det_amnt FROM dbo.vwpostmp")


            Case SelectFilters.Custom
                sb.Append(SelectCustom)

        End Select

        SQL = sb.ToString()

        Return SQL
    End Function
#End Region

#Region "RowCountSQL Method"
    ''' <summary>
    ''' Builds the SELECT Count(*) SQL that will count the number of rows.
    ''' </summary>
    ''' <returns>string</returns>
    Public Overrides Function RowCountSQL() As String
        Dim sb As StringBuilder = New StringBuilder(SB_INIT_LENGTH)

        Select Case RowCountFilter
            Case RowCountFilters.All
                sb.Append(" SELECT Count(*) As NumRecs FROM dbo.vwpostmp")


            Case RowCountFilters.Custom
                sb.Append(RowCountCustom)

        End Select

        sb.Append(WhereClauseSQL())

        SQL = sb.ToString()

        Return SQL
    End Function
#End Region

#Region "WhereClauseSQL Method"
    ''' <summary>
    ''' Builds the WHERE clause to be used in combination with a SELECT statement.
    ''' </summary>
    ''' <returns>string</returns>
    Public Overrides Function WhereClauseSQL() As String
        Dim sb As StringBuilder = New StringBuilder(SB_INIT_LENGTH)

        Select Case WhereFilter
            Case WhereFilters.Custom
                sb.Append(WhereCustom)

            Case WhereFilters.None
                ' Do nothing

            Case WhereFilters.barcodes
                sb.Append(" WHERE barcode  =  @barcode")


            Case WhereFilters.betwin
                sb.Append(" WHERE pos_date  BETWEEN  @pos_date AND @pos_date")


            Case WhereFilters.LikeItems
                sb.Append(" WHERE item_desc  LIKE  @item_desc")


            Case WhereFilters.Liketid
                sb.Append(" WHERE tid LIKE @tid")


            Case WhereFilters.salesid
                sb.Append(" WHERE postmp_hdrid  =  @postmp_hdrid")


            Case WhereFilters.tid
                sb.Append(" WHERE tid = @tid")


        End Select

        Return sb.ToString()
    End Function
#End Region

#Region "WhereClauseFillInParameters Method"
    ''' <summary>
    ''' Builds the CommandObject.Parameters collection for any WHERE clause parameters.
    ''' </summary>
    Protected Overrides Sub WhereClauseFillInParameters()
        Select Case WhereFilter
            Case WhereFilters.barcodes
                CommandObject.Parameters.Add(DataProvider.CreateParameter("barcode", DbType.String, Entity.barcode))
            Case WhereFilters.betwin
                CommandObject.Parameters.Add(DataProvider.CreateParameter("pos_date", DbType.Date, Entity.posdate))
            Case WhereFilters.LikeItems
                CommandObject.Parameters.Add(DataProvider.CreateParameter("item_desc", DbType.String, Entity.itemdesc))
            Case WhereFilters.Liketid
                CommandObject.Parameters.Add(DataProvider.CreateParameter("tid", DbType.String, Entity.tid))
            Case WhereFilters.salesid
                CommandObject.Parameters.Add(DataProvider.CreateParameter("postmp_hdrid", DbType.Int32, Entity.postmphdrid))
            Case WhereFilters.tid
                CommandObject.Parameters.Add(DataProvider.CreateParameter("tid", DbType.String, Entity.tid))

        End Select
    End Sub
#End Region

#Region "OrderByClauseSQL Method"
    ''' <summary>
    ''' Builds the ORDER BY clause to be used in combination with a SELECT statement.
    ''' </summary>
    ''' <returns>string</returns>
    Public Overrides Function OrderByClauseSQL() As String
        Dim sb As StringBuilder = New StringBuilder(SB_INIT_LENGTH)

        Select Case OrderByFilter
            Case OrderByFilters.None
                '  Do Nothing

            Case OrderByFilters.Custom
                sb.Append(OrderByCustom)

            Case OrderByFilters.posdeyt
                sb.Append(" ORDER BY pos_date")

            Case OrderByFilters.saleid
                sb.Append(" ORDER BY postmp_hdrid DESC")


        End Select

        Return sb.ToString()
    End Function
#End Region

#Region "ColumnNames Class"
    ''' <summary>
    ''' Contains static string properties that represent the name of each property in the Product class.
    ''' This class is generated by the Haystack Code Generator for .NET.
    ''' Do not modify this class or add methods as it is intended to be able to be re-generated at any ti
    ''' </summary>
    Public Class ColumnNames
        ''' <summary>
        ''' Returns 'postmp_hdrid'
        ''' </summary>
        Public Shared ReadOnly Property postmphdrid() As String
            Get
                Return "postmp_hdrid"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'pos_date'
        ''' </summary>
        Public Shared ReadOnly Property posdate() As String
            Get
                Return "pos_date"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'custid'
        ''' </summary>
        Public Shared ReadOnly Property custid() As String
            Get
                Return "custid"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'pos_amnt'
        ''' </summary>
        Public Shared ReadOnly Property posamnt() As String
            Get
                Return "pos_amnt"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'tendered'
        ''' </summary>
        Public Shared ReadOnly Property tendered() As String
            Get
                Return "tendered"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'Cheyns'
        ''' </summary>
        Public Shared ReadOnly Property Cheyns() As String
            Get
                Return "Cheyns"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'Sc'
        ''' </summary>
        Public Shared ReadOnly Property Sc() As String
            Get
                Return "Sc"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'totsales'
        ''' </summary>
        Public Shared ReadOnly Property totsales() As String
            Get
                Return "totsales"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'less_vat'
        ''' </summary>
        Public Shared ReadOnly Property lessvat() As String
            Get
                Return "less_vat"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'nov'
        ''' </summary>
        Public Shared ReadOnly Property nov() As String
            Get
                Return "nov"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'less_sc'
        ''' </summary>
        Public Shared ReadOnly Property lesssc() As String
            Get
                Return "less_sc"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'vatable'
        ''' </summary>
        Public Shared ReadOnly Property vatable() As String
            Get
                Return "vatable"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'exempt'
        ''' </summary>
        Public Shared ReadOnly Property exempt() As String
            Get
                Return "exempt"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'vatamnt'
        ''' </summary>
        Public Shared ReadOnly Property vatamnt() As String
            Get
                Return "vatamnt"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'tid'
        ''' </summary>
        Public Shared ReadOnly Property tid() As String
            Get
                Return "tid"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'wtid'
        ''' </summary>
        Public Shared ReadOnly Property wtid() As String
            Get
                Return "wtid"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'stckid'
        ''' </summary>
        Public Shared ReadOnly Property stckid() As String
            Get
                Return "stckid"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'cost'
        ''' </summary>
        Public Shared ReadOnly Property cost() As String
            Get
                Return "cost"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'price'
        ''' </summary>
        Public Shared ReadOnly Property price() As String
            Get
                Return "price"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'qty'
        ''' </summary>
        Public Shared ReadOnly Property qty() As String
            Get
                Return "qty"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'barcode'
        ''' </summary>
        Public Shared ReadOnly Property barcode() As String
            Get
                Return "barcode"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'item_desc'
        ''' </summary>
        Public Shared ReadOnly Property itemdesc() As String
            Get
                Return "item_desc"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'tdesc'
        ''' </summary>
        Public Shared ReadOnly Property tdesc() As String
            Get
                Return "tdesc"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'waiter'
        ''' </summary>
        Public Shared ReadOnly Property waiter() As String
            Get
                Return "waiter"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'Custnum'
        ''' </summary>
        Public Shared ReadOnly Property Custnum() As String
            Get
                Return "Custnum"
            End Get
        End Property
        ''' <summary>
        ''' Returns 'det_amnt'
        ''' </summary>
        Public Shared ReadOnly Property detamnt() As String
            Get
                Return "det_amnt"
            End Get
        End Property
    End Class
#End Region
End Class
